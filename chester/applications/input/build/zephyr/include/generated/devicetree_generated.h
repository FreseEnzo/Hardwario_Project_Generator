/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/frese/Documents/chester-app/chester/applications/input/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /home/frese/Documents/chester-app/vendor/dts/bindings, /home/frese/Documents/chester-app/chester/dts/bindings, /home/frese/Documents/chester-app/nrf/dts/bindings, /home/frese/Documents/chester-app/chester/boards/arm/chester_nrf52840/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /soc
 *   4   /soc/gpio@50000300
 *   5   /ctr_batt
 *   6   /soc/gpio@50000000
 *   7   /ctr_gpio
 *   8   /ctr_rfmux
 *   9   /ctr_rfmux_antenna
 *   10  /ctr_rfmux_interface
 *   11  /pin-controller
 *   12  /pin-controller/i2c0_default
 *   13  /pin-controller/i2c0_sleep
 *   14  /soc/interrupt-controller@e000e100
 *   15  /soc/i2c@40003000
 *   16  /soc/i2c@40003000/ctr_x0_pcal6416a_a@20
 *   17  /ctr_x0_a
 *   18  /soc/i2c@40003000/ctr_x0_pcal6416a_b@21
 *   19  /ctr_x0_b
 *   20  /ctr_x10
 *   21  /ctr_x3_a
 *   22  /ctr_x3_b
 *   23  /ctr_x4_a
 *   24  /ctr_x4_b
 *   25  /entropy_bt_hci
 *   26  /soc/timer@40009000
 *   27  /sw-pwm
 *   28  /soc/i2c@40003000/tla2021@4b
 *   29  /vbatt
 *   30  /cpus
 *   31  /cpus/cpu@0
 *   32  /cpus/cpu@0/itm@e0000000
 *   33  /gpio_keys
 *   34  /gpio_keys/btn_ext
 *   35  /gpio_keys/btn_int
 *   36  /gpio_keys/tamper_key
 *   37  /gpio_leds
 *   38  /gpio_leds/led_ext
 *   39  /gpio_leds/led_g
 *   40  /gpio_leds/led_load
 *   41  /gpio_leds/led_r
 *   42  /gpio_leds/led_y
 *   43  /pin-controller/i2c0_default/group1
 *   44  /pin-controller/i2c0_sleep/group1
 *   45  /pin-controller/pwm0_default
 *   46  /pin-controller/pwm0_default/group1
 *   47  /pin-controller/pwm0_sleep
 *   48  /pin-controller/pwm0_sleep/group1
 *   49  /pin-controller/spi1_default
 *   50  /pin-controller/spi1_default/group1
 *   51  /pin-controller/spi1_default/group2
 *   52  /pin-controller/spi1_sleep
 *   53  /pin-controller/spi1_sleep/group1
 *   54  /pin-controller/uart0_default
 *   55  /pin-controller/uart0_default/group1
 *   56  /pin-controller/uart0_default/group2
 *   57  /pin-controller/uart0_sleep
 *   58  /pin-controller/uart0_sleep/group1
 *   59  /pin-controller/uart1_default
 *   60  /pin-controller/uart1_default/group1
 *   61  /pin-controller/uart1_default/group2
 *   62  /pin-controller/uart1_sleep
 *   63  /pin-controller/uart1_sleep/group1
 *   64  /pwm_leds
 *   65  /soc/pwm@4001c000
 *   66  /pwm_leds/pwm_led_ext
 *   67  /pwm_leds/pwm_led_g
 *   68  /pwm_leds/pwm_led_r
 *   69  /pwm_leds/pwm_led_y
 *   70  /soc/acl@4001e000
 *   71  /soc/adc@40007000
 *   72  /soc/ccm@4000f000
 *   73  /soc/clock@40000000
 *   74  /soc/comparator@40013000
 *   75  /soc/ecb@4000e000
 *   76  /soc/egu@40014000
 *   77  /soc/egu@40015000
 *   78  /soc/egu@40016000
 *   79  /soc/egu@40017000
 *   80  /soc/egu@40018000
 *   81  /soc/egu@40019000
 *   82  /soc/ficr@10000000
 *   83  /soc/gpiote@40006000
 *   84  /soc/i2c@40004000
 *   85  /soc/i2s@40025000
 *   86  /soc/memory@20000000
 *   87  /soc/mwu@40020000
 *   88  /soc/nfct@40005000
 *   89  /soc/pdm@4001d000
 *   90  /soc/ppi@4001f000
 *   91  /soc/pwm@40021000
 *   92  /soc/pwm@40022000
 *   93  /soc/pwm@4002d000
 *   94  /soc/qdec@40012000
 *   95  /soc/qspi@40029000
 *   96  /soc/random@4000d000
 *   97  /soc/rtc@4000b000
 *   98  /soc/rtc@40011000
 *   99  /soc/rtc@40024000
 *   100 /soc/spi@40003000
 *   101 /soc/spi@40023000
 *   102 /soc/spi@4002f000
 *   103 /soc/temp@4000c000
 *   104 /soc/timer@40008000
 *   105 /soc/timer@4000a000
 *   106 /soc/timer@4001a000
 *   107 /soc/timer@4001b000
 *   108 /soc/timer@e000e010
 *   109 /soc/uicr@10001000
 *   110 /soc/usbd@40027000
 *   111 /soc/watchdog@40010000
 *   112 /soc/crypto@5002a000
 *   113 /soc/crypto@5002a000/crypto@5002b000
 *   114 /soc/flash-controller@4001e000
 *   115 /soc/flash-controller@4001e000/flash@0
 *   116 /soc/flash-controller@4001e000/flash@0/partitions
 *   117 /soc/flash-controller@4001e000/flash@0/partitions/partition@0
 *   118 /soc/flash-controller@4001e000/flash@0/partitions/partition@c000
 *   119 /soc/flash-controller@4001e000/flash@0/partitions/partition@73000
 *   120 /soc/flash-controller@4001e000/flash@0/partitions/partition@da000
 *   121 /soc/flash-controller@4001e000/flash@0/partitions/partition@f8000
 *   122 /soc/i2c@40003000/ctr_barometer_tag@60
 *   123 /soc/i2c@40003000/ctr_s1@11
 *   124 /soc/i2c@40003000/ctr_x10_tla2024@49
 *   125 /soc/i2c@40003000/ctr_x3_ads122c04_a1@46
 *   126 /soc/i2c@40003000/ctr_x3_ads122c04_a2@47
 *   127 /soc/i2c@40003000/ctr_x3_ads122c04_b1@4a
 *   128 /soc/i2c@40003000/ctr_x3_ads122c04b2@4f
 *   129 /soc/i2c@40003000/ctr_x4_tla2021@49
 *   130 /soc/i2c@40003000/ctr_z@10
 *   131 /soc/i2c@40003000/lis2dh12@19
 *   132 /soc/i2c@40003000/m8@42
 *   133 /soc/i2c@40003000/sht30@44
 *   134 /soc/i2c@40003000/sht30_ext@45
 *   135 /soc/i2c@40003000/tmp112@48
 *   136 /soc/i2c@40003000/uart@50
 *   137 /soc/i2c@40003000/uart@51
 *   138 /soc/i2c@40003000/ds2484@18
 *   139 /soc/i2c@40003000/ds2484@18/ds18b20_0
 *   140 /soc/i2c@40003000/ds2484@18/ds18b20_1
 *   141 /soc/i2c@40003000/ds2484@18/ds18b20_2
 *   142 /soc/i2c@40003000/ds2484@18/ds18b20_3
 *   143 /soc/i2c@40003000/ds2484@18/ds18b20_4
 *   144 /soc/i2c@40003000/ds2484@18/ds18b20_5
 *   145 /soc/i2c@40003000/ds2484@18/ds18b20_6
 *   146 /soc/i2c@40003000/ds2484@18/ds18b20_7
 *   147 /soc/i2c@40003000/ds2484@18/ds18b20_8
 *   148 /soc/i2c@40003000/ds2484@18/ds18b20_9
 *   149 /soc/i2c@40003000/tla2021@4b/channel@0
 *   150 /soc/power@40000000
 *   151 /soc/power@40000000/gpregret1@4000051c
 *   152 /soc/power@40000000/gpregret2@40000520
 *   153 /soc/radio@40001000
 *   154 /soc/radio@40001000/ieee802154
 *   155 /soc/spi@40004000
 *   156 /soc/spi@40004000/at45db641e@0
 *   157 /soc/uart@40002000
 *   158 /soc/uart@40002000/ctr_lte_if
 *   159 /soc/uart@40028000
 *   160 /soc/uart@40028000/ctr_lrw_if
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helper macros for child nodes of this node. */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_sw_pwm) fn(DT_N_S_cpus) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_leds) fn(DT_N_S_pwm_leds) fn(DT_N_S_vbatt) fn(DT_N_S_ctr_rfmux_interface) fn(DT_N_S_ctr_rfmux_antenna) fn(DT_N_S_ctr_gpio) fn(DT_N_S_ctr_batt) fn(DT_N_S_ctr_rfmux) fn(DT_N_S_ctr_x0_a) fn(DT_N_S_ctr_x0_b) fn(DT_N_S_ctr_x3_a) fn(DT_N_S_ctr_x3_b) fn(DT_N_S_ctr_x4_a) fn(DT_N_S_ctr_x4_b) fn(DT_N_S_ctr_x10)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sw_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux_interface) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux_antenna) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_gpio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_batt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x0_a) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x0_b) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x3_a) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x3_b) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x4_a) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x4_b) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x10)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_sw_pwm, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_leds, __VA_ARGS__) fn(DT_N_S_pwm_leds, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_ctr_rfmux_interface, __VA_ARGS__) fn(DT_N_S_ctr_rfmux_antenna, __VA_ARGS__) fn(DT_N_S_ctr_gpio, __VA_ARGS__) fn(DT_N_S_ctr_batt, __VA_ARGS__) fn(DT_N_S_ctr_rfmux, __VA_ARGS__) fn(DT_N_S_ctr_x0_a, __VA_ARGS__) fn(DT_N_S_ctr_x0_b, __VA_ARGS__) fn(DT_N_S_ctr_x3_a, __VA_ARGS__) fn(DT_N_S_ctr_x3_b, __VA_ARGS__) fn(DT_N_S_ctr_x4_a, __VA_ARGS__) fn(DT_N_S_ctr_x4_b, __VA_ARGS__) fn(DT_N_S_ctr_x10, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sw_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux_interface, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux_antenna, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_gpio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_batt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x0_a, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x0_b, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x3_a, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x3_b, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x4_a, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x4_b, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x10, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_cpus) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_leds) fn(DT_N_S_pwm_leds) fn(DT_N_S_vbatt) fn(DT_N_S_ctr_rfmux_interface) fn(DT_N_S_ctr_rfmux_antenna) fn(DT_N_S_ctr_gpio) fn(DT_N_S_ctr_batt) fn(DT_N_S_ctr_rfmux) fn(DT_N_S_ctr_x0_a)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux_interface) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux_antenna) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_gpio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_batt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x0_a)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_leds, __VA_ARGS__) fn(DT_N_S_pwm_leds, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_ctr_rfmux_interface, __VA_ARGS__) fn(DT_N_S_ctr_rfmux_antenna, __VA_ARGS__) fn(DT_N_S_ctr_gpio, __VA_ARGS__) fn(DT_N_S_ctr_batt, __VA_ARGS__) fn(DT_N_S_ctr_rfmux, __VA_ARGS__) fn(DT_N_S_ctr_x0_a, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vbatt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux_interface, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux_antenna, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_gpio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_batt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_rfmux, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ctr_x0_a, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /soc */ \
	5, /* /ctr_batt */ \
	7, /* /ctr_gpio */ \
	8, /* /ctr_rfmux */ \
	9, /* /ctr_rfmux_antenna */ \
	10, /* /ctr_rfmux_interface */ \
	11, /* /pin-controller */ \
	17, /* /ctr_x0_a */ \
	19, /* /ctr_x0_b */ \
	20, /* /ctr_x10 */ \
	21, /* /ctr_x3_a */ \
	22, /* /ctr_x3_b */ \
	23, /* /ctr_x4_a */ \
	24, /* /ctr_x4_b */ \
	25, /* /entropy_bt_hci */ \
	27, /* /sw-pwm */ \
	29, /* /vbatt */ \
	30, /* /cpus */ \
	33, /* /gpio_keys */ \
	37, /* /gpio_leds */ \
	64, /* /pwm_leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_hardwario_chester_nrf52840 DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_hardwario_chester_nrf52840 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "chester-nrf52840"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"hardwario,chester-nrf52840"}
#define DT_N_P_compatible_IDX_0 "hardwario,chester-nrf52840"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED hardwario,chester-nrf52840
#define DT_N_P_compatible_IDX_0_STRING_TOKEN hardwario_chester_nrf52840
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CHESTER_NRF52840
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_uart_40002000) fn(DT_N_S_soc_S_i2c_40003000) fn(DT_N_S_soc_S_spi_40003000) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_spi_40004000) fn(DT_N_S_soc_S_nfct_40005000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_timer_40008000) fn(DT_N_S_soc_S_timer_40009000) fn(DT_N_S_soc_S_timer_4000a000) fn(DT_N_S_soc_S_rtc_4000b000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_rtc_40011000) fn(DT_N_S_soc_S_qdec_40012000) fn(DT_N_S_soc_S_comparator_40013000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_timer_4001a000) fn(DT_N_S_soc_S_timer_4001b000) fn(DT_N_S_soc_S_pwm_4001c000) fn(DT_N_S_soc_S_pdm_4001d000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_pwm_40021000) fn(DT_N_S_soc_S_pwm_40022000) fn(DT_N_S_soc_S_spi_40023000) fn(DT_N_S_soc_S_rtc_40024000) fn(DT_N_S_soc_S_i2s_40025000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_uart_40028000) fn(DT_N_S_soc_S_qspi_40029000) fn(DT_N_S_soc_S_pwm_4002d000) fn(DT_N_S_soc_S_spi_4002f000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_soc_S_crypto_5002a000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nfct_40005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4000a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_4000b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40011000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_40012000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_comparator_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4001c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pdm_4001d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40023000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40024000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40025000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40027000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4002d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4002f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_crypto_5002a000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_qdec_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_comparator_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_pdm_4001d000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40023000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40025000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4002d000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4002f000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qdec_40012000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_comparator_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pdm_4001d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40023000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_40025000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4002d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4002f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_uart_40002000) fn(DT_N_S_soc_S_i2c_40003000) fn(DT_N_S_soc_S_spi_40004000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_pwm_4001c000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_soc_S_crypto_5002a000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4001c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_crypto_5002a000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 3
#define DT_N_S_soc_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	4, /* /soc/gpio@50000300 */ \
	6, /* /soc/gpio@50000000 */ \
	14, /* /soc/interrupt-controller@e000e100 */ \
	15, /* /soc/i2c@40003000 */ \
	26, /* /soc/timer@40009000 */ \
	65, /* /soc/pwm@4001c000 */ \
	70, /* /soc/acl@4001e000 */ \
	71, /* /soc/adc@40007000 */ \
	72, /* /soc/ccm@4000f000 */ \
	73, /* /soc/clock@40000000 */ \
	74, /* /soc/comparator@40013000 */ \
	75, /* /soc/ecb@4000e000 */ \
	76, /* /soc/egu@40014000 */ \
	77, /* /soc/egu@40015000 */ \
	78, /* /soc/egu@40016000 */ \
	79, /* /soc/egu@40017000 */ \
	80, /* /soc/egu@40018000 */ \
	81, /* /soc/egu@40019000 */ \
	82, /* /soc/ficr@10000000 */ \
	83, /* /soc/gpiote@40006000 */ \
	84, /* /soc/i2c@40004000 */ \
	85, /* /soc/i2s@40025000 */ \
	86, /* /soc/memory@20000000 */ \
	87, /* /soc/mwu@40020000 */ \
	88, /* /soc/nfct@40005000 */ \
	89, /* /soc/pdm@4001d000 */ \
	90, /* /soc/ppi@4001f000 */ \
	91, /* /soc/pwm@40021000 */ \
	92, /* /soc/pwm@40022000 */ \
	93, /* /soc/pwm@4002d000 */ \
	94, /* /soc/qdec@40012000 */ \
	95, /* /soc/qspi@40029000 */ \
	96, /* /soc/random@4000d000 */ \
	97, /* /soc/rtc@4000b000 */ \
	98, /* /soc/rtc@40011000 */ \
	99, /* /soc/rtc@40024000 */ \
	100, /* /soc/spi@40003000 */ \
	101, /* /soc/spi@40023000 */ \
	102, /* /soc/spi@4002f000 */ \
	103, /* /soc/temp@4000c000 */ \
	104, /* /soc/timer@40008000 */ \
	105, /* /soc/timer@4000a000 */ \
	106, /* /soc/timer@4001a000 */ \
	107, /* /soc/timer@4001b000 */ \
	108, /* /soc/timer@e000e010 */ \
	109, /* /soc/uicr@10001000 */ \
	110, /* /soc/usbd@40027000 */ \
	111, /* /soc/watchdog@40010000 */ \
	112, /* /soc/crypto@5002a000 */ \
	114, /* /soc/flash-controller@4001e000 */ \
	150, /* /soc/power@40000000 */ \
	153, /* /soc/radio@40001000 */ \
	155, /* /soc/spi@40004000 */ \
	157, /* /soc/uart@40002000 */ \
	159, /* /soc/uart@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_nordic_nrf52840_qiaa DT_N_S_soc
#define DT_N_INST_0_nordic_nrf52840      DT_N_S_soc
#define DT_N_INST_0_nordic_nrf52         DT_N_S_soc
#define DT_N_INST_0_simple_bus           DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52840_qiaa 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "nrf52840-qiaa"
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52840 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_1 "nrf52840"
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_2 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_2 "nrf52"
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"nordic,nrf52840-qiaa", "nordic,nrf52840", "nordic,nrf52", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "nordic,nrf52840-qiaa"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf52840-qiaa
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN nordic_nrf52840_qiaa
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF52840_QIAA
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "nordic,nrf52840"
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf52840
#define DT_N_S_soc_P_compatible_IDX_1_STRING_TOKEN nordic_nrf52840
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF52840
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "nordic,nrf52"
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UNQUOTED nordic,nrf52
#define DT_N_S_soc_P_compatible_IDX_2_STRING_TOKEN nordic_nrf52
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UPPER_TOKEN NORDIC_NRF52
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_3 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_3_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_3_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_3_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_3_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2) \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 4
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/gpio@50000300
 *
 * Node identifier: DT_N_S_soc_S_gpio_50000300
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_50000300_PATH "/soc/gpio@50000300"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_50000300_FULL_NAME "gpio@50000300"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_50000300_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_50000300_CHILD_IDX 53

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_50000300_ORD 4
#define DT_N_S_soc_S_gpio_50000300_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_50000300_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_50000300_SUPPORTS_ORDS \
	5, /* /ctr_batt */ \
	8, /* /ctr_rfmux */ \
	10, /* /ctr_rfmux_interface */ \
	29, /* /vbatt */ \
	38, /* /gpio_leds/led_ext */ \
	39, /* /gpio_leds/led_g */ \
	40, /* /gpio_leds/led_load */ \
	41, /* /gpio_leds/led_r */ \
	42, /* /gpio_leds/led_y */ \
	123, /* /soc/i2c@40003000/ctr_s1@11 */ \
	130, /* /soc/i2c@40003000/ctr_z@10 */ \
	132, /* /soc/i2c@40003000/m8@42 */ \
	138, /* /soc/i2c@40003000/ds2484@18 */ \
	158, /* /soc/uart@40002000/ctr_lte_if */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_50000300_EXISTS 1
#define DT_N_INST_1_nordic_nrf_gpio DT_N_S_soc_S_gpio_50000300
#define DT_N_NODELABEL_gpio1        DT_N_S_soc_S_gpio_50000300

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_50000300_REG_NUM 2
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_VAL_ADDRESS 1342178048 /* 0x50000300 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_VAL_ADDRESS 1342179328 /* 0x50000800 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_50000300_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_50000300_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_50000300_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_50000300_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_50000300_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpio_50000300_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_COMPAT_MODEL_IDX_0 "nrf-gpio"
#define DT_N_S_soc_S_gpio_50000300_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_50000300_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_50000300_P_reg {1342178048 /* 0x50000300 */, 512 /* 0x200 */, 1342179328 /* 0x50000800 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_0 1342178048
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_1 512
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_2 1342179328
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_3 768
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_port 1
#define DT_N_S_soc_S_gpio_50000300_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_50000300_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_ngpios 16
#define DT_N_S_soc_S_gpio_50000300_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_status "okay"
#define DT_N_S_soc_S_gpio_50000300_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_50000300_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_50000300_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000300_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_50000300_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000300, status, 0)
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000300, status, 0)
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000300, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000300, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_status_LEN 1
#define DT_N_S_soc_S_gpio_50000300_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpio
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpio
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIO
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_50000300_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_50000300_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ctr_batt
 *
 * Node identifier: DT_N_S_ctr_batt
 *
 * Binding (compatible = hardwario,ctr-batt):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-batt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_batt_PATH "/ctr_batt"

/* Node's name with unit-address: */
#define DT_N_S_ctr_batt_FULL_NAME "ctr_batt"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_batt_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_batt_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_batt_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_batt_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_batt_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_batt_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_batt_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_batt_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_batt_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_batt_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_batt_ORD 5
#define DT_N_S_ctr_batt_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_batt_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /soc/gpio@50000300 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_batt_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_batt_EXISTS 1
#define DT_N_INST_0_hardwario_ctr_batt DT_N_S_ctr_batt
#define DT_N_NODELABEL_ctr_batt        DT_N_S_ctr_batt

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_batt_REG_NUM 0
#define DT_N_S_ctr_batt_RANGES_NUM 0
#define DT_N_S_ctr_batt_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_batt_IRQ_NUM 0
#define DT_N_S_ctr_batt_COMPAT_MATCHES_hardwario_ctr_batt 1
#define DT_N_S_ctr_batt_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_batt_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_ctr_batt_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_batt_COMPAT_MODEL_IDX_0 "ctr-batt"
#define DT_N_S_ctr_batt_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_batt_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_batt_P_load_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_batt_P_load_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_ctr_batt_P_load_gpios_IDX_0_VAL_pin 14
#define DT_N_S_ctr_batt_P_load_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_batt_P_load_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_batt_P_load_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_batt_P_load_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_batt, load_gpios, 0)
#define DT_N_S_ctr_batt_P_load_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_batt, load_gpios, 0)
#define DT_N_S_ctr_batt_P_load_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_batt, load_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_batt_P_load_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_batt, load_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_batt_P_load_gpios_LEN 1
#define DT_N_S_ctr_batt_P_load_gpios_EXISTS 1
#define DT_N_S_ctr_batt_P_test_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_batt_P_test_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_ctr_batt_P_test_gpios_IDX_0_VAL_pin 15
#define DT_N_S_ctr_batt_P_test_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_batt_P_test_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_batt_P_test_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_batt_P_test_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_batt, test_gpios, 0)
#define DT_N_S_ctr_batt_P_test_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_batt, test_gpios, 0)
#define DT_N_S_ctr_batt_P_test_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_batt, test_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_batt_P_test_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_batt, test_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_batt_P_test_gpios_LEN 1
#define DT_N_S_ctr_batt_P_test_gpios_EXISTS 1
#define DT_N_S_ctr_batt_P_load_resistor 100
#define DT_N_S_ctr_batt_P_load_resistor_EXISTS 1
#define DT_N_S_ctr_batt_P_divider_r1 10
#define DT_N_S_ctr_batt_P_divider_r1_EXISTS 1
#define DT_N_S_ctr_batt_P_divider_r2 5
#define DT_N_S_ctr_batt_P_divider_r2_EXISTS 1
#define DT_N_S_ctr_batt_P_compatible {"hardwario,ctr-batt"}
#define DT_N_S_ctr_batt_P_compatible_IDX_0 "hardwario,ctr-batt"
#define DT_N_S_ctr_batt_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-batt
#define DT_N_S_ctr_batt_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_batt
#define DT_N_S_ctr_batt_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_BATT
#define DT_N_S_ctr_batt_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_batt_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_batt, compatible, 0)
#define DT_N_S_ctr_batt_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_batt, compatible, 0)
#define DT_N_S_ctr_batt_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_batt, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_batt_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_batt, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_batt_P_compatible_LEN 1
#define DT_N_S_ctr_batt_P_compatible_EXISTS 1
#define DT_N_S_ctr_batt_P_wakeup_source 0
#define DT_N_S_ctr_batt_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_batt_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_batt_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@50000000
 *
 * Node identifier: DT_N_S_soc_S_gpio_50000000
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_50000000_PATH "/soc/gpio@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_50000000_FULL_NAME "gpio@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_50000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_50000000_CHILD_IDX 52

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_50000000_ORD 6
#define DT_N_S_soc_S_gpio_50000000_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_50000000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_50000000_SUPPORTS_ORDS \
	7, /* /ctr_gpio */ \
	8, /* /ctr_rfmux */ \
	9, /* /ctr_rfmux_antenna */ \
	10, /* /ctr_rfmux_interface */ \
	17, /* /ctr_x0_a */ \
	19, /* /ctr_x0_b */ \
	21, /* /ctr_x3_a */ \
	22, /* /ctr_x3_b */ \
	23, /* /ctr_x4_a */ \
	24, /* /ctr_x4_b */ \
	34, /* /gpio_keys/btn_ext */ \
	35, /* /gpio_keys/btn_int */ \
	36, /* /gpio_keys/tamper_key */ \
	131, /* /soc/i2c@40003000/lis2dh12@19 */ \
	136, /* /soc/i2c@40003000/uart@50 */ \
	137, /* /soc/i2c@40003000/uart@51 */ \
	155, /* /soc/spi@40004000 */ \
	158, /* /soc/uart@40002000/ctr_lte_if */ \
	160, /* /soc/uart@40028000/ctr_lrw_if */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_50000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpio DT_N_S_soc_S_gpio_50000000
#define DT_N_NODELABEL_gpio0        DT_N_S_soc_S_gpio_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_50000000_REG_NUM 2
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_VAL_ADDRESS 1342178560 /* 0x50000500 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_50000000_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_50000000_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_50000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpio_50000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_COMPAT_MODEL_IDX_0 "nrf-gpio"
#define DT_N_S_soc_S_gpio_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_50000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_50000000_P_reg {1342177280 /* 0x50000000 */, 512 /* 0x200 */, 1342178560 /* 0x50000500 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_1 512
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_2 1342178560
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_3 768
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_port 0
#define DT_N_S_soc_S_gpio_50000000_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_50000000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_ngpios 32
#define DT_N_S_soc_S_gpio_50000000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_status "okay"
#define DT_N_S_soc_S_gpio_50000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_50000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_50000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_50000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000000, status, 0)
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000000, status, 0)
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpio
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpio
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIO
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_50000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_50000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ctr_gpio
 *
 * Node identifier: DT_N_S_ctr_gpio
 *
 * Binding (compatible = hardwario,ctr-gpio):
 *   /home/frese/Documents/chester-app/chester/boards/arm/chester_nrf52840/dts/bindings/hardwario,ctr-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_gpio_PATH "/ctr_gpio"

/* Node's name with unit-address: */
#define DT_N_S_ctr_gpio_FULL_NAME "ctr_gpio"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_gpio_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_gpio_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_gpio_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_gpio_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_gpio_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_gpio_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_gpio_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_gpio_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_gpio_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_gpio_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_gpio_ORD 7
#define DT_N_S_ctr_gpio_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_gpio_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_gpio_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_gpio_EXISTS 1
#define DT_N_INST_0_hardwario_ctr_gpio DT_N_S_ctr_gpio
#define DT_N_NODELABEL_ctr_gpio        DT_N_S_ctr_gpio

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_gpio_REG_NUM 0
#define DT_N_S_ctr_gpio_RANGES_NUM 0
#define DT_N_S_ctr_gpio_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_gpio_IRQ_NUM 0
#define DT_N_S_ctr_gpio_COMPAT_MATCHES_hardwario_ctr_gpio 1
#define DT_N_S_ctr_gpio_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_gpio_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_ctr_gpio_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_gpio_COMPAT_MODEL_IDX_0 "ctr-gpio"
#define DT_N_S_ctr_gpio_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_gpio_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_gpio_P_a0_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_gpio_P_a0_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_gpio_P_a0_gpios_IDX_0_VAL_pin 3
#define DT_N_S_ctr_gpio_P_a0_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_gpio_P_a0_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_gpio_P_a0_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_gpio_P_a0_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_gpio, a0_gpios, 0)
#define DT_N_S_ctr_gpio_P_a0_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_gpio, a0_gpios, 0)
#define DT_N_S_ctr_gpio_P_a0_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_gpio, a0_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_a0_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_gpio, a0_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_a0_gpios_LEN 1
#define DT_N_S_ctr_gpio_P_a0_gpios_EXISTS 1
#define DT_N_S_ctr_gpio_P_a1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_gpio_P_a1_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_gpio_P_a1_gpios_IDX_0_VAL_pin 29
#define DT_N_S_ctr_gpio_P_a1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_gpio_P_a1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_gpio_P_a1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_gpio_P_a1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_gpio, a1_gpios, 0)
#define DT_N_S_ctr_gpio_P_a1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_gpio, a1_gpios, 0)
#define DT_N_S_ctr_gpio_P_a1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_gpio, a1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_a1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_gpio, a1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_a1_gpios_LEN 1
#define DT_N_S_ctr_gpio_P_a1_gpios_EXISTS 1
#define DT_N_S_ctr_gpio_P_a2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_gpio_P_a2_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_gpio_P_a2_gpios_IDX_0_VAL_pin 2
#define DT_N_S_ctr_gpio_P_a2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_gpio_P_a2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_gpio_P_a2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_gpio_P_a2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_gpio, a2_gpios, 0)
#define DT_N_S_ctr_gpio_P_a2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_gpio, a2_gpios, 0)
#define DT_N_S_ctr_gpio_P_a2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_gpio, a2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_a2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_gpio, a2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_a2_gpios_LEN 1
#define DT_N_S_ctr_gpio_P_a2_gpios_EXISTS 1
#define DT_N_S_ctr_gpio_P_a3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_gpio_P_a3_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_gpio_P_a3_gpios_IDX_0_VAL_pin 31
#define DT_N_S_ctr_gpio_P_a3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_gpio_P_a3_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_gpio_P_a3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_gpio_P_a3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_gpio, a3_gpios, 0)
#define DT_N_S_ctr_gpio_P_a3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_gpio, a3_gpios, 0)
#define DT_N_S_ctr_gpio_P_a3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_gpio, a3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_a3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_gpio, a3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_a3_gpios_LEN 1
#define DT_N_S_ctr_gpio_P_a3_gpios_EXISTS 1
#define DT_N_S_ctr_gpio_P_b0_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_gpio_P_b0_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_gpio_P_b0_gpios_IDX_0_VAL_pin 28
#define DT_N_S_ctr_gpio_P_b0_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_gpio_P_b0_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_gpio_P_b0_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_gpio_P_b0_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_gpio, b0_gpios, 0)
#define DT_N_S_ctr_gpio_P_b0_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_gpio, b0_gpios, 0)
#define DT_N_S_ctr_gpio_P_b0_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_gpio, b0_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_b0_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_gpio, b0_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_b0_gpios_LEN 1
#define DT_N_S_ctr_gpio_P_b0_gpios_EXISTS 1
#define DT_N_S_ctr_gpio_P_b1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_gpio_P_b1_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_gpio_P_b1_gpios_IDX_0_VAL_pin 30
#define DT_N_S_ctr_gpio_P_b1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_gpio_P_b1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_gpio_P_b1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_gpio_P_b1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_gpio, b1_gpios, 0)
#define DT_N_S_ctr_gpio_P_b1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_gpio, b1_gpios, 0)
#define DT_N_S_ctr_gpio_P_b1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_gpio, b1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_b1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_gpio, b1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_b1_gpios_LEN 1
#define DT_N_S_ctr_gpio_P_b1_gpios_EXISTS 1
#define DT_N_S_ctr_gpio_P_b2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_gpio_P_b2_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_gpio_P_b2_gpios_IDX_0_VAL_pin 4
#define DT_N_S_ctr_gpio_P_b2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_gpio_P_b2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_gpio_P_b2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_gpio_P_b2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_gpio, b2_gpios, 0)
#define DT_N_S_ctr_gpio_P_b2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_gpio, b2_gpios, 0)
#define DT_N_S_ctr_gpio_P_b2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_gpio, b2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_b2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_gpio, b2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_b2_gpios_LEN 1
#define DT_N_S_ctr_gpio_P_b2_gpios_EXISTS 1
#define DT_N_S_ctr_gpio_P_b3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_gpio_P_b3_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_gpio_P_b3_gpios_IDX_0_VAL_pin 5
#define DT_N_S_ctr_gpio_P_b3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_gpio_P_b3_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_gpio_P_b3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_gpio_P_b3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_gpio, b3_gpios, 0)
#define DT_N_S_ctr_gpio_P_b3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_gpio, b3_gpios, 0)
#define DT_N_S_ctr_gpio_P_b3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_gpio, b3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_b3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_gpio, b3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_b3_gpios_LEN 1
#define DT_N_S_ctr_gpio_P_b3_gpios_EXISTS 1
#define DT_N_S_ctr_gpio_P_compatible {"hardwario,ctr-gpio"}
#define DT_N_S_ctr_gpio_P_compatible_IDX_0 "hardwario,ctr-gpio"
#define DT_N_S_ctr_gpio_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-gpio
#define DT_N_S_ctr_gpio_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_gpio
#define DT_N_S_ctr_gpio_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_GPIO
#define DT_N_S_ctr_gpio_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_gpio_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_gpio, compatible, 0)
#define DT_N_S_ctr_gpio_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_gpio, compatible, 0)
#define DT_N_S_ctr_gpio_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_gpio, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_gpio, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_gpio_P_compatible_LEN 1
#define DT_N_S_ctr_gpio_P_compatible_EXISTS 1
#define DT_N_S_ctr_gpio_P_wakeup_source 0
#define DT_N_S_ctr_gpio_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_gpio_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_gpio_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ctr_rfmux
 *
 * Node identifier: DT_N_S_ctr_rfmux
 *
 * Binding (compatible = hardwario,ctr-rfmux):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-rfmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_rfmux_PATH "/ctr_rfmux"

/* Node's name with unit-address: */
#define DT_N_S_ctr_rfmux_FULL_NAME "ctr_rfmux"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_rfmux_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_rfmux_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_rfmux_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_rfmux_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_rfmux_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_rfmux_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_rfmux_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_rfmux_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_rfmux_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_rfmux_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_rfmux_ORD 8
#define DT_N_S_ctr_rfmux_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_rfmux_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /soc/gpio@50000300 */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_rfmux_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_rfmux_EXISTS 1
#define DT_N_INST_0_hardwario_ctr_rfmux DT_N_S_ctr_rfmux
#define DT_N_NODELABEL_ctr_rfmux        DT_N_S_ctr_rfmux

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_rfmux_REG_NUM 0
#define DT_N_S_ctr_rfmux_RANGES_NUM 0
#define DT_N_S_ctr_rfmux_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_rfmux_IRQ_NUM 0
#define DT_N_S_ctr_rfmux_COMPAT_MATCHES_hardwario_ctr_rfmux 1
#define DT_N_S_ctr_rfmux_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_ctr_rfmux_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_COMPAT_MODEL_IDX_0 "ctr-rfmux"
#define DT_N_S_ctr_rfmux_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_rfmux_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_IDX_0_VAL_pin 25
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_rfmux, rf_lte_gpios, 0)
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_rfmux, rf_lte_gpios, 0)
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_rfmux, rf_lte_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_rfmux, rf_lte_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_LEN 1
#define DT_N_S_ctr_rfmux_P_rf_lte_gpios_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_IDX_0_VAL_pin 2
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_rfmux, rf_lrw_gpios, 0)
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_rfmux, rf_lrw_gpios, 0)
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_rfmux, rf_lrw_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_rfmux, rf_lrw_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_LEN 1
#define DT_N_S_ctr_rfmux_P_rf_lrw_gpios_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_IDX_0_VAL_pin 9
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_rfmux, rf_int_gpios, 0)
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_rfmux, rf_int_gpios, 0)
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_rfmux, rf_int_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_rfmux, rf_int_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_LEN 1
#define DT_N_S_ctr_rfmux_P_rf_int_gpios_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_IDX_0_VAL_pin 10
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_rfmux, rf_ext_gpios, 0)
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_rfmux, rf_ext_gpios, 0)
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_rfmux, rf_ext_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_rfmux, rf_ext_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_LEN 1
#define DT_N_S_ctr_rfmux_P_rf_ext_gpios_EXISTS 1
#define DT_N_S_ctr_rfmux_P_compatible {"hardwario,ctr-rfmux"}
#define DT_N_S_ctr_rfmux_P_compatible_IDX_0 "hardwario,ctr-rfmux"
#define DT_N_S_ctr_rfmux_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-rfmux
#define DT_N_S_ctr_rfmux_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_rfmux
#define DT_N_S_ctr_rfmux_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_RFMUX
#define DT_N_S_ctr_rfmux_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_rfmux, compatible, 0)
#define DT_N_S_ctr_rfmux_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_rfmux, compatible, 0)
#define DT_N_S_ctr_rfmux_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_rfmux, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_rfmux, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_P_compatible_LEN 1
#define DT_N_S_ctr_rfmux_P_compatible_EXISTS 1
#define DT_N_S_ctr_rfmux_P_wakeup_source 0
#define DT_N_S_ctr_rfmux_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_rfmux_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_rfmux_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ctr_rfmux_antenna
 *
 * Node identifier: DT_N_S_ctr_rfmux_antenna
 *
 * Binding (compatible = skyworks,sky13335):
 *   /home/frese/Documents/chester-app/chester/boards/arm/chester_nrf52840/dts/bindings/skyworks,sky13335.yml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_rfmux_antenna_PATH "/ctr_rfmux_antenna"

/* Node's name with unit-address: */
#define DT_N_S_ctr_rfmux_antenna_FULL_NAME "ctr_rfmux_antenna"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_rfmux_antenna_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_rfmux_antenna_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_rfmux_antenna_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_rfmux_antenna_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_rfmux_antenna_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_rfmux_antenna_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_rfmux_antenna_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_rfmux_antenna_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_rfmux_antenna_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_rfmux_antenna_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_rfmux_antenna_ORD 9
#define DT_N_S_ctr_rfmux_antenna_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_rfmux_antenna_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_rfmux_antenna_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_rfmux_antenna_EXISTS 1
#define DT_N_INST_1_skyworks_sky13335    DT_N_S_ctr_rfmux_antenna
#define DT_N_NODELABEL_ctr_rfmux_antenna DT_N_S_ctr_rfmux_antenna

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_rfmux_antenna_REG_NUM 0
#define DT_N_S_ctr_rfmux_antenna_RANGES_NUM 0
#define DT_N_S_ctr_rfmux_antenna_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_rfmux_antenna_IRQ_NUM 0
#define DT_N_S_ctr_rfmux_antenna_COMPAT_MATCHES_skyworks_sky13335 1
#define DT_N_S_ctr_rfmux_antenna_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_COMPAT_VENDOR_IDX_0 "Skyworks Solutions, Inc."
#define DT_N_S_ctr_rfmux_antenna_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_COMPAT_MODEL_IDX_0 "sky13335"
#define DT_N_S_ctr_rfmux_antenna_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_rfmux_antenna_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_IDX_0_VAL_pin 10
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_rfmux_antenna, vctl1_gpios, 0)
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_rfmux_antenna, vctl1_gpios, 0)
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_rfmux_antenna, vctl1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_rfmux_antenna, vctl1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_LEN 1
#define DT_N_S_ctr_rfmux_antenna_P_vctl1_gpios_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_IDX_0_VAL_pin 9
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_rfmux_antenna, vctl2_gpios, 0)
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_rfmux_antenna, vctl2_gpios, 0)
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_rfmux_antenna, vctl2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_rfmux_antenna, vctl2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_LEN 1
#define DT_N_S_ctr_rfmux_antenna_P_vctl2_gpios_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_P_compatible {"skyworks,sky13335"}
#define DT_N_S_ctr_rfmux_antenna_P_compatible_IDX_0 "skyworks,sky13335"
#define DT_N_S_ctr_rfmux_antenna_P_compatible_IDX_0_STRING_UNQUOTED skyworks,sky13335
#define DT_N_S_ctr_rfmux_antenna_P_compatible_IDX_0_STRING_TOKEN skyworks_sky13335
#define DT_N_S_ctr_rfmux_antenna_P_compatible_IDX_0_STRING_UPPER_TOKEN SKYWORKS_SKY13335
#define DT_N_S_ctr_rfmux_antenna_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_rfmux_antenna, compatible, 0)
#define DT_N_S_ctr_rfmux_antenna_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_rfmux_antenna, compatible, 0)
#define DT_N_S_ctr_rfmux_antenna_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_rfmux_antenna, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_antenna_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_rfmux_antenna, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_antenna_P_compatible_LEN 1
#define DT_N_S_ctr_rfmux_antenna_P_compatible_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_P_wakeup_source 0
#define DT_N_S_ctr_rfmux_antenna_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_rfmux_antenna_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_rfmux_antenna_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ctr_rfmux_interface
 *
 * Node identifier: DT_N_S_ctr_rfmux_interface
 *
 * Binding (compatible = skyworks,sky13335):
 *   /home/frese/Documents/chester-app/chester/boards/arm/chester_nrf52840/dts/bindings/skyworks,sky13335.yml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_rfmux_interface_PATH "/ctr_rfmux_interface"

/* Node's name with unit-address: */
#define DT_N_S_ctr_rfmux_interface_FULL_NAME "ctr_rfmux_interface"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_rfmux_interface_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_rfmux_interface_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_rfmux_interface_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_rfmux_interface_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_rfmux_interface_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_rfmux_interface_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_rfmux_interface_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_rfmux_interface_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_rfmux_interface_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_rfmux_interface_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_rfmux_interface_ORD 10
#define DT_N_S_ctr_rfmux_interface_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_rfmux_interface_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /soc/gpio@50000300 */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_rfmux_interface_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_rfmux_interface_EXISTS 1
#define DT_N_INST_0_skyworks_sky13335      DT_N_S_ctr_rfmux_interface
#define DT_N_NODELABEL_ctr_rfmux_interface DT_N_S_ctr_rfmux_interface

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_rfmux_interface_REG_NUM 0
#define DT_N_S_ctr_rfmux_interface_RANGES_NUM 0
#define DT_N_S_ctr_rfmux_interface_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_rfmux_interface_IRQ_NUM 0
#define DT_N_S_ctr_rfmux_interface_COMPAT_MATCHES_skyworks_sky13335 1
#define DT_N_S_ctr_rfmux_interface_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_COMPAT_VENDOR_IDX_0 "Skyworks Solutions, Inc."
#define DT_N_S_ctr_rfmux_interface_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_COMPAT_MODEL_IDX_0 "sky13335"
#define DT_N_S_ctr_rfmux_interface_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_rfmux_interface_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_IDX_0_VAL_pin 2
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_rfmux_interface, vctl1_gpios, 0)
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_rfmux_interface, vctl1_gpios, 0)
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_rfmux_interface, vctl1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_rfmux_interface, vctl1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_LEN 1
#define DT_N_S_ctr_rfmux_interface_P_vctl1_gpios_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_IDX_0_VAL_pin 25
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_rfmux_interface, vctl2_gpios, 0)
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_rfmux_interface, vctl2_gpios, 0)
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_rfmux_interface, vctl2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_rfmux_interface, vctl2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_LEN 1
#define DT_N_S_ctr_rfmux_interface_P_vctl2_gpios_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_P_compatible {"skyworks,sky13335"}
#define DT_N_S_ctr_rfmux_interface_P_compatible_IDX_0 "skyworks,sky13335"
#define DT_N_S_ctr_rfmux_interface_P_compatible_IDX_0_STRING_UNQUOTED skyworks,sky13335
#define DT_N_S_ctr_rfmux_interface_P_compatible_IDX_0_STRING_TOKEN skyworks_sky13335
#define DT_N_S_ctr_rfmux_interface_P_compatible_IDX_0_STRING_UPPER_TOKEN SKYWORKS_SKY13335
#define DT_N_S_ctr_rfmux_interface_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_rfmux_interface, compatible, 0)
#define DT_N_S_ctr_rfmux_interface_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_rfmux_interface, compatible, 0)
#define DT_N_S_ctr_rfmux_interface_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_rfmux_interface, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_interface_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_rfmux_interface, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_rfmux_interface_P_compatible_LEN 1
#define DT_N_S_ctr_rfmux_interface_P_compatible_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_P_wakeup_source 0
#define DT_N_S_ctr_rfmux_interface_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_rfmux_interface_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_rfmux_interface_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller
 *
 * Node identifier: DT_N_S_pin_controller
 *
 * Binding (compatible = nordic,nrf-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/nordic,nrf-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_PATH "/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_FULL_NAME "pin-controller"

/* Node parent (/) identifier: */
#define DT_N_S_pin_controller_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_sleep) fn(DT_N_S_pin_controller_S_spi1_default) fn(DT_N_S_pin_controller_S_spi1_sleep) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_uart1_default) fn(DT_N_S_pin_controller_S_uart1_sleep) fn(DT_N_S_pin_controller_S_pwm0_default) fn(DT_N_S_pin_controller_S_pwm0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm0_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_sleep) fn(DT_N_S_pin_controller_S_spi1_default) fn(DT_N_S_pin_controller_S_spi1_sleep) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_uart1_default) fn(DT_N_S_pin_controller_S_uart1_sleep) fn(DT_N_S_pin_controller_S_pwm0_default) fn(DT_N_S_pin_controller_S_pwm0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm0_sleep, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_ORD 11
#define DT_N_S_pin_controller_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_SUPPORTS_ORDS \
	12, /* /pin-controller/i2c0_default */ \
	13, /* /pin-controller/i2c0_sleep */ \
	45, /* /pin-controller/pwm0_default */ \
	47, /* /pin-controller/pwm0_sleep */ \
	49, /* /pin-controller/spi1_default */ \
	52, /* /pin-controller/spi1_sleep */ \
	54, /* /pin-controller/uart0_default */ \
	57, /* /pin-controller/uart0_sleep */ \
	59, /* /pin-controller/uart1_default */ \
	62, /* /pin-controller/uart1_sleep */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pinctrl DT_N_S_pin_controller
#define DT_N_NODELABEL_pinctrl         DT_N_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_REG_NUM 0
#define DT_N_S_pin_controller_RANGES_NUM 0
#define DT_N_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_IRQ_NUM 0
#define DT_N_S_pin_controller_COMPAT_MATCHES_nordic_nrf_pinctrl 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0 "nrf-pinctrl"
#define DT_N_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_P_compatible {"nordic,nrf-pinctrl"}
#define DT_N_S_pin_controller_P_compatible_IDX_0 "nordic,nrf-pinctrl"
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PINCTRL
#define DT_N_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_pin_controller_P_wakeup_source 0
#define DT_N_S_pin_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_PATH "/pin-controller/i2c0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME "i2c0_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_ORD 12
#define DT_N_S_pin_controller_S_i2c0_default_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_REQUIRES_ORDS \
	11, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_SUPPORTS_ORDS \
	15, /* /soc/i2c@40003000 */ \
	43, /* /pin-controller/i2c0_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_EXISTS 1
#define DT_N_NODELABEL_i2c0_default DT_N_S_pin_controller_S_i2c0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c0_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_sleep_PATH "/pin-controller/i2c0_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_sleep_FULL_NAME "i2c0_sleep"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c0_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_sleep_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_sleep_ORD 13
#define DT_N_S_pin_controller_S_i2c0_sleep_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_sleep_REQUIRES_ORDS \
	11, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_sleep_SUPPORTS_ORDS \
	15, /* /soc/i2c@40003000 */ \
	44, /* /pin-controller/i2c0_sleep/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_sleep_EXISTS 1
#define DT_N_NODELABEL_i2c0_sleep DT_N_S_pin_controller_S_i2c0_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 14
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	15, /* /soc/i2c@40003000 */ \
	26, /* /soc/timer@40009000 */ \
	65, /* /soc/pwm@4001c000 */ \
	71, /* /soc/adc@40007000 */ \
	72, /* /soc/ccm@4000f000 */ \
	73, /* /soc/clock@40000000 */ \
	74, /* /soc/comparator@40013000 */ \
	75, /* /soc/ecb@4000e000 */ \
	76, /* /soc/egu@40014000 */ \
	77, /* /soc/egu@40015000 */ \
	78, /* /soc/egu@40016000 */ \
	79, /* /soc/egu@40017000 */ \
	80, /* /soc/egu@40018000 */ \
	81, /* /soc/egu@40019000 */ \
	83, /* /soc/gpiote@40006000 */ \
	84, /* /soc/i2c@40004000 */ \
	85, /* /soc/i2s@40025000 */ \
	88, /* /soc/nfct@40005000 */ \
	89, /* /soc/pdm@4001d000 */ \
	91, /* /soc/pwm@40021000 */ \
	92, /* /soc/pwm@40022000 */ \
	93, /* /soc/pwm@4002d000 */ \
	94, /* /soc/qdec@40012000 */ \
	95, /* /soc/qspi@40029000 */ \
	96, /* /soc/random@4000d000 */ \
	97, /* /soc/rtc@4000b000 */ \
	98, /* /soc/rtc@40011000 */ \
	99, /* /soc/rtc@40024000 */ \
	100, /* /soc/spi@40003000 */ \
	101, /* /soc/spi@40023000 */ \
	102, /* /soc/spi@4002f000 */ \
	103, /* /soc/temp@4000c000 */ \
	104, /* /soc/timer@40008000 */ \
	105, /* /soc/timer@4000a000 */ \
	106, /* /soc/timer@4001a000 */ \
	107, /* /soc/timer@4001b000 */ \
	110, /* /soc/usbd@40027000 */ \
	111, /* /soc/watchdog@40010000 */ \
	113, /* /soc/crypto@5002a000/crypto@5002b000 */ \
	150, /* /soc/power@40000000 */ \
	153, /* /soc/radio@40001000 */ \
	155, /* /soc/spi@40004000 */ \
	157, /* /soc/uart@40002000 */ \
	159, /* /soc/uart@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000
 *
 * Binding (compatible = nordic,nrf-twim):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nordic,nrf-twim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_PATH "/soc/i2c@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_FULL_NAME "i2c@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60)
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_m8_42) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_uart_50) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_uart_51) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60)
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10)
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10)
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_ORD 15
#define DT_N_S_soc_S_i2c_40003000_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_REQUIRES_ORDS \
	3, /* /soc */ \
	12, /* /pin-controller/i2c0_default */ \
	13, /* /pin-controller/i2c0_sleep */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_SUPPORTS_ORDS \
	16, /* /soc/i2c@40003000/ctr_x0_pcal6416a_a@20 */ \
	18, /* /soc/i2c@40003000/ctr_x0_pcal6416a_b@21 */ \
	28, /* /soc/i2c@40003000/tla2021@4b */ \
	122, /* /soc/i2c@40003000/ctr_barometer_tag@60 */ \
	123, /* /soc/i2c@40003000/ctr_s1@11 */ \
	124, /* /soc/i2c@40003000/ctr_x10_tla2024@49 */ \
	125, /* /soc/i2c@40003000/ctr_x3_ads122c04_a1@46 */ \
	126, /* /soc/i2c@40003000/ctr_x3_ads122c04_a2@47 */ \
	127, /* /soc/i2c@40003000/ctr_x3_ads122c04_b1@4a */ \
	128, /* /soc/i2c@40003000/ctr_x3_ads122c04b2@4f */ \
	129, /* /soc/i2c@40003000/ctr_x4_tla2021@49 */ \
	130, /* /soc/i2c@40003000/ctr_z@10 */ \
	131, /* /soc/i2c@40003000/lis2dh12@19 */ \
	132, /* /soc/i2c@40003000/m8@42 */ \
	133, /* /soc/i2c@40003000/sht30@44 */ \
	134, /* /soc/i2c@40003000/sht30_ext@45 */ \
	135, /* /soc/i2c@40003000/tmp112@48 */ \
	136, /* /soc/i2c@40003000/uart@50 */ \
	137, /* /soc/i2c@40003000/uart@51 */ \
	138, /* /soc/i2c@40003000/ds2484@18 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_twim DT_N_S_soc_S_i2c_40003000
#define DT_N_NODELABEL_i2c0         DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_MATCHES_nordic_nrf_twim 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_i2c_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_MODEL_IDX_0 "nrf-twim"
#define DT_N_S_soc_S_i2c_40003000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NUM 2
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_i2c0_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_P_zephyr_concat_buf_size 16
#define DT_N_S_soc_S_i2c_40003000_P_zephyr_concat_buf_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_zephyr_flash_buf_max_size 16
#define DT_N_S_soc_S_i2c_40003000_P_zephyr_flash_buf_max_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_reg {1073754112 /* 0x40003000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts {3 /* 0x3 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40003000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_status "okay"
#define DT_N_S_soc_S_i2c_40003000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40003000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40003000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40003000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, status, 0)
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, status, 0)
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible {"nordic,nrf-twim"}
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0 "nordic,nrf-twim"
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-twim
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_twim
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TWIM
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_i2c0_sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_i2c0_sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40003000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_i2c_40003000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ctr_x0_pcal6416a_a@20
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
 *
 * Binding (compatible = nxp,pcal6416a):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nxp,pcal6416a.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_PATH "/soc/i2c@40003000/ctr_x0_pcal6416a_a@20"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_FULL_NAME "ctr_x0_pcal6416a_a@20"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_ORD 16
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_SUPPORTS_ORDS \
	17, /* /ctr_x0_a */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_EXISTS 1
#define DT_N_INST_0_nxp_pcal6416a         DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_NODELABEL_ctr_x0_pcal6416a_a DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_REG_IDX_0_VAL_ADDRESS 32 /* 0x20 */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_COMPAT_MATCHES_nxp_pcal6416a 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_COMPAT_MODEL_IDX_0 "pcal6416a"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_ngpios 16
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_reg {32 /* 0x20 */}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_reg_IDX_0 32
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status "okay"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible {"nxp,pcal6416a"}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible_IDX_0 "nxp,pcal6416a"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible_IDX_0_STRING_UNQUOTED nxp,pcal6416a
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible_IDX_0_STRING_TOKEN nxp_pcal6416a
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PCAL6416A
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_gpio_controller 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20_P_gpio_controller_EXISTS 1

/*
 * Devicetree node: /ctr_x0_a
 *
 * Node identifier: DT_N_S_ctr_x0_a
 *
 * Binding (compatible = hardwario,ctr-x0):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-x0.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_x0_a_PATH "/ctr_x0_a"

/* Node's name with unit-address: */
#define DT_N_S_ctr_x0_a_FULL_NAME "ctr_x0_a"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_x0_a_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_x0_a_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_x0_a_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_x0_a_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_x0_a_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_x0_a_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_x0_a_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_x0_a_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_x0_a_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_x0_a_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_x0_a_ORD 17
#define DT_N_S_ctr_x0_a_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_x0_a_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */ \
	16, /* /soc/i2c@40003000/ctr_x0_pcal6416a_a@20 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_x0_a_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_x0_a_EXISTS 1
#define DT_N_INST_0_hardwario_ctr_x0 DT_N_S_ctr_x0_a
#define DT_N_NODELABEL_ctr_x0_a      DT_N_S_ctr_x0_a

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_x0_a_REG_NUM 0
#define DT_N_S_ctr_x0_a_RANGES_NUM 0
#define DT_N_S_ctr_x0_a_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_x0_a_IRQ_NUM 0
#define DT_N_S_ctr_x0_a_COMPAT_MATCHES_hardwario_ctr_x0 1
#define DT_N_S_ctr_x0_a_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_ctr_x0_a_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_COMPAT_MODEL_IDX_0 "ctr-x0"
#define DT_N_S_ctr_x0_a_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_x0_a_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_x0_a_P_ch1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch1_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x0_a_P_ch1_gpios_IDX_0_VAL_pin 3
#define DT_N_S_ctr_x0_a_P_ch1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_ch1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, ch1_gpios, 0)
#define DT_N_S_ctr_x0_a_P_ch1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, ch1_gpios, 0)
#define DT_N_S_ctr_x0_a_P_ch1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, ch1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_ch1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, ch1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_ch1_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_ch1_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on1_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_on1_gpios_IDX_0_VAL_pin 11
#define DT_N_S_ctr_x0_a_P_on1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on1_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_a_P_on1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, on1_gpios, 0)
#define DT_N_S_ctr_x0_a_P_on1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, on1_gpios, 0)
#define DT_N_S_ctr_x0_a_P_on1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, on1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_on1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, on1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_on1_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_on1_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu1_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_pu1_gpios_IDX_0_VAL_pin 13
#define DT_N_S_ctr_x0_a_P_pu1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu1_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_a_P_pu1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, pu1_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pu1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, pu1_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pu1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, pu1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pu1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, pu1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pu1_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_pu1_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd1_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_pd1_gpios_IDX_0_VAL_pin 15
#define DT_N_S_ctr_x0_a_P_pd1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_pd1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, pd1_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pd1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, pd1_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pd1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, pd1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pd1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, pd1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pd1_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_pd1_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl1_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_cl1_gpios_IDX_0_VAL_pin 14
#define DT_N_S_ctr_x0_a_P_cl1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_cl1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, cl1_gpios, 0)
#define DT_N_S_ctr_x0_a_P_cl1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, cl1_gpios, 0)
#define DT_N_S_ctr_x0_a_P_cl1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, cl1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_cl1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, cl1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_cl1_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_cl1_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch2_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x0_a_P_ch2_gpios_IDX_0_VAL_pin 29
#define DT_N_S_ctr_x0_a_P_ch2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_ch2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, ch2_gpios, 0)
#define DT_N_S_ctr_x0_a_P_ch2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, ch2_gpios, 0)
#define DT_N_S_ctr_x0_a_P_ch2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, ch2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_ch2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, ch2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_ch2_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_ch2_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on2_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_on2_gpios_IDX_0_VAL_pin 10
#define DT_N_S_ctr_x0_a_P_on2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on2_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_a_P_on2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, on2_gpios, 0)
#define DT_N_S_ctr_x0_a_P_on2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, on2_gpios, 0)
#define DT_N_S_ctr_x0_a_P_on2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, on2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_on2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, on2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_on2_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_on2_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu2_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_pu2_gpios_IDX_0_VAL_pin 8
#define DT_N_S_ctr_x0_a_P_pu2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu2_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_a_P_pu2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, pu2_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pu2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, pu2_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pu2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, pu2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pu2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, pu2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pu2_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_pu2_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd2_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_pd2_gpios_IDX_0_VAL_pin 12
#define DT_N_S_ctr_x0_a_P_pd2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_pd2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, pd2_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pd2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, pd2_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pd2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, pd2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pd2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, pd2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pd2_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_pd2_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl2_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_cl2_gpios_IDX_0_VAL_pin 9
#define DT_N_S_ctr_x0_a_P_cl2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_cl2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, cl2_gpios, 0)
#define DT_N_S_ctr_x0_a_P_cl2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, cl2_gpios, 0)
#define DT_N_S_ctr_x0_a_P_cl2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, cl2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_cl2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, cl2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_cl2_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_cl2_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch3_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x0_a_P_ch3_gpios_IDX_0_VAL_pin 2
#define DT_N_S_ctr_x0_a_P_ch3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch3_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_ch3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, ch3_gpios, 0)
#define DT_N_S_ctr_x0_a_P_ch3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, ch3_gpios, 0)
#define DT_N_S_ctr_x0_a_P_ch3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, ch3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_ch3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, ch3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_ch3_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_ch3_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on3_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_on3_gpios_IDX_0_VAL_pin 3
#define DT_N_S_ctr_x0_a_P_on3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on3_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_a_P_on3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, on3_gpios, 0)
#define DT_N_S_ctr_x0_a_P_on3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, on3_gpios, 0)
#define DT_N_S_ctr_x0_a_P_on3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, on3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_on3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, on3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_on3_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_on3_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu3_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_pu3_gpios_IDX_0_VAL_pin 5
#define DT_N_S_ctr_x0_a_P_pu3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu3_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_a_P_pu3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, pu3_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pu3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, pu3_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pu3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, pu3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pu3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, pu3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pu3_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_pu3_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd3_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_pd3_gpios_IDX_0_VAL_pin 7
#define DT_N_S_ctr_x0_a_P_pd3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd3_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_pd3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, pd3_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pd3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, pd3_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pd3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, pd3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pd3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, pd3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pd3_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_pd3_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl3_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_cl3_gpios_IDX_0_VAL_pin 6
#define DT_N_S_ctr_x0_a_P_cl3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl3_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_cl3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, cl3_gpios, 0)
#define DT_N_S_ctr_x0_a_P_cl3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, cl3_gpios, 0)
#define DT_N_S_ctr_x0_a_P_cl3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, cl3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_cl3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, cl3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_cl3_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_cl3_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch4_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x0_a_P_ch4_gpios_IDX_0_VAL_pin 31
#define DT_N_S_ctr_x0_a_P_ch4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch4_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_ch4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_ch4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, ch4_gpios, 0)
#define DT_N_S_ctr_x0_a_P_ch4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, ch4_gpios, 0)
#define DT_N_S_ctr_x0_a_P_ch4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, ch4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_ch4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, ch4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_ch4_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_ch4_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on4_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_on4_gpios_IDX_0_VAL_pin 0
#define DT_N_S_ctr_x0_a_P_on4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on4_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_a_P_on4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_on4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, on4_gpios, 0)
#define DT_N_S_ctr_x0_a_P_on4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, on4_gpios, 0)
#define DT_N_S_ctr_x0_a_P_on4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, on4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_on4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, on4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_on4_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_on4_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu4_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_pu4_gpios_IDX_0_VAL_pin 2
#define DT_N_S_ctr_x0_a_P_pu4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu4_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_a_P_pu4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pu4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, pu4_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pu4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, pu4_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pu4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, pu4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pu4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, pu4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pu4_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_pu4_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd4_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_pd4_gpios_IDX_0_VAL_pin 4
#define DT_N_S_ctr_x0_a_P_pd4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd4_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_pd4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_pd4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, pd4_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pd4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, pd4_gpios, 0)
#define DT_N_S_ctr_x0_a_P_pd4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, pd4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pd4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, pd4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_pd4_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_pd4_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl4_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20
#define DT_N_S_ctr_x0_a_P_cl4_gpios_IDX_0_VAL_pin 1
#define DT_N_S_ctr_x0_a_P_cl4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl4_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_a_P_cl4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_a_P_cl4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, cl4_gpios, 0)
#define DT_N_S_ctr_x0_a_P_cl4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, cl4_gpios, 0)
#define DT_N_S_ctr_x0_a_P_cl4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, cl4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_cl4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, cl4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_cl4_gpios_LEN 1
#define DT_N_S_ctr_x0_a_P_cl4_gpios_EXISTS 1
#define DT_N_S_ctr_x0_a_P_status "okay"
#define DT_N_S_ctr_x0_a_P_status_STRING_UNQUOTED okay
#define DT_N_S_ctr_x0_a_P_status_STRING_TOKEN okay
#define DT_N_S_ctr_x0_a_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_ctr_x0_a_P_status_IDX_0 "okay"
#define DT_N_S_ctr_x0_a_P_status_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_status_ENUM_IDX 1
#define DT_N_S_ctr_x0_a_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_ctr_x0_a_P_status_ENUM_TOKEN okay
#define DT_N_S_ctr_x0_a_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_ctr_x0_a_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, status, 0)
#define DT_N_S_ctr_x0_a_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, status, 0)
#define DT_N_S_ctr_x0_a_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_status_LEN 1
#define DT_N_S_ctr_x0_a_P_status_EXISTS 1
#define DT_N_S_ctr_x0_a_P_compatible {"hardwario,ctr-x0"}
#define DT_N_S_ctr_x0_a_P_compatible_IDX_0 "hardwario,ctr-x0"
#define DT_N_S_ctr_x0_a_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-x0
#define DT_N_S_ctr_x0_a_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_x0
#define DT_N_S_ctr_x0_a_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_X0
#define DT_N_S_ctr_x0_a_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_a_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_a, compatible, 0)
#define DT_N_S_ctr_x0_a_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_a, compatible, 0)
#define DT_N_S_ctr_x0_a_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_a, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_a, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_a_P_compatible_LEN 1
#define DT_N_S_ctr_x0_a_P_compatible_EXISTS 1
#define DT_N_S_ctr_x0_a_P_wakeup_source 0
#define DT_N_S_ctr_x0_a_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_x0_a_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_x0_a_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ctr_x0_pcal6416a_b@21
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
 *
 * Binding (compatible = nxp,pcal6416a):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nxp,pcal6416a.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_PATH "/soc/i2c@40003000/ctr_x0_pcal6416a_b@21"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_FULL_NAME "ctr_x0_pcal6416a_b@21"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_ORD 18
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_SUPPORTS_ORDS \
	19, /* /ctr_x0_b */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_EXISTS 1
#define DT_N_INST_1_nxp_pcal6416a         DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_NODELABEL_ctr_x0_pcal6416a_b DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_REG_IDX_0_VAL_ADDRESS 33 /* 0x21 */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_COMPAT_MATCHES_nxp_pcal6416a 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_COMPAT_MODEL_IDX_0 "pcal6416a"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_ngpios 16
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_reg {33 /* 0x21 */}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_reg_IDX_0 33
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible {"nxp,pcal6416a"}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible_IDX_0 "nxp,pcal6416a"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible_IDX_0_STRING_UNQUOTED nxp,pcal6416a
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible_IDX_0_STRING_TOKEN nxp_pcal6416a
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_PCAL6416A
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_gpio_controller 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21_P_gpio_controller_EXISTS 1

/*
 * Devicetree node: /ctr_x0_b
 *
 * Node identifier: DT_N_S_ctr_x0_b
 *
 * Binding (compatible = hardwario,ctr-x0):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-x0.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_x0_b_PATH "/ctr_x0_b"

/* Node's name with unit-address: */
#define DT_N_S_ctr_x0_b_FULL_NAME "ctr_x0_b"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_x0_b_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_x0_b_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_x0_b_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_x0_b_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_x0_b_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_x0_b_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_x0_b_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_x0_b_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_x0_b_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_x0_b_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_x0_b_ORD 19
#define DT_N_S_ctr_x0_b_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_x0_b_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */ \
	18, /* /soc/i2c@40003000/ctr_x0_pcal6416a_b@21 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_x0_b_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_x0_b_EXISTS 1
#define DT_N_INST_1_hardwario_ctr_x0 DT_N_S_ctr_x0_b
#define DT_N_NODELABEL_ctr_x0_b      DT_N_S_ctr_x0_b

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_x0_b_REG_NUM 0
#define DT_N_S_ctr_x0_b_RANGES_NUM 0
#define DT_N_S_ctr_x0_b_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_x0_b_IRQ_NUM 0
#define DT_N_S_ctr_x0_b_COMPAT_MATCHES_hardwario_ctr_x0 1
#define DT_N_S_ctr_x0_b_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_ctr_x0_b_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_COMPAT_MODEL_IDX_0 "ctr-x0"
#define DT_N_S_ctr_x0_b_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_x0_b_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_x0_b_P_ch1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch1_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x0_b_P_ch1_gpios_IDX_0_VAL_pin 28
#define DT_N_S_ctr_x0_b_P_ch1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_ch1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, ch1_gpios, 0)
#define DT_N_S_ctr_x0_b_P_ch1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, ch1_gpios, 0)
#define DT_N_S_ctr_x0_b_P_ch1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, ch1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_ch1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, ch1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_ch1_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_ch1_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on1_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_on1_gpios_IDX_0_VAL_pin 11
#define DT_N_S_ctr_x0_b_P_on1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on1_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_b_P_on1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, on1_gpios, 0)
#define DT_N_S_ctr_x0_b_P_on1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, on1_gpios, 0)
#define DT_N_S_ctr_x0_b_P_on1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, on1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_on1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, on1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_on1_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_on1_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu1_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_pu1_gpios_IDX_0_VAL_pin 13
#define DT_N_S_ctr_x0_b_P_pu1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu1_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_b_P_pu1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, pu1_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pu1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, pu1_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pu1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, pu1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pu1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, pu1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pu1_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_pu1_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd1_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_pd1_gpios_IDX_0_VAL_pin 15
#define DT_N_S_ctr_x0_b_P_pd1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_pd1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, pd1_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pd1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, pd1_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pd1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, pd1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pd1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, pd1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pd1_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_pd1_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl1_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_cl1_gpios_IDX_0_VAL_pin 14
#define DT_N_S_ctr_x0_b_P_cl1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_cl1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, cl1_gpios, 0)
#define DT_N_S_ctr_x0_b_P_cl1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, cl1_gpios, 0)
#define DT_N_S_ctr_x0_b_P_cl1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, cl1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_cl1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, cl1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_cl1_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_cl1_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch2_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x0_b_P_ch2_gpios_IDX_0_VAL_pin 30
#define DT_N_S_ctr_x0_b_P_ch2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_ch2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, ch2_gpios, 0)
#define DT_N_S_ctr_x0_b_P_ch2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, ch2_gpios, 0)
#define DT_N_S_ctr_x0_b_P_ch2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, ch2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_ch2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, ch2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_ch2_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_ch2_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on2_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_on2_gpios_IDX_0_VAL_pin 10
#define DT_N_S_ctr_x0_b_P_on2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on2_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_b_P_on2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, on2_gpios, 0)
#define DT_N_S_ctr_x0_b_P_on2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, on2_gpios, 0)
#define DT_N_S_ctr_x0_b_P_on2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, on2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_on2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, on2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_on2_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_on2_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu2_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_pu2_gpios_IDX_0_VAL_pin 8
#define DT_N_S_ctr_x0_b_P_pu2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu2_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_b_P_pu2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, pu2_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pu2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, pu2_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pu2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, pu2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pu2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, pu2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pu2_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_pu2_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd2_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_pd2_gpios_IDX_0_VAL_pin 12
#define DT_N_S_ctr_x0_b_P_pd2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_pd2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, pd2_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pd2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, pd2_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pd2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, pd2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pd2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, pd2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pd2_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_pd2_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl2_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_cl2_gpios_IDX_0_VAL_pin 9
#define DT_N_S_ctr_x0_b_P_cl2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_cl2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, cl2_gpios, 0)
#define DT_N_S_ctr_x0_b_P_cl2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, cl2_gpios, 0)
#define DT_N_S_ctr_x0_b_P_cl2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, cl2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_cl2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, cl2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_cl2_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_cl2_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch3_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x0_b_P_ch3_gpios_IDX_0_VAL_pin 4
#define DT_N_S_ctr_x0_b_P_ch3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch3_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_ch3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, ch3_gpios, 0)
#define DT_N_S_ctr_x0_b_P_ch3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, ch3_gpios, 0)
#define DT_N_S_ctr_x0_b_P_ch3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, ch3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_ch3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, ch3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_ch3_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_ch3_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on3_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_on3_gpios_IDX_0_VAL_pin 3
#define DT_N_S_ctr_x0_b_P_on3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on3_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_b_P_on3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, on3_gpios, 0)
#define DT_N_S_ctr_x0_b_P_on3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, on3_gpios, 0)
#define DT_N_S_ctr_x0_b_P_on3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, on3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_on3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, on3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_on3_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_on3_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu3_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_pu3_gpios_IDX_0_VAL_pin 5
#define DT_N_S_ctr_x0_b_P_pu3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu3_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_b_P_pu3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, pu3_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pu3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, pu3_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pu3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, pu3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pu3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, pu3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pu3_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_pu3_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd3_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_pd3_gpios_IDX_0_VAL_pin 7
#define DT_N_S_ctr_x0_b_P_pd3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd3_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_pd3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, pd3_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pd3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, pd3_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pd3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, pd3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pd3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, pd3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pd3_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_pd3_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl3_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_cl3_gpios_IDX_0_VAL_pin 6
#define DT_N_S_ctr_x0_b_P_cl3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl3_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_cl3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, cl3_gpios, 0)
#define DT_N_S_ctr_x0_b_P_cl3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, cl3_gpios, 0)
#define DT_N_S_ctr_x0_b_P_cl3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, cl3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_cl3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, cl3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_cl3_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_cl3_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch4_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x0_b_P_ch4_gpios_IDX_0_VAL_pin 5
#define DT_N_S_ctr_x0_b_P_ch4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch4_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_ch4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_ch4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, ch4_gpios, 0)
#define DT_N_S_ctr_x0_b_P_ch4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, ch4_gpios, 0)
#define DT_N_S_ctr_x0_b_P_ch4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, ch4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_ch4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, ch4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_ch4_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_ch4_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on4_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_on4_gpios_IDX_0_VAL_pin 0
#define DT_N_S_ctr_x0_b_P_on4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on4_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_b_P_on4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_on4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, on4_gpios, 0)
#define DT_N_S_ctr_x0_b_P_on4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, on4_gpios, 0)
#define DT_N_S_ctr_x0_b_P_on4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, on4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_on4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, on4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_on4_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_on4_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu4_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_pu4_gpios_IDX_0_VAL_pin 2
#define DT_N_S_ctr_x0_b_P_pu4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu4_gpios_IDX_0_VAL_flags 1
#define DT_N_S_ctr_x0_b_P_pu4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pu4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, pu4_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pu4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, pu4_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pu4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, pu4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pu4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, pu4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pu4_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_pu4_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd4_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_pd4_gpios_IDX_0_VAL_pin 4
#define DT_N_S_ctr_x0_b_P_pd4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd4_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_pd4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_pd4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, pd4_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pd4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, pd4_gpios, 0)
#define DT_N_S_ctr_x0_b_P_pd4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, pd4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pd4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, pd4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_pd4_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_pd4_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl4_gpios_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21
#define DT_N_S_ctr_x0_b_P_cl4_gpios_IDX_0_VAL_pin 1
#define DT_N_S_ctr_x0_b_P_cl4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl4_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x0_b_P_cl4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x0_b_P_cl4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, cl4_gpios, 0)
#define DT_N_S_ctr_x0_b_P_cl4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, cl4_gpios, 0)
#define DT_N_S_ctr_x0_b_P_cl4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, cl4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_cl4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, cl4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_cl4_gpios_LEN 1
#define DT_N_S_ctr_x0_b_P_cl4_gpios_EXISTS 1
#define DT_N_S_ctr_x0_b_P_status "disabled"
#define DT_N_S_ctr_x0_b_P_status_STRING_UNQUOTED disabled
#define DT_N_S_ctr_x0_b_P_status_STRING_TOKEN disabled
#define DT_N_S_ctr_x0_b_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x0_b_P_status_IDX_0 "disabled"
#define DT_N_S_ctr_x0_b_P_status_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_status_ENUM_IDX 2
#define DT_N_S_ctr_x0_b_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_ctr_x0_b_P_status_ENUM_TOKEN disabled
#define DT_N_S_ctr_x0_b_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x0_b_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, status, 0)
#define DT_N_S_ctr_x0_b_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, status, 0)
#define DT_N_S_ctr_x0_b_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_status_LEN 1
#define DT_N_S_ctr_x0_b_P_status_EXISTS 1
#define DT_N_S_ctr_x0_b_P_compatible {"hardwario,ctr-x0"}
#define DT_N_S_ctr_x0_b_P_compatible_IDX_0 "hardwario,ctr-x0"
#define DT_N_S_ctr_x0_b_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-x0
#define DT_N_S_ctr_x0_b_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_x0
#define DT_N_S_ctr_x0_b_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_X0
#define DT_N_S_ctr_x0_b_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_x0_b_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x0_b, compatible, 0)
#define DT_N_S_ctr_x0_b_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x0_b, compatible, 0)
#define DT_N_S_ctr_x0_b_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x0_b, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x0_b, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x0_b_P_compatible_LEN 1
#define DT_N_S_ctr_x0_b_P_compatible_EXISTS 1
#define DT_N_S_ctr_x0_b_P_wakeup_source 0
#define DT_N_S_ctr_x0_b_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_x0_b_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_x0_b_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ctr_x10
 *
 * Node identifier: DT_N_S_ctr_x10
 *
 * Binding (compatible = hardwario,ctr-x10):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-x10.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_x10_PATH "/ctr_x10"

/* Node's name with unit-address: */
#define DT_N_S_ctr_x10_FULL_NAME "ctr_x10"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_x10_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_x10_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_x10_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_x10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_x10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_x10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_x10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_x10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_x10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_x10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_x10_ORD 20
#define DT_N_S_ctr_x10_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_x10_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_x10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_x10_EXISTS 1
#define DT_N_INST_0_hardwario_ctr_x10 DT_N_S_ctr_x10
#define DT_N_NODELABEL_ctr_x10        DT_N_S_ctr_x10

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_x10_REG_NUM 0
#define DT_N_S_ctr_x10_RANGES_NUM 0
#define DT_N_S_ctr_x10_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_x10_IRQ_NUM 0
#define DT_N_S_ctr_x10_COMPAT_MATCHES_hardwario_ctr_x10 1
#define DT_N_S_ctr_x10_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_x10_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_ctr_x10_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_x10_COMPAT_MODEL_IDX_0 "ctr-x10"
#define DT_N_S_ctr_x10_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_x10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_x10_P_line_measurement_interval 5000
#define DT_N_S_ctr_x10_P_line_measurement_interval_EXISTS 1
#define DT_N_S_ctr_x10_P_line_threshold_min 7000
#define DT_N_S_ctr_x10_P_line_threshold_min_EXISTS 1
#define DT_N_S_ctr_x10_P_line_threshold_max 9000
#define DT_N_S_ctr_x10_P_line_threshold_max_EXISTS 1
#define DT_N_S_ctr_x10_P_status "disabled"
#define DT_N_S_ctr_x10_P_status_STRING_UNQUOTED disabled
#define DT_N_S_ctr_x10_P_status_STRING_TOKEN disabled
#define DT_N_S_ctr_x10_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x10_P_status_IDX_0 "disabled"
#define DT_N_S_ctr_x10_P_status_IDX_0_EXISTS 1
#define DT_N_S_ctr_x10_P_status_ENUM_IDX 2
#define DT_N_S_ctr_x10_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_ctr_x10_P_status_ENUM_TOKEN disabled
#define DT_N_S_ctr_x10_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x10_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x10, status, 0)
#define DT_N_S_ctr_x10_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x10, status, 0)
#define DT_N_S_ctr_x10_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x10, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x10_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x10, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x10_P_status_LEN 1
#define DT_N_S_ctr_x10_P_status_EXISTS 1
#define DT_N_S_ctr_x10_P_compatible {"hardwario,ctr-x10"}
#define DT_N_S_ctr_x10_P_compatible_IDX_0 "hardwario,ctr-x10"
#define DT_N_S_ctr_x10_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-x10
#define DT_N_S_ctr_x10_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_x10
#define DT_N_S_ctr_x10_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_X10
#define DT_N_S_ctr_x10_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_x10_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x10, compatible, 0)
#define DT_N_S_ctr_x10_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x10, compatible, 0)
#define DT_N_S_ctr_x10_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x10, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x10_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x10, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x10_P_compatible_LEN 1
#define DT_N_S_ctr_x10_P_compatible_EXISTS 1
#define DT_N_S_ctr_x10_P_wakeup_source 0
#define DT_N_S_ctr_x10_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_x10_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_x10_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ctr_x3_a
 *
 * Node identifier: DT_N_S_ctr_x3_a
 *
 * Binding (compatible = hardwario,ctr-x3):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-x3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_x3_a_PATH "/ctr_x3_a"

/* Node's name with unit-address: */
#define DT_N_S_ctr_x3_a_FULL_NAME "ctr_x3_a"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_x3_a_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_x3_a_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_x3_a_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_x3_a_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_x3_a_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_x3_a_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_x3_a_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_x3_a_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_x3_a_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_x3_a_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_x3_a_ORD 21
#define DT_N_S_ctr_x3_a_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_x3_a_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_x3_a_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_x3_a_EXISTS 1
#define DT_N_INST_0_hardwario_ctr_x3 DT_N_S_ctr_x3_a
#define DT_N_NODELABEL_ctr_x3_a      DT_N_S_ctr_x3_a

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_x3_a_REG_NUM 0
#define DT_N_S_ctr_x3_a_RANGES_NUM 0
#define DT_N_S_ctr_x3_a_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_x3_a_IRQ_NUM 0
#define DT_N_S_ctr_x3_a_COMPAT_MATCHES_hardwario_ctr_x3 1
#define DT_N_S_ctr_x3_a_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_a_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_ctr_x3_a_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_a_COMPAT_MODEL_IDX_0 "ctr-x3"
#define DT_N_S_ctr_x3_a_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_x3_a_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_x3_a_P_slot "A"
#define DT_N_S_ctr_x3_a_P_slot_STRING_UNQUOTED A
#define DT_N_S_ctr_x3_a_P_slot_STRING_TOKEN A
#define DT_N_S_ctr_x3_a_P_slot_STRING_UPPER_TOKEN A
#define DT_N_S_ctr_x3_a_P_slot_IDX_0 "A"
#define DT_N_S_ctr_x3_a_P_slot_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_a_P_slot_ENUM_IDX 0
#define DT_N_S_ctr_x3_a_P_slot_ENUM_VAL_A_EXISTS 1
#define DT_N_S_ctr_x3_a_P_slot_ENUM_TOKEN A
#define DT_N_S_ctr_x3_a_P_slot_ENUM_UPPER_TOKEN A
#define DT_N_S_ctr_x3_a_P_slot_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x3_a, slot, 0)
#define DT_N_S_ctr_x3_a_P_slot_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x3_a, slot, 0)
#define DT_N_S_ctr_x3_a_P_slot_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x3_a, slot, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_a_P_slot_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x3_a, slot, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_a_P_slot_LEN 1
#define DT_N_S_ctr_x3_a_P_slot_EXISTS 1
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_IDX_0_VAL_pin 2
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_IDX_0_VAL_flags 17
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x3_a, pwr0_gpios, 0)
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x3_a, pwr0_gpios, 0)
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x3_a, pwr0_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x3_a, pwr0_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_LEN 1
#define DT_N_S_ctr_x3_a_P_pwr0_gpios_EXISTS 1
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_IDX_0_VAL_pin 31
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_IDX_0_VAL_flags 17
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x3_a, pwr1_gpios, 0)
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x3_a, pwr1_gpios, 0)
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x3_a, pwr1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x3_a, pwr1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_LEN 1
#define DT_N_S_ctr_x3_a_P_pwr1_gpios_EXISTS 1
#define DT_N_S_ctr_x3_a_P_status "disabled"
#define DT_N_S_ctr_x3_a_P_status_STRING_UNQUOTED disabled
#define DT_N_S_ctr_x3_a_P_status_STRING_TOKEN disabled
#define DT_N_S_ctr_x3_a_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x3_a_P_status_IDX_0 "disabled"
#define DT_N_S_ctr_x3_a_P_status_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_a_P_status_ENUM_IDX 2
#define DT_N_S_ctr_x3_a_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_ctr_x3_a_P_status_ENUM_TOKEN disabled
#define DT_N_S_ctr_x3_a_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x3_a_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x3_a, status, 0)
#define DT_N_S_ctr_x3_a_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x3_a, status, 0)
#define DT_N_S_ctr_x3_a_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x3_a, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_a_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x3_a, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_a_P_status_LEN 1
#define DT_N_S_ctr_x3_a_P_status_EXISTS 1
#define DT_N_S_ctr_x3_a_P_compatible {"hardwario,ctr-x3"}
#define DT_N_S_ctr_x3_a_P_compatible_IDX_0 "hardwario,ctr-x3"
#define DT_N_S_ctr_x3_a_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-x3
#define DT_N_S_ctr_x3_a_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_x3
#define DT_N_S_ctr_x3_a_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_X3
#define DT_N_S_ctr_x3_a_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_a_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x3_a, compatible, 0)
#define DT_N_S_ctr_x3_a_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x3_a, compatible, 0)
#define DT_N_S_ctr_x3_a_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x3_a, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_a_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x3_a, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_a_P_compatible_LEN 1
#define DT_N_S_ctr_x3_a_P_compatible_EXISTS 1
#define DT_N_S_ctr_x3_a_P_wakeup_source 0
#define DT_N_S_ctr_x3_a_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_x3_a_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_x3_a_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ctr_x3_b
 *
 * Node identifier: DT_N_S_ctr_x3_b
 *
 * Binding (compatible = hardwario,ctr-x3):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-x3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_x3_b_PATH "/ctr_x3_b"

/* Node's name with unit-address: */
#define DT_N_S_ctr_x3_b_FULL_NAME "ctr_x3_b"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_x3_b_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_x3_b_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_x3_b_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_x3_b_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_x3_b_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_x3_b_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_x3_b_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_x3_b_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_x3_b_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_x3_b_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_x3_b_ORD 22
#define DT_N_S_ctr_x3_b_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_x3_b_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_x3_b_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_x3_b_EXISTS 1
#define DT_N_INST_1_hardwario_ctr_x3 DT_N_S_ctr_x3_b
#define DT_N_NODELABEL_ctr_x3_b      DT_N_S_ctr_x3_b

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_x3_b_REG_NUM 0
#define DT_N_S_ctr_x3_b_RANGES_NUM 0
#define DT_N_S_ctr_x3_b_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_x3_b_IRQ_NUM 0
#define DT_N_S_ctr_x3_b_COMPAT_MATCHES_hardwario_ctr_x3 1
#define DT_N_S_ctr_x3_b_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_b_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_ctr_x3_b_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_b_COMPAT_MODEL_IDX_0 "ctr-x3"
#define DT_N_S_ctr_x3_b_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_x3_b_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_x3_b_P_slot "B"
#define DT_N_S_ctr_x3_b_P_slot_STRING_UNQUOTED B
#define DT_N_S_ctr_x3_b_P_slot_STRING_TOKEN B
#define DT_N_S_ctr_x3_b_P_slot_STRING_UPPER_TOKEN B
#define DT_N_S_ctr_x3_b_P_slot_IDX_0 "B"
#define DT_N_S_ctr_x3_b_P_slot_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_b_P_slot_ENUM_IDX 1
#define DT_N_S_ctr_x3_b_P_slot_ENUM_VAL_B_EXISTS 1
#define DT_N_S_ctr_x3_b_P_slot_ENUM_TOKEN B
#define DT_N_S_ctr_x3_b_P_slot_ENUM_UPPER_TOKEN B
#define DT_N_S_ctr_x3_b_P_slot_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x3_b, slot, 0)
#define DT_N_S_ctr_x3_b_P_slot_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x3_b, slot, 0)
#define DT_N_S_ctr_x3_b_P_slot_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x3_b, slot, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_b_P_slot_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x3_b, slot, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_b_P_slot_LEN 1
#define DT_N_S_ctr_x3_b_P_slot_EXISTS 1
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_IDX_0_VAL_pin 4
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_IDX_0_VAL_flags 17
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x3_b, pwr0_gpios, 0)
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x3_b, pwr0_gpios, 0)
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x3_b, pwr0_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x3_b, pwr0_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_LEN 1
#define DT_N_S_ctr_x3_b_P_pwr0_gpios_EXISTS 1
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_IDX_0_VAL_pin 5
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_IDX_0_VAL_flags 17
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x3_b, pwr1_gpios, 0)
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x3_b, pwr1_gpios, 0)
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x3_b, pwr1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x3_b, pwr1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_LEN 1
#define DT_N_S_ctr_x3_b_P_pwr1_gpios_EXISTS 1
#define DT_N_S_ctr_x3_b_P_status "disabled"
#define DT_N_S_ctr_x3_b_P_status_STRING_UNQUOTED disabled
#define DT_N_S_ctr_x3_b_P_status_STRING_TOKEN disabled
#define DT_N_S_ctr_x3_b_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x3_b_P_status_IDX_0 "disabled"
#define DT_N_S_ctr_x3_b_P_status_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_b_P_status_ENUM_IDX 2
#define DT_N_S_ctr_x3_b_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_ctr_x3_b_P_status_ENUM_TOKEN disabled
#define DT_N_S_ctr_x3_b_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x3_b_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x3_b, status, 0)
#define DT_N_S_ctr_x3_b_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x3_b, status, 0)
#define DT_N_S_ctr_x3_b_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x3_b, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_b_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x3_b, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_b_P_status_LEN 1
#define DT_N_S_ctr_x3_b_P_status_EXISTS 1
#define DT_N_S_ctr_x3_b_P_compatible {"hardwario,ctr-x3"}
#define DT_N_S_ctr_x3_b_P_compatible_IDX_0 "hardwario,ctr-x3"
#define DT_N_S_ctr_x3_b_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-x3
#define DT_N_S_ctr_x3_b_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_x3
#define DT_N_S_ctr_x3_b_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_X3
#define DT_N_S_ctr_x3_b_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_x3_b_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x3_b, compatible, 0)
#define DT_N_S_ctr_x3_b_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x3_b, compatible, 0)
#define DT_N_S_ctr_x3_b_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x3_b, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_b_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x3_b, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x3_b_P_compatible_LEN 1
#define DT_N_S_ctr_x3_b_P_compatible_EXISTS 1
#define DT_N_S_ctr_x3_b_P_wakeup_source 0
#define DT_N_S_ctr_x3_b_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_x3_b_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_x3_b_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ctr_x4_a
 *
 * Node identifier: DT_N_S_ctr_x4_a
 *
 * Binding (compatible = hardwario,ctr-x4):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-x4.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_x4_a_PATH "/ctr_x4_a"

/* Node's name with unit-address: */
#define DT_N_S_ctr_x4_a_FULL_NAME "ctr_x4_a"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_x4_a_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_x4_a_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_x4_a_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_x4_a_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_x4_a_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_x4_a_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_x4_a_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_x4_a_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_x4_a_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_x4_a_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_x4_a_ORD 23
#define DT_N_S_ctr_x4_a_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_x4_a_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_x4_a_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_x4_a_EXISTS 1
#define DT_N_INST_0_hardwario_ctr_x4 DT_N_S_ctr_x4_a
#define DT_N_NODELABEL_ctr_x4_a      DT_N_S_ctr_x4_a

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_x4_a_REG_NUM 0
#define DT_N_S_ctr_x4_a_RANGES_NUM 0
#define DT_N_S_ctr_x4_a_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_x4_a_IRQ_NUM 0
#define DT_N_S_ctr_x4_a_COMPAT_MATCHES_hardwario_ctr_x4 1
#define DT_N_S_ctr_x4_a_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_a_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_ctr_x4_a_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_a_COMPAT_MODEL_IDX_0 "ctr-x4"
#define DT_N_S_ctr_x4_a_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_x4_a_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_IDX_0_VAL_pin 3
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_a, pwr1_gpios, 0)
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_a, pwr1_gpios, 0)
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_a, pwr1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_a, pwr1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_LEN 1
#define DT_N_S_ctr_x4_a_P_pwr1_gpios_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_IDX_0_VAL_pin 29
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_a, pwr2_gpios, 0)
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_a, pwr2_gpios, 0)
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_a, pwr2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_a, pwr2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_LEN 1
#define DT_N_S_ctr_x4_a_P_pwr2_gpios_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_IDX_0_VAL_pin 2
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_a, pwr3_gpios, 0)
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_a, pwr3_gpios, 0)
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_a, pwr3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_a, pwr3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_LEN 1
#define DT_N_S_ctr_x4_a_P_pwr3_gpios_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_IDX_0_VAL_pin 31
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_a, pwr4_gpios, 0)
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_a, pwr4_gpios, 0)
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_a, pwr4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_a, pwr4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_LEN 1
#define DT_N_S_ctr_x4_a_P_pwr4_gpios_EXISTS 1
#define DT_N_S_ctr_x4_a_P_line_measurement_interval 5000
#define DT_N_S_ctr_x4_a_P_line_measurement_interval_EXISTS 1
#define DT_N_S_ctr_x4_a_P_line_threshold_min 7000
#define DT_N_S_ctr_x4_a_P_line_threshold_min_EXISTS 1
#define DT_N_S_ctr_x4_a_P_line_threshold_max 9000
#define DT_N_S_ctr_x4_a_P_line_threshold_max_EXISTS 1
#define DT_N_S_ctr_x4_a_P_status "disabled"
#define DT_N_S_ctr_x4_a_P_status_STRING_UNQUOTED disabled
#define DT_N_S_ctr_x4_a_P_status_STRING_TOKEN disabled
#define DT_N_S_ctr_x4_a_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x4_a_P_status_IDX_0 "disabled"
#define DT_N_S_ctr_x4_a_P_status_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_a_P_status_ENUM_IDX 2
#define DT_N_S_ctr_x4_a_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_ctr_x4_a_P_status_ENUM_TOKEN disabled
#define DT_N_S_ctr_x4_a_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x4_a_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_a, status, 0)
#define DT_N_S_ctr_x4_a_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_a, status, 0)
#define DT_N_S_ctr_x4_a_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_a, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_a, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_status_LEN 1
#define DT_N_S_ctr_x4_a_P_status_EXISTS 1
#define DT_N_S_ctr_x4_a_P_compatible {"hardwario,ctr-x4"}
#define DT_N_S_ctr_x4_a_P_compatible_IDX_0 "hardwario,ctr-x4"
#define DT_N_S_ctr_x4_a_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-x4
#define DT_N_S_ctr_x4_a_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_x4
#define DT_N_S_ctr_x4_a_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_X4
#define DT_N_S_ctr_x4_a_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_a_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_a, compatible, 0)
#define DT_N_S_ctr_x4_a_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_a, compatible, 0)
#define DT_N_S_ctr_x4_a_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_a, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_a, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_a_P_compatible_LEN 1
#define DT_N_S_ctr_x4_a_P_compatible_EXISTS 1
#define DT_N_S_ctr_x4_a_P_wakeup_source 0
#define DT_N_S_ctr_x4_a_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_x4_a_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_x4_a_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ctr_x4_b
 *
 * Node identifier: DT_N_S_ctr_x4_b
 *
 * Binding (compatible = hardwario,ctr-x4):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-x4.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ctr_x4_b_PATH "/ctr_x4_b"

/* Node's name with unit-address: */
#define DT_N_S_ctr_x4_b_FULL_NAME "ctr_x4_b"

/* Node parent (/) identifier: */
#define DT_N_S_ctr_x4_b_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ctr_x4_b_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_ctr_x4_b_FOREACH_CHILD(fn) 
#define DT_N_S_ctr_x4_b_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ctr_x4_b_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ctr_x4_b_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ctr_x4_b_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ctr_x4_b_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ctr_x4_b_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ctr_x4_b_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ctr_x4_b_ORD 24
#define DT_N_S_ctr_x4_b_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ctr_x4_b_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ctr_x4_b_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ctr_x4_b_EXISTS 1
#define DT_N_INST_1_hardwario_ctr_x4 DT_N_S_ctr_x4_b
#define DT_N_NODELABEL_ctr_x4_b      DT_N_S_ctr_x4_b

/* Macros for properties that are special in the specification: */
#define DT_N_S_ctr_x4_b_REG_NUM 0
#define DT_N_S_ctr_x4_b_RANGES_NUM 0
#define DT_N_S_ctr_x4_b_FOREACH_RANGE(fn) 
#define DT_N_S_ctr_x4_b_IRQ_NUM 0
#define DT_N_S_ctr_x4_b_COMPAT_MATCHES_hardwario_ctr_x4 1
#define DT_N_S_ctr_x4_b_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_b_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_ctr_x4_b_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_b_COMPAT_MODEL_IDX_0 "ctr-x4"
#define DT_N_S_ctr_x4_b_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ctr_x4_b_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_IDX_0_VAL_pin 28
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_b, pwr1_gpios, 0)
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_b, pwr1_gpios, 0)
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_b, pwr1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_b, pwr1_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_LEN 1
#define DT_N_S_ctr_x4_b_P_pwr1_gpios_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_IDX_0_VAL_pin 30
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_b, pwr2_gpios, 0)
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_b, pwr2_gpios, 0)
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_b, pwr2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_b, pwr2_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_LEN 1
#define DT_N_S_ctr_x4_b_P_pwr2_gpios_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_IDX_0_VAL_pin 4
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_b, pwr3_gpios, 0)
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_b, pwr3_gpios, 0)
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_b, pwr3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_b, pwr3_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_LEN 1
#define DT_N_S_ctr_x4_b_P_pwr3_gpios_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_IDX_0_VAL_pin 5
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_b, pwr4_gpios, 0)
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_b, pwr4_gpios, 0)
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_b, pwr4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_b, pwr4_gpios, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_LEN 1
#define DT_N_S_ctr_x4_b_P_pwr4_gpios_EXISTS 1
#define DT_N_S_ctr_x4_b_P_line_measurement_interval 5000
#define DT_N_S_ctr_x4_b_P_line_measurement_interval_EXISTS 1
#define DT_N_S_ctr_x4_b_P_line_threshold_min 7000
#define DT_N_S_ctr_x4_b_P_line_threshold_min_EXISTS 1
#define DT_N_S_ctr_x4_b_P_line_threshold_max 9000
#define DT_N_S_ctr_x4_b_P_line_threshold_max_EXISTS 1
#define DT_N_S_ctr_x4_b_P_status "disabled"
#define DT_N_S_ctr_x4_b_P_status_STRING_UNQUOTED disabled
#define DT_N_S_ctr_x4_b_P_status_STRING_TOKEN disabled
#define DT_N_S_ctr_x4_b_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x4_b_P_status_IDX_0 "disabled"
#define DT_N_S_ctr_x4_b_P_status_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_b_P_status_ENUM_IDX 2
#define DT_N_S_ctr_x4_b_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_ctr_x4_b_P_status_ENUM_TOKEN disabled
#define DT_N_S_ctr_x4_b_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_ctr_x4_b_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_b, status, 0)
#define DT_N_S_ctr_x4_b_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_b, status, 0)
#define DT_N_S_ctr_x4_b_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_b, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_b, status, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_status_LEN 1
#define DT_N_S_ctr_x4_b_P_status_EXISTS 1
#define DT_N_S_ctr_x4_b_P_compatible {"hardwario,ctr-x4"}
#define DT_N_S_ctr_x4_b_P_compatible_IDX_0 "hardwario,ctr-x4"
#define DT_N_S_ctr_x4_b_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-x4
#define DT_N_S_ctr_x4_b_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_x4
#define DT_N_S_ctr_x4_b_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_X4
#define DT_N_S_ctr_x4_b_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ctr_x4_b_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ctr_x4_b, compatible, 0)
#define DT_N_S_ctr_x4_b_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ctr_x4_b, compatible, 0)
#define DT_N_S_ctr_x4_b_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ctr_x4_b, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ctr_x4_b, compatible, 0, __VA_ARGS__)
#define DT_N_S_ctr_x4_b_P_compatible_LEN 1
#define DT_N_S_ctr_x4_b_P_compatible_EXISTS 1
#define DT_N_S_ctr_x4_b_P_wakeup_source 0
#define DT_N_S_ctr_x4_b_P_wakeup_source_EXISTS 1
#define DT_N_S_ctr_x4_b_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ctr_x4_b_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /entropy_bt_hci
 *
 * Node identifier: DT_N_S_entropy_bt_hci
 *
 * Binding (compatible = zephyr,bt-hci-entropy):
 *   $ZEPHYR_BASE/dts/bindings/bluetooth/zephyr,bt-hci-entropy.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_entropy_bt_hci_PATH "/entropy_bt_hci"

/* Node's name with unit-address: */
#define DT_N_S_entropy_bt_hci_FULL_NAME "entropy_bt_hci"

/* Node parent (/) identifier: */
#define DT_N_S_entropy_bt_hci_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_entropy_bt_hci_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD(fn) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_entropy_bt_hci_ORD 25
#define DT_N_S_entropy_bt_hci_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_entropy_bt_hci_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_entropy_bt_hci_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_entropy_bt_hci_EXISTS 1
#define DT_N_INST_0_zephyr_bt_hci_entropy DT_N_S_entropy_bt_hci
#define DT_N_NODELABEL_rng_hci            DT_N_S_entropy_bt_hci

/* Macros for properties that are special in the specification: */
#define DT_N_S_entropy_bt_hci_REG_NUM 0
#define DT_N_S_entropy_bt_hci_RANGES_NUM 0
#define DT_N_S_entropy_bt_hci_FOREACH_RANGE(fn) 
#define DT_N_S_entropy_bt_hci_IRQ_NUM 0
#define DT_N_S_entropy_bt_hci_COMPAT_MATCHES_zephyr_bt_hci_entropy 1
#define DT_N_S_entropy_bt_hci_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_entropy_bt_hci_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_COMPAT_MODEL_IDX_0 "bt-hci-entropy"
#define DT_N_S_entropy_bt_hci_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_entropy_bt_hci_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_entropy_bt_hci_P_status "okay"
#define DT_N_S_entropy_bt_hci_P_status_STRING_UNQUOTED okay
#define DT_N_S_entropy_bt_hci_P_status_STRING_TOKEN okay
#define DT_N_S_entropy_bt_hci_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_entropy_bt_hci_P_status_IDX_0 "okay"
#define DT_N_S_entropy_bt_hci_P_status_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_status_ENUM_IDX 1
#define DT_N_S_entropy_bt_hci_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_status_ENUM_TOKEN okay
#define DT_N_S_entropy_bt_hci_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_entropy_bt_hci, status, 0)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_entropy_bt_hci, status, 0)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_entropy_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_entropy_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_status_LEN 1
#define DT_N_S_entropy_bt_hci_P_status_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_compatible {"zephyr,bt-hci-entropy"}
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0 "zephyr,bt-hci-entropy"
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_UNQUOTED zephyr,bt-hci-entropy
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_TOKEN zephyr_bt_hci_entropy
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_BT_HCI_ENTROPY
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_entropy_bt_hci, compatible, 0)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_entropy_bt_hci, compatible, 0)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_entropy_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_entropy_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_compatible_LEN 1
#define DT_N_S_entropy_bt_hci_P_compatible_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_wakeup_source 0
#define DT_N_S_entropy_bt_hci_P_wakeup_source_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_entropy_bt_hci_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40009000
 *
 * Node identifier: DT_N_S_soc_S_timer_40009000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40009000_PATH "/soc/timer@40009000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40009000_FULL_NAME "timer@40009000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40009000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40009000_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40009000_ORD 26
#define DT_N_S_soc_S_timer_40009000_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40009000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40009000_SUPPORTS_ORDS \
	27, /* /sw-pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40009000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_timer DT_N_S_soc_S_timer_40009000
#define DT_N_NODELABEL_timer1        DT_N_S_soc_S_timer_40009000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40009000_REG_NUM 1
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_VAL_ADDRESS 1073778688 /* 0x40009000 */
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40009000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40009000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40009000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_40009000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_40009000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40009000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40009000_P_reg {1073778688 /* 0x40009000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_0 1073778688
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_cc_num 4
#define DT_N_S_soc_S_timer_40009000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_40009000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts {9 /* 0x9 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_prescaler 0
#define DT_N_S_soc_S_timer_40009000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_zli 0
#define DT_N_S_soc_S_timer_40009000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_status "disabled"
#define DT_N_S_soc_S_timer_40009000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40009000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40009000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40009000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40009000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40009000, status, 0)
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40009000, status, 0)
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40009000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40009000, compatible, 0)
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40009000, compatible, 0)
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40009000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40009000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40009000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /sw-pwm
 *
 * Node identifier: DT_N_S_sw_pwm
 *
 * Binding (compatible = nordic,nrf-sw-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-sw-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_sw_pwm_PATH "/sw-pwm"

/* Node's name with unit-address: */
#define DT_N_S_sw_pwm_FULL_NAME "sw-pwm"

/* Node parent (/) identifier: */
#define DT_N_S_sw_pwm_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_sw_pwm_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_sw_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_sw_pwm_ORD 27
#define DT_N_S_sw_pwm_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sw_pwm_REQUIRES_ORDS \
	0, /* / */ \
	26, /* /soc/timer@40009000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sw_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sw_pwm_EXISTS 1
#define DT_N_INST_0_nordic_nrf_sw_pwm DT_N_S_sw_pwm
#define DT_N_NODELABEL_sw_pwm         DT_N_S_sw_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_sw_pwm_REG_NUM 0
#define DT_N_S_sw_pwm_RANGES_NUM 0
#define DT_N_S_sw_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_sw_pwm_IRQ_NUM 0
#define DT_N_S_sw_pwm_COMPAT_MATCHES_nordic_nrf_sw_pwm 1
#define DT_N_S_sw_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_sw_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_COMPAT_MODEL_IDX_0 "nrf-sw-pwm"
#define DT_N_S_sw_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_sw_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_sw_pwm_P_generator DT_N_S_soc_S_timer_40009000
#define DT_N_S_sw_pwm_P_generator_IDX_0 DT_N_S_soc_S_timer_40009000
#define DT_N_S_sw_pwm_P_generator_IDX_0_PH DT_N_S_soc_S_timer_40009000
#define DT_N_S_sw_pwm_P_generator_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, generator, 0)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, generator, 0)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, generator, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, generator, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_generator_LEN 1
#define DT_N_S_sw_pwm_P_generator_EXISTS 1
#define DT_N_S_sw_pwm_P_clock_prescaler 0
#define DT_N_S_sw_pwm_P_clock_prescaler_EXISTS 1
#define DT_N_S_sw_pwm_P_status "disabled"
#define DT_N_S_sw_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_sw_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_sw_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_sw_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_sw_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_status_ENUM_IDX 2
#define DT_N_S_sw_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_sw_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_sw_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, status, 0)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, status, 0)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_status_LEN 1
#define DT_N_S_sw_pwm_P_status_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible {"nordic,nrf-sw-pwm"}
#define DT_N_S_sw_pwm_P_compatible_IDX_0 "nordic,nrf-sw-pwm"
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-sw-pwm
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_sw_pwm
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SW_PWM
#define DT_N_S_sw_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, compatible, 0)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, compatible, 0)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_compatible_LEN 1
#define DT_N_S_sw_pwm_P_compatible_EXISTS 1
#define DT_N_S_sw_pwm_P_wakeup_source 0
#define DT_N_S_sw_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_sw_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_sw_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/tla2021@4b
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_tla2021_4b
 *
 * Binding (compatible = ti,tla2021):
 *   $ZEPHYR_BASE/dts/bindings/adc/ti,tla2021.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_PATH "/soc/i2c@40003000/tla2021@4b"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_FULL_NAME "tla2021@4b"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_ORD 28
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_SUPPORTS_ORDS \
	29, /* /vbatt */ \
	149, /* /soc/i2c@40003000/tla2021@4b/channel@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_EXISTS 1
#define DT_N_INST_0_ti_tla2021 DT_N_S_soc_S_i2c_40003000_S_tla2021_4b
#define DT_N_NODELABEL_tla2021 DT_N_S_soc_S_i2c_40003000_S_tla2021_4b

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_REG_IDX_0_VAL_ADDRESS 75 /* 0x4b */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_COMPAT_MATCHES_ti_tla2021 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_COMPAT_MODEL_IDX_0 "tla2021"
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_reg {75 /* 0x4b */}
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_reg_IDX_0 75
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible {"ti,tla2021"}
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible_IDX_0 "ti,tla2021"
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible_IDX_0_STRING_UNQUOTED ti,tla2021
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible_IDX_0_STRING_TOKEN ti_tla2021
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_TLA2021
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /vbatt
 *
 * Node identifier: DT_N_S_vbatt
 *
 * Binding (compatible = voltage-divider):
 *   $ZEPHYR_BASE/dts/bindings/iio/afe/voltage-divider.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vbatt_PATH "/vbatt"

/* Node's name with unit-address: */
#define DT_N_S_vbatt_FULL_NAME "vbatt"

/* Node parent (/) identifier: */
#define DT_N_S_vbatt_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vbatt_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_vbatt_FOREACH_CHILD(fn) 
#define DT_N_S_vbatt_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vbatt_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vbatt_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vbatt_ORD 29
#define DT_N_S_vbatt_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vbatt_REQUIRES_ORDS \
	0, /* / */ \
	4, /* /soc/gpio@50000300 */ \
	28, /* /soc/i2c@40003000/tla2021@4b */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vbatt_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vbatt_EXISTS 1
#define DT_N_INST_0_voltage_divider DT_N_S_vbatt

/* Macros for properties that are special in the specification: */
#define DT_N_S_vbatt_REG_NUM 0
#define DT_N_S_vbatt_RANGES_NUM 0
#define DT_N_S_vbatt_FOREACH_RANGE(fn) 
#define DT_N_S_vbatt_IRQ_NUM 0
#define DT_N_S_vbatt_COMPAT_MATCHES_voltage_divider 1
#define DT_N_S_vbatt_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vbatt_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vbatt_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_vbatt_P_io_channels_IDX_0_PH DT_N_S_soc_S_i2c_40003000_S_tla2021_4b
#define DT_N_S_vbatt_P_io_channels_IDX_0_VAL_input 0
#define DT_N_S_vbatt_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_vbatt_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbatt, io_channels, 0)
#define DT_N_S_vbatt_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbatt, io_channels, 0)
#define DT_N_S_vbatt_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbatt, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbatt, io_channels, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_io_channels_LEN 1
#define DT_N_S_vbatt_P_io_channels_EXISTS 1
#define DT_N_S_vbatt_P_output_ohms 5000
#define DT_N_S_vbatt_P_output_ohms_EXISTS 1
#define DT_N_S_vbatt_P_full_ohms 15000
#define DT_N_S_vbatt_P_full_ohms_EXISTS 1
#define DT_N_S_vbatt_P_power_gpios_IDX_0_EXISTS 1
#define DT_N_S_vbatt_P_power_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_vbatt_P_power_gpios_IDX_0_VAL_pin 15
#define DT_N_S_vbatt_P_power_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_vbatt_P_power_gpios_IDX_0_VAL_flags 0
#define DT_N_S_vbatt_P_power_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_vbatt_P_power_gpios_IDX_1_EXISTS 1
#define DT_N_S_vbatt_P_power_gpios_IDX_1_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_vbatt_P_power_gpios_IDX_1_VAL_pin 14
#define DT_N_S_vbatt_P_power_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_vbatt_P_power_gpios_IDX_1_VAL_flags 0
#define DT_N_S_vbatt_P_power_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_vbatt_P_power_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbatt, power_gpios, 0) \
	fn(DT_N_S_vbatt, power_gpios, 1)
#define DT_N_S_vbatt_P_power_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbatt, power_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_vbatt, power_gpios, 1)
#define DT_N_S_vbatt_P_power_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbatt, power_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_vbatt, power_gpios, 1, __VA_ARGS__)
#define DT_N_S_vbatt_P_power_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbatt, power_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_vbatt, power_gpios, 1, __VA_ARGS__)
#define DT_N_S_vbatt_P_power_gpios_LEN 2
#define DT_N_S_vbatt_P_power_gpios_EXISTS 1
#define DT_N_S_vbatt_P_compatible {"voltage-divider"}
#define DT_N_S_vbatt_P_compatible_IDX_0 "voltage-divider"
#define DT_N_S_vbatt_P_compatible_IDX_0_STRING_UNQUOTED voltage-divider
#define DT_N_S_vbatt_P_compatible_IDX_0_STRING_TOKEN voltage_divider
#define DT_N_S_vbatt_P_compatible_IDX_0_STRING_UPPER_TOKEN VOLTAGE_DIVIDER
#define DT_N_S_vbatt_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbatt, compatible, 0)
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vbatt, compatible, 0)
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbatt, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vbatt, compatible, 0, __VA_ARGS__)
#define DT_N_S_vbatt_P_compatible_LEN 1
#define DT_N_S_vbatt_P_compatible_EXISTS 1
#define DT_N_S_vbatt_P_wakeup_source 0
#define DT_N_S_vbatt_P_wakeup_source_EXISTS 1
#define DT_N_S_vbatt_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vbatt_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 30
#define DT_N_S_cpus_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	31, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 31
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	30, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS \
	32, /* /cpus/cpu@0/itm@e0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4F
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0/itm@e0000000
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0_S_itm_e0000000
 *
 * Binding (compatible = arm,armv7m-itm):
 *   $ZEPHYR_BASE/dts/bindings/debug/arm,armv7m-itm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PATH "/cpus/cpu@0/itm@e0000000"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FULL_NAME "itm@e0000000"

/* Node parent (/cpus/cpu@0) identifier: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PARENT DT_N_S_cpus_S_cpu_0

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_ORD 32
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REQUIRES_ORDS \
	31, /* /cpus/cpu@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_EXISTS 1
#define DT_N_INST_0_arm_armv7m_itm DT_N_S_cpus_S_cpu_0_S_itm_e0000000
#define DT_N_NODELABEL_itm         DT_N_S_cpus_S_cpu_0_S_itm_e0000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_VAL_ADDRESS 3758096384 /* 0xe0000000 */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MATCHES_arm_armv7m_itm 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_COMPAT_MODEL_IDX_0 "armv7m-itm"
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_swo_ref_frequency 32000000
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_swo_ref_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible {"arm,armv7m-itm"}
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0 "arm,armv7m-itm"
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-itm
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_itm
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_ITM
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg {3758096384 /* 0xe0000000 */, 4096 /* 0x1000 */}
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_0 3758096384
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_1 4096
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_S_itm_e0000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_btn_int) fn(DT_N_S_gpio_keys_S_btn_ext) fn(DT_N_S_gpio_keys_S_tamper_key)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_btn_int) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_btn_ext) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_tamper_key)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_btn_int, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_btn_ext, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_tamper_key, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_btn_int, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_btn_ext, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys_S_tamper_key, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_btn_int)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_btn_int)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_btn_int, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_btn_int, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 33
#define DT_N_S_gpio_keys_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	34, /* /gpio_keys/btn_ext */ \
	35, /* /gpio_keys/btn_int */ \
	36, /* /gpio_keys/tamper_key */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys    DT_N_S_gpio_keys
#define DT_N_NODELABEL_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_debounce_interval_ms 30
#define DT_N_S_gpio_keys_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_wakeup_source 0
#define DT_N_S_gpio_keys_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys/btn_ext
 *
 * Node identifier: DT_N_S_gpio_keys_S_btn_ext
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_btn_ext_PATH "/gpio_keys/btn_ext"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_btn_ext_FULL_NAME "btn_ext"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_btn_ext_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_btn_ext_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_btn_ext_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_btn_ext_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_btn_ext_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_btn_ext_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_btn_ext_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_btn_ext_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_btn_ext_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_btn_ext_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_btn_ext_ORD 34
#define DT_N_S_gpio_keys_S_btn_ext_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_btn_ext_REQUIRES_ORDS \
	6, /* /soc/gpio@50000000 */ \
	33, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_btn_ext_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_btn_ext_EXISTS 1
#define DT_N_ALIAS_sw1         DT_N_S_gpio_keys_S_btn_ext
#define DT_N_NODELABEL_btn_ext DT_N_S_gpio_keys_S_btn_ext

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_btn_ext_REG_NUM 0
#define DT_N_S_gpio_keys_S_btn_ext_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_btn_ext_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_btn_ext_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_btn_ext_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_btn_ext_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_IDX_0_VAL_pin 26
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_btn_ext, gpios, 0)
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_btn_ext, gpios, 0)
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_btn_ext, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_btn_ext, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_btn_ext_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_ext_P_zephyr_code 2
#define DT_N_S_gpio_keys_S_btn_ext_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /gpio_keys/btn_int
 *
 * Node identifier: DT_N_S_gpio_keys_S_btn_int
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_btn_int_PATH "/gpio_keys/btn_int"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_btn_int_FULL_NAME "btn_int"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_btn_int_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_btn_int_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_btn_int_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_btn_int_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_btn_int_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_btn_int_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_btn_int_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_btn_int_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_btn_int_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_btn_int_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_btn_int_ORD 35
#define DT_N_S_gpio_keys_S_btn_int_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_btn_int_REQUIRES_ORDS \
	6, /* /soc/gpio@50000000 */ \
	33, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_btn_int_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_btn_int_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_btn_int
#define DT_N_ALIAS_mcuboot_button0 DT_N_S_gpio_keys_S_btn_int
#define DT_N_NODELABEL_btn_int     DT_N_S_gpio_keys_S_btn_int

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_btn_int_REG_NUM 0
#define DT_N_S_gpio_keys_S_btn_int_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_btn_int_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_btn_int_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_btn_int_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_btn_int_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_IDX_0_VAL_pin 27
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_btn_int, gpios, 0)
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_btn_int, gpios, 0)
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_btn_int, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_btn_int, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_btn_int_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_btn_int_P_zephyr_code 11
#define DT_N_S_gpio_keys_S_btn_int_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /gpio_keys/tamper_key
 *
 * Node identifier: DT_N_S_gpio_keys_S_tamper_key
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_tamper_key_PATH "/gpio_keys/tamper_key"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_tamper_key_FULL_NAME "tamper_key"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_tamper_key_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_tamper_key_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_tamper_key_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_tamper_key_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_tamper_key_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_tamper_key_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_tamper_key_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_tamper_key_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_tamper_key_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_tamper_key_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_tamper_key_ORD 36
#define DT_N_S_gpio_keys_S_tamper_key_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_tamper_key_REQUIRES_ORDS \
	6, /* /soc/gpio@50000000 */ \
	33, /* /gpio_keys */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_tamper_key_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_tamper_key_EXISTS 1
#define DT_N_NODELABEL_tamper_key DT_N_S_gpio_keys_S_tamper_key

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_tamper_key_REG_NUM 0
#define DT_N_S_gpio_keys_S_tamper_key_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_tamper_key_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_tamper_key_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_tamper_key_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_tamper_key_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_IDX_0_VAL_pin 12
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_tamper_key, gpios, 0)
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_tamper_key, gpios, 0)
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_tamper_key, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_tamper_key, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_tamper_key_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_tamper_key_P_zephyr_code 3
#define DT_N_S_gpio_keys_S_tamper_key_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /gpio_leds
 *
 * Node identifier: DT_N_S_gpio_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_leds_PATH "/gpio_leds"

/* Node's name with unit-address: */
#define DT_N_S_gpio_leds_FULL_NAME "gpio_leds"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_leds_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_leds_FOREACH_CHILD(fn) fn(DT_N_S_gpio_leds_S_led_r) fn(DT_N_S_gpio_leds_S_led_g) fn(DT_N_S_gpio_leds_S_led_y) fn(DT_N_S_gpio_leds_S_led_ext) fn(DT_N_S_gpio_leds_S_led_load)
#define DT_N_S_gpio_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_leds_S_led_r) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_g) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_y) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_ext) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_load)
#define DT_N_S_gpio_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_leds_S_led_r, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_g, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_y, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_ext, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_load, __VA_ARGS__)
#define DT_N_S_gpio_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_leds_S_led_r, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_g, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_y, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_ext, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_load, __VA_ARGS__)
#define DT_N_S_gpio_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_leds_S_led_r) fn(DT_N_S_gpio_leds_S_led_g) fn(DT_N_S_gpio_leds_S_led_y)
#define DT_N_S_gpio_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_leds_S_led_r) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_g) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_y)
#define DT_N_S_gpio_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_leds_S_led_r, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_g, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_y, __VA_ARGS__)
#define DT_N_S_gpio_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_leds_S_led_r, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_g, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_leds_S_led_y, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_gpio_leds_ORD 37
#define DT_N_S_gpio_leds_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_leds_SUPPORTS_ORDS \
	38, /* /gpio_leds/led_ext */ \
	39, /* /gpio_leds/led_g */ \
	40, /* /gpio_leds/led_load */ \
	41, /* /gpio_leds/led_r */ \
	42, /* /gpio_leds/led_y */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds    DT_N_S_gpio_leds
#define DT_N_NODELABEL_gpio_leds DT_N_S_gpio_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_leds_REG_NUM 0
#define DT_N_S_gpio_leds_RANGES_NUM 0
#define DT_N_S_gpio_leds_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_leds_IRQ_NUM 0
#define DT_N_S_gpio_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_gpio_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_leds_P_compatible {"gpio-leds"}
#define DT_N_S_gpio_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_gpio_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_gpio_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_gpio_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_gpio_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_leds, compatible, 0)
#define DT_N_S_gpio_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_leds, compatible, 0)
#define DT_N_S_gpio_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_P_compatible_LEN 1
#define DT_N_S_gpio_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /gpio_leds/led_ext
 *
 * Node identifier: DT_N_S_gpio_leds_S_led_ext
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_leds_S_led_ext_PATH "/gpio_leds/led_ext"

/* Node's name with unit-address: */
#define DT_N_S_gpio_leds_S_led_ext_FULL_NAME "led_ext"

/* Node parent (/gpio_leds) identifier: */
#define DT_N_S_gpio_leds_S_led_ext_PARENT DT_N_S_gpio_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_leds_S_led_ext_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_leds_S_led_ext_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_leds_S_led_ext_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_leds_S_led_ext_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_leds_S_led_ext_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_leds_S_led_ext_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_leds_S_led_ext_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_leds_S_led_ext_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_leds_S_led_ext_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_leds_S_led_ext_ORD 38
#define DT_N_S_gpio_leds_S_led_ext_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_leds_S_led_ext_REQUIRES_ORDS \
	4, /* /soc/gpio@50000300 */ \
	37, /* /gpio_leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_leds_S_led_ext_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_leds_S_led_ext_EXISTS 1
#define DT_N_ALIAS_led3        DT_N_S_gpio_leds_S_led_ext
#define DT_N_NODELABEL_led_ext DT_N_S_gpio_leds_S_led_ext

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_leds_S_led_ext_REG_NUM 0
#define DT_N_S_gpio_leds_S_led_ext_RANGES_NUM 0
#define DT_N_S_gpio_leds_S_led_ext_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_leds_S_led_ext_IRQ_NUM 0
#define DT_N_S_gpio_leds_S_led_ext_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_leds_S_led_ext_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_IDX_0_VAL_pin 4
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_leds_S_led_ext, gpios, 0)
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_leds_S_led_ext, gpios, 0)
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_leds_S_led_ext, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_leds_S_led_ext, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_LEN 1
#define DT_N_S_gpio_leds_S_led_ext_P_gpios_EXISTS 1

/*
 * Devicetree node: /gpio_leds/led_g
 *
 * Node identifier: DT_N_S_gpio_leds_S_led_g
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_leds_S_led_g_PATH "/gpio_leds/led_g"

/* Node's name with unit-address: */
#define DT_N_S_gpio_leds_S_led_g_FULL_NAME "led_g"

/* Node parent (/gpio_leds) identifier: */
#define DT_N_S_gpio_leds_S_led_g_PARENT DT_N_S_gpio_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_leds_S_led_g_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_leds_S_led_g_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_leds_S_led_g_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_leds_S_led_g_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_leds_S_led_g_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_leds_S_led_g_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_leds_S_led_g_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_leds_S_led_g_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_leds_S_led_g_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_leds_S_led_g_ORD 39
#define DT_N_S_gpio_leds_S_led_g_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_leds_S_led_g_REQUIRES_ORDS \
	4, /* /soc/gpio@50000300 */ \
	37, /* /gpio_leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_leds_S_led_g_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_leds_S_led_g_EXISTS 1
#define DT_N_ALIAS_led0         DT_N_S_gpio_leds_S_led_g
#define DT_N_ALIAS_mcuboot_led0 DT_N_S_gpio_leds_S_led_g
#define DT_N_NODELABEL_led_g    DT_N_S_gpio_leds_S_led_g

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_leds_S_led_g_REG_NUM 0
#define DT_N_S_gpio_leds_S_led_g_RANGES_NUM 0
#define DT_N_S_gpio_leds_S_led_g_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_leds_S_led_g_IRQ_NUM 0
#define DT_N_S_gpio_leds_S_led_g_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_leds_S_led_g_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_leds_S_led_g_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_leds_S_led_g_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_gpio_leds_S_led_g_P_gpios_IDX_0_VAL_pin 11
#define DT_N_S_gpio_leds_S_led_g_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_leds_S_led_g_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_gpio_leds_S_led_g_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_leds_S_led_g_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_leds_S_led_g, gpios, 0)
#define DT_N_S_gpio_leds_S_led_g_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_leds_S_led_g, gpios, 0)
#define DT_N_S_gpio_leds_S_led_g_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_leds_S_led_g, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_S_led_g_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_leds_S_led_g, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_S_led_g_P_gpios_LEN 1
#define DT_N_S_gpio_leds_S_led_g_P_gpios_EXISTS 1

/*
 * Devicetree node: /gpio_leds/led_load
 *
 * Node identifier: DT_N_S_gpio_leds_S_led_load
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_leds_S_led_load_PATH "/gpio_leds/led_load"

/* Node's name with unit-address: */
#define DT_N_S_gpio_leds_S_led_load_FULL_NAME "led_load"

/* Node parent (/gpio_leds) identifier: */
#define DT_N_S_gpio_leds_S_led_load_PARENT DT_N_S_gpio_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_leds_S_led_load_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_leds_S_led_load_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_leds_S_led_load_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_leds_S_led_load_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_leds_S_led_load_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_leds_S_led_load_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_leds_S_led_load_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_leds_S_led_load_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_leds_S_led_load_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_leds_S_led_load_ORD 40
#define DT_N_S_gpio_leds_S_led_load_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_leds_S_led_load_REQUIRES_ORDS \
	4, /* /soc/gpio@50000300 */ \
	37, /* /gpio_leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_leds_S_led_load_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_leds_S_led_load_EXISTS 1
#define DT_N_NODELABEL_led_load DT_N_S_gpio_leds_S_led_load

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_leds_S_led_load_REG_NUM 0
#define DT_N_S_gpio_leds_S_led_load_RANGES_NUM 0
#define DT_N_S_gpio_leds_S_led_load_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_leds_S_led_load_IRQ_NUM 0
#define DT_N_S_gpio_leds_S_led_load_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_leds_S_led_load_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_leds_S_led_load_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_leds_S_led_load_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_gpio_leds_S_led_load_P_gpios_IDX_0_VAL_pin 5
#define DT_N_S_gpio_leds_S_led_load_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_leds_S_led_load_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_gpio_leds_S_led_load_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_leds_S_led_load_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_leds_S_led_load, gpios, 0)
#define DT_N_S_gpio_leds_S_led_load_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_leds_S_led_load, gpios, 0)
#define DT_N_S_gpio_leds_S_led_load_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_leds_S_led_load, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_S_led_load_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_leds_S_led_load, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_S_led_load_P_gpios_LEN 1
#define DT_N_S_gpio_leds_S_led_load_P_gpios_EXISTS 1

/*
 * Devicetree node: /gpio_leds/led_r
 *
 * Node identifier: DT_N_S_gpio_leds_S_led_r
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_leds_S_led_r_PATH "/gpio_leds/led_r"

/* Node's name with unit-address: */
#define DT_N_S_gpio_leds_S_led_r_FULL_NAME "led_r"

/* Node parent (/gpio_leds) identifier: */
#define DT_N_S_gpio_leds_S_led_r_PARENT DT_N_S_gpio_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_leds_S_led_r_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_leds_S_led_r_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_leds_S_led_r_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_leds_S_led_r_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_leds_S_led_r_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_leds_S_led_r_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_leds_S_led_r_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_leds_S_led_r_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_leds_S_led_r_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_leds_S_led_r_ORD 41
#define DT_N_S_gpio_leds_S_led_r_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_leds_S_led_r_REQUIRES_ORDS \
	4, /* /soc/gpio@50000300 */ \
	37, /* /gpio_leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_leds_S_led_r_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_leds_S_led_r_EXISTS 1
#define DT_N_ALIAS_led2      DT_N_S_gpio_leds_S_led_r
#define DT_N_NODELABEL_led_r DT_N_S_gpio_leds_S_led_r

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_leds_S_led_r_REG_NUM 0
#define DT_N_S_gpio_leds_S_led_r_RANGES_NUM 0
#define DT_N_S_gpio_leds_S_led_r_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_leds_S_led_r_IRQ_NUM 0
#define DT_N_S_gpio_leds_S_led_r_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_leds_S_led_r_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_leds_S_led_r_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_leds_S_led_r_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_gpio_leds_S_led_r_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_gpio_leds_S_led_r_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_leds_S_led_r_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_gpio_leds_S_led_r_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_leds_S_led_r_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_leds_S_led_r, gpios, 0)
#define DT_N_S_gpio_leds_S_led_r_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_leds_S_led_r, gpios, 0)
#define DT_N_S_gpio_leds_S_led_r_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_leds_S_led_r, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_S_led_r_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_leds_S_led_r, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_S_led_r_P_gpios_LEN 1
#define DT_N_S_gpio_leds_S_led_r_P_gpios_EXISTS 1

/*
 * Devicetree node: /gpio_leds/led_y
 *
 * Node identifier: DT_N_S_gpio_leds_S_led_y
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_leds_S_led_y_PATH "/gpio_leds/led_y"

/* Node's name with unit-address: */
#define DT_N_S_gpio_leds_S_led_y_FULL_NAME "led_y"

/* Node parent (/gpio_leds) identifier: */
#define DT_N_S_gpio_leds_S_led_y_PARENT DT_N_S_gpio_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_leds_S_led_y_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_leds_S_led_y_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_leds_S_led_y_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_leds_S_led_y_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_leds_S_led_y_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_leds_S_led_y_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_leds_S_led_y_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_leds_S_led_y_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_leds_S_led_y_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_leds_S_led_y_ORD 42
#define DT_N_S_gpio_leds_S_led_y_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_leds_S_led_y_REQUIRES_ORDS \
	4, /* /soc/gpio@50000300 */ \
	37, /* /gpio_leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_leds_S_led_y_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_leds_S_led_y_EXISTS 1
#define DT_N_ALIAS_led1      DT_N_S_gpio_leds_S_led_y
#define DT_N_NODELABEL_led_y DT_N_S_gpio_leds_S_led_y

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_leds_S_led_y_REG_NUM 0
#define DT_N_S_gpio_leds_S_led_y_RANGES_NUM 0
#define DT_N_S_gpio_leds_S_led_y_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_leds_S_led_y_IRQ_NUM 0
#define DT_N_S_gpio_leds_S_led_y_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_leds_S_led_y_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_leds_S_led_y_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_leds_S_led_y_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_gpio_leds_S_led_y_P_gpios_IDX_0_VAL_pin 12
#define DT_N_S_gpio_leds_S_led_y_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_leds_S_led_y_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_gpio_leds_S_led_y_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_leds_S_led_y_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_leds_S_led_y, gpios, 0)
#define DT_N_S_gpio_leds_S_led_y_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_leds_S_led_y, gpios, 0)
#define DT_N_S_gpio_leds_S_led_y_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_leds_S_led_y, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_S_led_y_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_leds_S_led_y, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_leds_S_led_y_P_gpios_LEN 1
#define DT_N_S_gpio_leds_S_led_y_P_gpios_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PATH "/pin-controller/i2c0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/i2c0_default) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PARENT DT_N_S_pin_controller_S_i2c0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD 43
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REQUIRES_ORDS \
	12, /* /pin-controller/i2c0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels {786453 /* 0xc0015 */, 720916 /* 0xb0014 */}
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_0 786453
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_1 720916
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_LEN 2
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_drive_mode 7
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c0_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_PATH "/pin-controller/i2c0_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/i2c0_sleep) identifier: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_PARENT DT_N_S_pin_controller_S_i2c0_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_ORD 44
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_REQUIRES_ORDS \
	13, /* /pin-controller/i2c0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels {786453 /* 0xc0015 */, 720916 /* 0xb0014 */}
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_0 786453
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_1 720916
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_LEN 2
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_i2c0_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/pwm0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_pwm0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_pwm0_default_PATH "/pin-controller/pwm0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_pwm0_default_FULL_NAME "pwm0_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_pwm0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_pwm0_default_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_pwm0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1)
#define DT_N_S_pin_controller_S_pwm0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1)
#define DT_N_S_pin_controller_S_pwm0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1)
#define DT_N_S_pin_controller_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1)
#define DT_N_S_pin_controller_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_pwm0_default_ORD 45
#define DT_N_S_pin_controller_S_pwm0_default_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_pwm0_default_REQUIRES_ORDS \
	11, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_pwm0_default_SUPPORTS_ORDS \
	46, /* /pin-controller/pwm0_default/group1 */ \
	65, /* /soc/pwm@4001c000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_pwm0_default_EXISTS 1
#define DT_N_NODELABEL_pwm0_default DT_N_S_pin_controller_S_pwm0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_pwm0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_pwm0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_pwm0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_pwm0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_pwm0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_pwm0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/pwm0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_pwm0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_PATH "/pin-controller/pwm0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/pwm0_default) identifier: */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_PARENT DT_N_S_pin_controller_S_pwm0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_ORD 46
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_REQUIRES_ORDS \
	45, /* /pin-controller/pwm0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels {1441835 /* 0x16002b */, 1507372 /* 0x17002c */, 1572909 /* 0x18002d */, 1638436 /* 0x190024 */}
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_IDX_0 1441835
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_IDX_1 1507372
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_IDX_2 1572909
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_IDX_3 1638436
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_IDX_3_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 1) \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 2) \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 3)
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 3)
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 2, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, psels, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_LEN 4
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_pwm0_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/pwm0_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_pwm0_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_pwm0_sleep_PATH "/pin-controller/pwm0_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_pwm0_sleep_FULL_NAME "pwm0_sleep"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_pwm0_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_pwm0_sleep_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_pwm0_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1)
#define DT_N_S_pin_controller_S_pwm0_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1)
#define DT_N_S_pin_controller_S_pwm0_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm0_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm0_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1)
#define DT_N_S_pin_controller_S_pwm0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1)
#define DT_N_S_pin_controller_S_pwm0_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_pwm0_sleep_ORD 47
#define DT_N_S_pin_controller_S_pwm0_sleep_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_pwm0_sleep_REQUIRES_ORDS \
	11, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_pwm0_sleep_SUPPORTS_ORDS \
	48, /* /pin-controller/pwm0_sleep/group1 */ \
	65, /* /soc/pwm@4001c000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_pwm0_sleep_EXISTS 1
#define DT_N_NODELABEL_pwm0_sleep DT_N_S_pin_controller_S_pwm0_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_pwm0_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_pwm0_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_pwm0_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_pwm0_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_pwm0_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_pwm0_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/pwm0_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_pwm0_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_PATH "/pin-controller/pwm0_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/pwm0_sleep) identifier: */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_PARENT DT_N_S_pin_controller_S_pwm0_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_ORD 48
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_REQUIRES_ORDS \
	47, /* /pin-controller/pwm0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels {1441835 /* 0x16002b */, 1507372 /* 0x17002c */, 1572909 /* 0x18002d */, 1638436 /* 0x190024 */}
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_IDX_0 1441835
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_IDX_1 1507372
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_IDX_2 1572909
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_IDX_3 1638436
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_IDX_3_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 1) \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 2) \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 3)
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 3)
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 2, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, psels, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_LEN 4
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_pwm0_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi1_default
 *
 * Node identifier: DT_N_S_pin_controller_S_spi1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi1_default_PATH "/pin-controller/spi1_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi1_default_FULL_NAME "spi1_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spi1_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi1_default_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) fn(DT_N_S_pin_controller_S_spi1_default_S_group2)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default_S_group2)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) fn(DT_N_S_pin_controller_S_spi1_default_S_group2)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default_S_group2)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi1_default_ORD 49
#define DT_N_S_pin_controller_S_spi1_default_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi1_default_REQUIRES_ORDS \
	11, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi1_default_SUPPORTS_ORDS \
	50, /* /pin-controller/spi1_default/group1 */ \
	51, /* /pin-controller/spi1_default/group2 */ \
	155, /* /soc/spi@40004000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi1_default_EXISTS 1
#define DT_N_NODELABEL_spi1_default DT_N_S_pin_controller_S_spi1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi1_default_REG_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi1_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/spi1_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spi1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_PATH "/pin-controller/spi1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/spi1_default) identifier: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_PARENT DT_N_S_pin_controller_S_spi1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_ORD 50
#define DT_N_S_pin_controller_S_spi1_default_S_group1_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_REQUIRES_ORDS \
	49, /* /pin-controller/spi1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_psels {262166 /* 0x40016 */, 327712 /* 0x50020 */}
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_psels_IDX_0 262166
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_psels_IDX_1 327712
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi1_default_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_psels_LEN 2
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_spi1_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi1_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_spi1_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_PATH "/pin-controller/spi1_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FULL_NAME "group2"

/* Node parent (/pin-controller/spi1_default) identifier: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_PARENT DT_N_S_pin_controller_S_spi1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_ORD 51
#define DT_N_S_pin_controller_S_spi1_default_S_group2_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_REQUIRES_ORDS \
	49, /* /pin-controller/spi1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi1_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_psels {393240 /* 0x60018 */}
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_psels_IDX_0 393240
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_psels_LEN 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_nordic_invert 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_pull_down 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_low_power_enable 0
#define DT_N_S_pin_controller_S_spi1_default_S_group2_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi1_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_spi1_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi1_sleep_PATH "/pin-controller/spi1_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi1_sleep_FULL_NAME "spi1_sleep"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spi1_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi1_sleep_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi1_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi1_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi1_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi1_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi1_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi1_sleep_ORD 52
#define DT_N_S_pin_controller_S_spi1_sleep_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi1_sleep_REQUIRES_ORDS \
	11, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi1_sleep_SUPPORTS_ORDS \
	53, /* /pin-controller/spi1_sleep/group1 */ \
	155, /* /soc/spi@40004000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi1_sleep_EXISTS 1
#define DT_N_NODELABEL_spi1_sleep DT_N_S_pin_controller_S_spi1_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi1_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_spi1_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi1_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi1_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi1_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi1_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/spi1_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spi1_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_PATH "/pin-controller/spi1_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/spi1_sleep) identifier: */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_PARENT DT_N_S_pin_controller_S_spi1_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_ORD 53
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_REQUIRES_ORDS \
	52, /* /pin-controller/spi1_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels {262166 /* 0x40016 */, 327712 /* 0x50020 */, 393240 /* 0x60018 */}
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_IDX_0 262166
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_IDX_1 327712
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_IDX_2 393240
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 1) \
	fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 2)
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 2)
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, psels, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_LEN 3
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_spi1_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_PATH "/pin-controller/uart0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME "uart0_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_ORD 54
#define DT_N_S_pin_controller_S_uart0_default_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_REQUIRES_ORDS \
	11, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_SUPPORTS_ORDS \
	55, /* /pin-controller/uart0_default/group1 */ \
	56, /* /pin-controller/uart0_default/group2 */ \
	157, /* /soc/uart@40002000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_EXISTS 1
#define DT_N_NODELABEL_uart0_default DT_N_S_pin_controller_S_uart0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PATH "/pin-controller/uart0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD 55
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REQUIRES_ORDS \
	54, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels {13 /* 0xd */}
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_0 13
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PATH "/pin-controller/uart0_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME "group2"

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD 56
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REQUIRES_ORDS \
	54, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels {65550 /* 0x1000e */}
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_IDX_0 65550
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_low_power_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_sleep_PATH "/pin-controller/uart0_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_sleep_FULL_NAME "uart0_sleep"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_sleep_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_sleep_ORD 57
#define DT_N_S_pin_controller_S_uart0_sleep_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_sleep_REQUIRES_ORDS \
	11, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_sleep_SUPPORTS_ORDS \
	58, /* /pin-controller/uart0_sleep/group1 */ \
	157, /* /soc/uart@40002000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_sleep_EXISTS 1
#define DT_N_NODELABEL_uart0_sleep DT_N_S_pin_controller_S_uart0_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PATH "/pin-controller/uart0_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/uart0_sleep) identifier: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PARENT DT_N_S_pin_controller_S_uart0_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_ORD 58
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_REQUIRES_ORDS \
	57, /* /pin-controller/uart0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels {13 /* 0xd */, 65550 /* 0x1000e */}
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_0 13
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_1 65550
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_LEN 2
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart1_default
 *
 * Node identifier: DT_N_S_pin_controller_S_uart1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart1_default_PATH "/pin-controller/uart1_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart1_default_FULL_NAME "uart1_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart1_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart1_default_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart1_default_ORD 59
#define DT_N_S_pin_controller_S_uart1_default_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart1_default_REQUIRES_ORDS \
	11, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart1_default_SUPPORTS_ORDS \
	60, /* /pin-controller/uart1_default/group1 */ \
	61, /* /pin-controller/uart1_default/group2 */ \
	159, /* /soc/uart@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart1_default_EXISTS 1
#define DT_N_NODELABEL_uart1_default DT_N_S_pin_controller_S_uart1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart1_default_REG_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart1_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart1_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_PATH "/pin-controller/uart1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/uart1_default) identifier: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_PARENT DT_N_S_pin_controller_S_uart1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_ORD 60
#define DT_N_S_pin_controller_S_uart1_default_S_group1_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_REQUIRES_ORDS \
	59, /* /pin-controller/uart1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_psels {7 /* 0x7 */}
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_psels_IDX_0 7
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, psels, 0)
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, psels, 0)
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_psels_LEN 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_uart1_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart1_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_uart1_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_PATH "/pin-controller/uart1_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FULL_NAME "group2"

/* Node parent (/pin-controller/uart1_default) identifier: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_PARENT DT_N_S_pin_controller_S_uart1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_ORD 61
#define DT_N_S_pin_controller_S_uart1_default_S_group2_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_REQUIRES_ORDS \
	59, /* /pin-controller/uart1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart1_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_psels {65544 /* 0x10008 */}
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_psels_IDX_0 65544
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, psels, 0)
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, psels, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_psels_LEN 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_low_power_enable 0
#define DT_N_S_pin_controller_S_uart1_default_S_group2_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart1_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_uart1_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart1_sleep_PATH "/pin-controller/uart1_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart1_sleep_FULL_NAME "uart1_sleep"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart1_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart1_sleep_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart1_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart1_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart1_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart1_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart1_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart1_sleep_ORD 62
#define DT_N_S_pin_controller_S_uart1_sleep_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart1_sleep_REQUIRES_ORDS \
	11, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart1_sleep_SUPPORTS_ORDS \
	63, /* /pin-controller/uart1_sleep/group1 */ \
	159, /* /soc/uart@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart1_sleep_EXISTS 1
#define DT_N_NODELABEL_uart1_sleep DT_N_S_pin_controller_S_uart1_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart1_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_uart1_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart1_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart1_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart1_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart1_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart1_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart1_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_PATH "/pin-controller/uart1_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/uart1_sleep) identifier: */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_PARENT DT_N_S_pin_controller_S_uart1_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_ORD 63
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_REQUIRES_ORDS \
	62, /* /pin-controller/uart1_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_psels {7 /* 0x7 */, 65544 /* 0x10008 */}
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_psels_IDX_0 7
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_psels_IDX_1 65544
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, psels, 1)
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, psels, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_psels_LEN 2
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_uart1_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pwm_leds
 *
 * Node identifier: DT_N_S_pwm_leds
 *
 * Binding (compatible = pwm-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/pwm-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwm_leds_PATH "/pwm_leds"

/* Node's name with unit-address: */
#define DT_N_S_pwm_leds_FULL_NAME "pwm_leds"

/* Node parent (/) identifier: */
#define DT_N_S_pwm_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pwm_leds_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwm_leds_FOREACH_CHILD(fn) fn(DT_N_S_pwm_leds_S_pwm_led_r) fn(DT_N_S_pwm_leds_S_pwm_led_g) fn(DT_N_S_pwm_leds_S_pwm_led_y) fn(DT_N_S_pwm_leds_S_pwm_led_ext)
#define DT_N_S_pwm_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pwm_leds_S_pwm_led_r) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds_S_pwm_led_g) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds_S_pwm_led_y) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds_S_pwm_led_ext)
#define DT_N_S_pwm_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pwm_leds_S_pwm_led_r, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_g, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_y, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_ext, __VA_ARGS__)
#define DT_N_S_pwm_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds_S_pwm_led_r, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds_S_pwm_led_g, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds_S_pwm_led_y, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds_S_pwm_led_ext, __VA_ARGS__)
#define DT_N_S_pwm_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pwm_leds_S_pwm_led_r) fn(DT_N_S_pwm_leds_S_pwm_led_g) fn(DT_N_S_pwm_leds_S_pwm_led_y)
#define DT_N_S_pwm_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pwm_leds_S_pwm_led_r) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds_S_pwm_led_g) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds_S_pwm_led_y)
#define DT_N_S_pwm_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pwm_leds_S_pwm_led_r, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_g, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_y, __VA_ARGS__)
#define DT_N_S_pwm_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds_S_pwm_led_r, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds_S_pwm_led_g, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds_S_pwm_led_y, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pwm_leds_ORD 64
#define DT_N_S_pwm_leds_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwm_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwm_leds_SUPPORTS_ORDS \
	66, /* /pwm_leds/pwm_led_ext */ \
	67, /* /pwm_leds/pwm_led_g */ \
	68, /* /pwm_leds/pwm_led_r */ \
	69, /* /pwm_leds/pwm_led_y */

/* Existence and alternate IDs: */
#define DT_N_S_pwm_leds_EXISTS 1
#define DT_N_INST_0_pwm_leds    DT_N_S_pwm_leds
#define DT_N_NODELABEL_pwm_leds DT_N_S_pwm_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwm_leds_REG_NUM 0
#define DT_N_S_pwm_leds_RANGES_NUM 0
#define DT_N_S_pwm_leds_FOREACH_RANGE(fn) 
#define DT_N_S_pwm_leds_IRQ_NUM 0
#define DT_N_S_pwm_leds_COMPAT_MATCHES_pwm_leds 1
#define DT_N_S_pwm_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwm_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwm_leds_P_compatible {"pwm-leds"}
#define DT_N_S_pwm_leds_P_compatible_IDX_0 "pwm-leds"
#define DT_N_S_pwm_leds_P_compatible_IDX_0_STRING_UNQUOTED pwm-leds
#define DT_N_S_pwm_leds_P_compatible_IDX_0_STRING_TOKEN pwm_leds
#define DT_N_S_pwm_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN PWM_LEDS
#define DT_N_S_pwm_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pwm_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwm_leds, compatible, 0)
#define DT_N_S_pwm_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwm_leds, compatible, 0)
#define DT_N_S_pwm_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwm_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_P_compatible_LEN 1
#define DT_N_S_pwm_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pwm@4001c000
 *
 * Node identifier: DT_N_S_soc_S_pwm_4001c000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_4001c000_PATH "/soc/pwm@4001c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_4001c000_FULL_NAME "pwm@4001c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_4001c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_4001c000_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_4001c000_ORD 65
#define DT_N_S_soc_S_pwm_4001c000_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_4001c000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */ \
	45, /* /pin-controller/pwm0_default */ \
	47, /* /pin-controller/pwm0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_4001c000_SUPPORTS_ORDS \
	66, /* /pwm_leds/pwm_led_ext */ \
	67, /* /pwm_leds/pwm_led_g */ \
	68, /* /pwm_leds/pwm_led_r */ \
	69, /* /pwm_leds/pwm_led_y */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_4001c000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pwm DT_N_S_soc_S_pwm_4001c000
#define DT_N_NODELABEL_pwm0        DT_N_S_soc_S_pwm_4001c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_4001c000_REG_NUM 1
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_VAL_ADDRESS 1073856512 /* 0x4001c000 */
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_4001c000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_4001c000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_4001c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_NUM 2
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_pwm0_default
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_pwm0_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_4001c000_P_reg {1073856512 /* 0x4001c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_0 1073856512
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_pwm0_default
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_pwm0_default
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_4001c000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_status "okay"
#define DT_N_S_soc_S_pwm_4001c000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pwm_4001c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pwm_4001c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pwm_4001c000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pwm_4001c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, status, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4001c000, status, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4001c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_4001c000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts {28 /* 0x1c */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_4001c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_4001c000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_pwm0_sleep
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_pwm0_sleep
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_1, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_1, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_names, 1)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_names, 1)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pwm_4001c000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_pwm_4001c000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /pwm_leds/pwm_led_ext
 *
 * Node identifier: DT_N_S_pwm_leds_S_pwm_led_ext
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwm_leds_S_pwm_led_ext_PATH "/pwm_leds/pwm_led_ext"

/* Node's name with unit-address: */
#define DT_N_S_pwm_leds_S_pwm_led_ext_FULL_NAME "pwm_led_ext"

/* Node parent (/pwm_leds) identifier: */
#define DT_N_S_pwm_leds_S_pwm_led_ext_PARENT DT_N_S_pwm_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwm_leds_S_pwm_led_ext_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwm_leds_S_pwm_led_ext_FOREACH_CHILD(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_ext_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwm_leds_S_pwm_led_ext_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_ext_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_ext_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_ext_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwm_leds_S_pwm_led_ext_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_ext_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwm_leds_S_pwm_led_ext_ORD 66
#define DT_N_S_pwm_leds_S_pwm_led_ext_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwm_leds_S_pwm_led_ext_REQUIRES_ORDS \
	64, /* /pwm_leds */ \
	65, /* /soc/pwm@4001c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwm_leds_S_pwm_led_ext_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwm_leds_S_pwm_led_ext_EXISTS 1
#define DT_N_ALIAS_pwm_led3        DT_N_S_pwm_leds_S_pwm_led_ext
#define DT_N_NODELABEL_pwm_led_ext DT_N_S_pwm_leds_S_pwm_led_ext

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwm_leds_S_pwm_led_ext_REG_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_ext_RANGES_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_ext_FOREACH_RANGE(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_ext_IRQ_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_ext_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwm_leds_S_pwm_led_ext_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_4001c000
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_IDX_0_VAL_channel 3
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwm_leds_S_pwm_led_ext, pwms, 0)
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwm_leds_S_pwm_led_ext, pwms, 0)
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwm_leds_S_pwm_led_ext, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds_S_pwm_led_ext, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_LEN 1
#define DT_N_S_pwm_leds_S_pwm_led_ext_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwm_leds/pwm_led_g
 *
 * Node identifier: DT_N_S_pwm_leds_S_pwm_led_g
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwm_leds_S_pwm_led_g_PATH "/pwm_leds/pwm_led_g"

/* Node's name with unit-address: */
#define DT_N_S_pwm_leds_S_pwm_led_g_FULL_NAME "pwm_led_g"

/* Node parent (/pwm_leds) identifier: */
#define DT_N_S_pwm_leds_S_pwm_led_g_PARENT DT_N_S_pwm_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwm_leds_S_pwm_led_g_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwm_leds_S_pwm_led_g_FOREACH_CHILD(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_g_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwm_leds_S_pwm_led_g_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_g_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_g_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_g_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwm_leds_S_pwm_led_g_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_g_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwm_leds_S_pwm_led_g_ORD 67
#define DT_N_S_pwm_leds_S_pwm_led_g_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwm_leds_S_pwm_led_g_REQUIRES_ORDS \
	64, /* /pwm_leds */ \
	65, /* /soc/pwm@4001c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwm_leds_S_pwm_led_g_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwm_leds_S_pwm_led_g_EXISTS 1
#define DT_N_ALIAS_pwm_led0      DT_N_S_pwm_leds_S_pwm_led_g
#define DT_N_NODELABEL_pwm_led_g DT_N_S_pwm_leds_S_pwm_led_g

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwm_leds_S_pwm_led_g_REG_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_g_RANGES_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_g_FOREACH_RANGE(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_g_IRQ_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_g_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwm_leds_S_pwm_led_g_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_4001c000
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_IDX_0_VAL_channel 0
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwm_leds_S_pwm_led_g, pwms, 0)
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwm_leds_S_pwm_led_g, pwms, 0)
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwm_leds_S_pwm_led_g, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds_S_pwm_led_g, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_LEN 1
#define DT_N_S_pwm_leds_S_pwm_led_g_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwm_leds/pwm_led_r
 *
 * Node identifier: DT_N_S_pwm_leds_S_pwm_led_r
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwm_leds_S_pwm_led_r_PATH "/pwm_leds/pwm_led_r"

/* Node's name with unit-address: */
#define DT_N_S_pwm_leds_S_pwm_led_r_FULL_NAME "pwm_led_r"

/* Node parent (/pwm_leds) identifier: */
#define DT_N_S_pwm_leds_S_pwm_led_r_PARENT DT_N_S_pwm_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwm_leds_S_pwm_led_r_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwm_leds_S_pwm_led_r_FOREACH_CHILD(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_r_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwm_leds_S_pwm_led_r_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_r_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_r_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_r_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwm_leds_S_pwm_led_r_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_r_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwm_leds_S_pwm_led_r_ORD 68
#define DT_N_S_pwm_leds_S_pwm_led_r_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwm_leds_S_pwm_led_r_REQUIRES_ORDS \
	64, /* /pwm_leds */ \
	65, /* /soc/pwm@4001c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwm_leds_S_pwm_led_r_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwm_leds_S_pwm_led_r_EXISTS 1
#define DT_N_ALIAS_pwm_led2      DT_N_S_pwm_leds_S_pwm_led_r
#define DT_N_NODELABEL_pwm_led_r DT_N_S_pwm_leds_S_pwm_led_r

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwm_leds_S_pwm_led_r_REG_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_r_RANGES_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_r_FOREACH_RANGE(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_r_IRQ_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_r_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwm_leds_S_pwm_led_r_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_4001c000
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_IDX_0_VAL_channel 2
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwm_leds_S_pwm_led_r, pwms, 0)
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwm_leds_S_pwm_led_r, pwms, 0)
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwm_leds_S_pwm_led_r, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds_S_pwm_led_r, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_LEN 1
#define DT_N_S_pwm_leds_S_pwm_led_r_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwm_leds/pwm_led_y
 *
 * Node identifier: DT_N_S_pwm_leds_S_pwm_led_y
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwm_leds_S_pwm_led_y_PATH "/pwm_leds/pwm_led_y"

/* Node's name with unit-address: */
#define DT_N_S_pwm_leds_S_pwm_led_y_FULL_NAME "pwm_led_y"

/* Node parent (/pwm_leds) identifier: */
#define DT_N_S_pwm_leds_S_pwm_led_y_PARENT DT_N_S_pwm_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwm_leds_S_pwm_led_y_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwm_leds_S_pwm_led_y_FOREACH_CHILD(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_y_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwm_leds_S_pwm_led_y_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_y_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_y_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_y_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwm_leds_S_pwm_led_y_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_y_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwm_leds_S_pwm_led_y_ORD 69
#define DT_N_S_pwm_leds_S_pwm_led_y_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwm_leds_S_pwm_led_y_REQUIRES_ORDS \
	64, /* /pwm_leds */ \
	65, /* /soc/pwm@4001c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwm_leds_S_pwm_led_y_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwm_leds_S_pwm_led_y_EXISTS 1
#define DT_N_ALIAS_pwm_led1      DT_N_S_pwm_leds_S_pwm_led_y
#define DT_N_NODELABEL_pwm_led_y DT_N_S_pwm_leds_S_pwm_led_y

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwm_leds_S_pwm_led_y_REG_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_y_RANGES_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_y_FOREACH_RANGE(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_y_IRQ_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_y_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwm_leds_S_pwm_led_y_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_4001c000
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_IDX_0_VAL_channel 1
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwm_leds_S_pwm_led_y, pwms, 0)
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwm_leds_S_pwm_led_y, pwms, 0)
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwm_leds_S_pwm_led_y, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds_S_pwm_led_y, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_LEN 1
#define DT_N_S_pwm_leds_S_pwm_led_y_P_pwms_EXISTS 1

/*
 * Devicetree node: /soc/acl@4001e000
 *
 * Node identifier: DT_N_S_soc_S_acl_4001e000
 *
 * Binding (compatible = nordic,nrf-acl):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-acl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_acl_4001e000_PATH "/soc/acl@4001e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_acl_4001e000_FULL_NAME "acl@4001e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_acl_4001e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_acl_4001e000_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_acl_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_acl_4001e000_ORD 70
#define DT_N_S_soc_S_acl_4001e000_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_acl_4001e000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_acl_4001e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_acl_4001e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_acl DT_N_S_soc_S_acl_4001e000
#define DT_N_NODELABEL_acl         DT_N_S_soc_S_acl_4001e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_acl_4001e000_REG_NUM 1
#define DT_N_S_soc_S_acl_4001e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_REG_IDX_0_VAL_ADDRESS 1073864704 /* 0x4001e000 */
#define DT_N_S_soc_S_acl_4001e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_acl_4001e000_RANGES_NUM 0
#define DT_N_S_soc_S_acl_4001e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_acl_4001e000_IRQ_NUM 0
#define DT_N_S_soc_S_acl_4001e000_COMPAT_MATCHES_nordic_nrf_acl 1
#define DT_N_S_soc_S_acl_4001e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_acl_4001e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_COMPAT_MODEL_IDX_0 "nrf-acl"
#define DT_N_S_soc_S_acl_4001e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_acl_4001e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_acl_4001e000_P_reg {1073864704 /* 0x4001e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_0 1073864704
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_acl_4001e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_status "okay"
#define DT_N_S_soc_S_acl_4001e000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_acl_4001e000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_acl_4001e000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_acl_4001e000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_acl_4001e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_acl_4001e000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_acl_4001e000, status, 0)
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_acl_4001e000, status, 0)
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_acl_4001e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_acl_4001e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_status_LEN 1
#define DT_N_S_soc_S_acl_4001e000_P_status_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_compatible {"nordic,nrf-acl"}
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0 "nordic,nrf-acl"
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-acl
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_acl
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_ACL
#define DT_N_S_soc_S_acl_4001e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_acl_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_4001e000_P_compatible_LEN 1
#define DT_N_S_soc_S_acl_4001e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_wakeup_source 0
#define DT_N_S_soc_S_acl_4001e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_acl_4001e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_acl_4001e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@40007000
 *
 * Node identifier: DT_N_S_soc_S_adc_40007000
 *
 * Binding (compatible = nordic,nrf-saadc):
 *   $ZEPHYR_BASE/dts/bindings/adc/nordic,nrf-saadc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40007000_PATH "/soc/adc@40007000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40007000_FULL_NAME "adc@40007000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40007000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40007000_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40007000_ORD 71
#define DT_N_S_soc_S_adc_40007000_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40007000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40007000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40007000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_saadc DT_N_S_soc_S_adc_40007000
#define DT_N_NODELABEL_adc           DT_N_S_soc_S_adc_40007000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40007000_REG_NUM 1
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_VAL_ADDRESS 1073770496 /* 0x40007000 */
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_adc_40007000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40007000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40007000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_irq 7
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_MATCHES_nordic_nrf_saadc 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_adc_40007000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_MODEL_IDX_0 "nrf-saadc"
#define DT_N_S_soc_S_adc_40007000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40007000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40007000_P_reg {1073770496 /* 0x40007000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_0 1073770496
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts {7 /* 0x7 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_0 7
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_status "okay"
#define DT_N_S_soc_S_adc_40007000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_40007000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_40007000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_40007000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_40007000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007000, status, 0)
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007000, status, 0)
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_status_LEN 1
#define DT_N_S_soc_S_adc_40007000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_compatible {"nordic,nrf-saadc"}
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0 "nordic,nrf-saadc"
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-saadc
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_saadc
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SAADC
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007000, compatible, 0)
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40007000, compatible, 0)
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40007000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40007000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40007000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_40007000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ccm@4000f000
 *
 * Node identifier: DT_N_S_soc_S_ccm_4000f000
 *
 * Binding (compatible = nordic,nrf-ccm):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-ccm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ccm_4000f000_PATH "/soc/ccm@4000f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ccm_4000f000_FULL_NAME "ccm@4000f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ccm_4000f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ccm_4000f000_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ccm_4000f000_ORD 72
#define DT_N_S_soc_S_ccm_4000f000_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ccm_4000f000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ccm_4000f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ccm_4000f000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ccm DT_N_S_soc_S_ccm_4000f000
#define DT_N_NODELABEL_ccm         DT_N_S_soc_S_ccm_4000f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ccm_4000f000_REG_NUM 1
#define DT_N_S_soc_S_ccm_4000f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_REG_IDX_0_VAL_ADDRESS 1073803264 /* 0x4000f000 */
#define DT_N_S_soc_S_ccm_4000f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ccm_4000f000_RANGES_NUM 0
#define DT_N_S_soc_S_ccm_4000f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ccm_4000f000_IRQ_NUM 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ccm_4000f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_MATCHES_nordic_nrf_ccm 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_COMPAT_MODEL_IDX_0 "nrf-ccm"
#define DT_N_S_soc_S_ccm_4000f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ccm_4000f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ccm_4000f000_P_reg {1073803264 /* 0x4000f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_0 1073803264
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ccm_4000f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts {15 /* 0xf */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_length_field_length_8_bits 1
#define DT_N_S_soc_S_ccm_4000f000_P_length_field_length_8_bits_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_headermask_supported 0
#define DT_N_S_soc_S_ccm_4000f000_P_headermask_supported_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_status "okay"
#define DT_N_S_soc_S_ccm_4000f000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ccm_4000f000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ccm_4000f000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ccm_4000f000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ccm_4000f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ccm_4000f000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_4000f000, status, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_4000f000, status, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_4000f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_4000f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_status_LEN 1
#define DT_N_S_soc_S_ccm_4000f000_P_status_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_compatible {"nordic,nrf-ccm"}
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0 "nordic,nrf-ccm"
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ccm
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ccm
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_CCM
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_4000f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_LEN 1
#define DT_N_S_soc_S_ccm_4000f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_wakeup_source 0
#define DT_N_S_soc_S_ccm_4000f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ccm_4000f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ccm_4000f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/clock@40000000
 *
 * Node identifier: DT_N_S_soc_S_clock_40000000
 *
 * Binding (compatible = nordic,nrf-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/nordic,nrf-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_clock_40000000_PATH "/soc/clock@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_clock_40000000_FULL_NAME "clock@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_clock_40000000_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_40000000_ORD 73
#define DT_N_S_soc_S_clock_40000000_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_40000000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_40000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_40000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_clock DT_N_S_soc_S_clock_40000000
#define DT_N_NODELABEL_clock         DT_N_S_soc_S_clock_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_clock_40000000_REG_NUM 1
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_clock_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_clock_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_clock_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_MATCHES_nordic_nrf_clock 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_clock_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_MODEL_IDX_0 "nrf-clock"
#define DT_N_S_soc_S_clock_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_clock_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_clock_40000000_P_reg {1073741824 /* 0x40000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts {0 /* 0x0 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_status "okay"
#define DT_N_S_soc_S_clock_40000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_clock_40000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_clock_40000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_40000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_clock_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_40000000, status, 0)
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_40000000, status, 0)
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_status_LEN 1
#define DT_N_S_soc_S_clock_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_compatible {"nordic,nrf-clock"}
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0 "nordic,nrf-clock"
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-clock
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_clock
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_CLOCK
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_40000000, compatible, 0)
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_40000000, compatible, 0)
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_clock_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_clock_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/comparator@40013000
 *
 * Node identifier: DT_N_S_soc_S_comparator_40013000
 *
 * Binding (compatible = nordic,nrf-comp):
 *   $ZEPHYR_BASE/dts/bindings/adc/nordic,nrf-comp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_comparator_40013000_PATH "/soc/comparator@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_comparator_40013000_FULL_NAME "comparator@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_comparator_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_comparator_40013000_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_comparator_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_comparator_40013000_ORD 74
#define DT_N_S_soc_S_comparator_40013000_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_comparator_40013000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_comparator_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_comparator_40013000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_comp DT_N_S_soc_S_comparator_40013000
#define DT_N_NODELABEL_comp         DT_N_S_soc_S_comparator_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_comparator_40013000_REG_NUM 1
#define DT_N_S_soc_S_comparator_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_comparator_40013000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_comparator_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_comparator_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_comparator_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_comparator_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_MATCHES_nordic_nrf_comp 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_comparator_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_COMPAT_MODEL_IDX_0 "nrf-comp"
#define DT_N_S_soc_S_comparator_40013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_comparator_40013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_comparator_40013000_P_reg {1073819648 /* 0x40013000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_comparator_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts {19 /* 0x13 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_status "disabled"
#define DT_N_S_soc_S_comparator_40013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_comparator_40013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_comparator_40013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_comparator_40013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_comparator_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_comparator_40013000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_comparator_40013000, status, 0)
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_comparator_40013000, status, 0)
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_comparator_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_comparator_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_status_LEN 1
#define DT_N_S_soc_S_comparator_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_compatible {"nordic,nrf-comp"}
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0 "nordic,nrf-comp"
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-comp
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_comp
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_COMP
#define DT_N_S_soc_S_comparator_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_comparator_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_comparator_40013000_P_compatible_LEN 1
#define DT_N_S_soc_S_comparator_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_comparator_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_comparator_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_comparator_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ecb@4000e000
 *
 * Node identifier: DT_N_S_soc_S_ecb_4000e000
 *
 * Binding (compatible = nordic,nrf-ecb):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-ecb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ecb_4000e000_PATH "/soc/ecb@4000e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ecb_4000e000_FULL_NAME "ecb@4000e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ecb_4000e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ecb_4000e000_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ecb_4000e000_ORD 75
#define DT_N_S_soc_S_ecb_4000e000_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ecb_4000e000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ecb_4000e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ecb_4000e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ecb DT_N_S_soc_S_ecb_4000e000
#define DT_N_NODELABEL_ecb         DT_N_S_soc_S_ecb_4000e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ecb_4000e000_REG_NUM 1
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_VAL_ADDRESS 1073799168 /* 0x4000e000 */
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ecb_4000e000_RANGES_NUM 0
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ecb_4000e000_IRQ_NUM 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_MATCHES_nordic_nrf_ecb 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_MODEL_IDX_0 "nrf-ecb"
#define DT_N_S_soc_S_ecb_4000e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ecb_4000e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ecb_4000e000_P_reg {1073799168 /* 0x4000e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_0 1073799168
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts {14 /* 0xe */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_status "okay"
#define DT_N_S_soc_S_ecb_4000e000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ecb_4000e000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ecb_4000e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4000e000, status, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ecb_4000e000, status, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ecb_4000e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_status_LEN 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible {"nordic,nrf-ecb"}
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0 "nordic,nrf-ecb"
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ecb
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ecb
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_ECB
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_LEN 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_wakeup_source 0
#define DT_N_S_soc_S_ecb_4000e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ecb_4000e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40014000
 *
 * Node identifier: DT_N_S_soc_S_egu_40014000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40014000_PATH "/soc/egu@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40014000_FULL_NAME "egu@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40014000_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40014000_ORD 76
#define DT_N_S_soc_S_egu_40014000_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40014000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40014000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40014000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_egu DT_N_S_soc_S_egu_40014000
#define DT_N_INST_0_nordic_nrf_swi DT_N_S_soc_S_egu_40014000
#define DT_N_NODELABEL_egu0        DT_N_S_soc_S_egu_40014000
#define DT_N_NODELABEL_swi0        DT_N_S_soc_S_egu_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40014000_REG_NUM 1
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40014000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40014000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40014000_P_reg {1073823744 /* 0x40014000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts {20 /* 0x14 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_status "okay"
#define DT_N_S_soc_S_egu_40014000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40014000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40014000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40014000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40014000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40014000, status, 0)
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40014000, status, 0)
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40014000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1)
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40014000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1)
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40014000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40014000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40014000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40014000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40014000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40015000
 *
 * Node identifier: DT_N_S_soc_S_egu_40015000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40015000_PATH "/soc/egu@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40015000_FULL_NAME "egu@40015000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40015000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40015000_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40015000_ORD 77
#define DT_N_S_soc_S_egu_40015000_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40015000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40015000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40015000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_egu DT_N_S_soc_S_egu_40015000
#define DT_N_INST_1_nordic_nrf_swi DT_N_S_soc_S_egu_40015000
#define DT_N_NODELABEL_egu1        DT_N_S_soc_S_egu_40015000
#define DT_N_NODELABEL_swi1        DT_N_S_soc_S_egu_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40015000_REG_NUM 1
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40015000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40015000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40015000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40015000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40015000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40015000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40015000_P_reg {1073827840 /* 0x40015000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts {21 /* 0x15 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_status "okay"
#define DT_N_S_soc_S_egu_40015000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40015000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40015000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40015000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40015000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40015000, status, 0)
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40015000, status, 0)
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40015000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40015000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1)
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40015000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1)
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40015000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40015000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40015000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40015000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40015000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40016000
 *
 * Node identifier: DT_N_S_soc_S_egu_40016000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40016000_PATH "/soc/egu@40016000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40016000_FULL_NAME "egu@40016000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40016000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40016000_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40016000_ORD 78
#define DT_N_S_soc_S_egu_40016000_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40016000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40016000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40016000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_egu DT_N_S_soc_S_egu_40016000
#define DT_N_INST_2_nordic_nrf_swi DT_N_S_soc_S_egu_40016000
#define DT_N_NODELABEL_egu2        DT_N_S_soc_S_egu_40016000
#define DT_N_NODELABEL_swi2        DT_N_S_soc_S_egu_40016000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40016000_REG_NUM 1
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_VAL_ADDRESS 1073831936 /* 0x40016000 */
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40016000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40016000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40016000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40016000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40016000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40016000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40016000_P_reg {1073831936 /* 0x40016000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_0 1073831936
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts {22 /* 0x16 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_status "okay"
#define DT_N_S_soc_S_egu_40016000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40016000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40016000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40016000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40016000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40016000, status, 0)
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40016000, status, 0)
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40016000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40016000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1)
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40016000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1)
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40016000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40016000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40016000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40016000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40016000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40016000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40017000
 *
 * Node identifier: DT_N_S_soc_S_egu_40017000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40017000_PATH "/soc/egu@40017000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40017000_FULL_NAME "egu@40017000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40017000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40017000_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40017000_ORD 79
#define DT_N_S_soc_S_egu_40017000_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40017000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40017000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40017000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_egu DT_N_S_soc_S_egu_40017000
#define DT_N_INST_3_nordic_nrf_swi DT_N_S_soc_S_egu_40017000
#define DT_N_NODELABEL_egu3        DT_N_S_soc_S_egu_40017000
#define DT_N_NODELABEL_swi3        DT_N_S_soc_S_egu_40017000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40017000_REG_NUM 1
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_VAL_ADDRESS 1073836032 /* 0x40017000 */
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40017000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40017000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40017000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_irq 23
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40017000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40017000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40017000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40017000_P_reg {1073836032 /* 0x40017000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_0 1073836032
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts {23 /* 0x17 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_0 23
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_status "okay"
#define DT_N_S_soc_S_egu_40017000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40017000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40017000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40017000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40017000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40017000, status, 0)
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40017000, status, 0)
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40017000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40017000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40017000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40017000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1)
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40017000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1)
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40017000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40017000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40017000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40017000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40017000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40017000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40018000
 *
 * Node identifier: DT_N_S_soc_S_egu_40018000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40018000_PATH "/soc/egu@40018000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40018000_FULL_NAME "egu@40018000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40018000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40018000_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40018000_ORD 80
#define DT_N_S_soc_S_egu_40018000_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40018000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40018000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40018000_EXISTS 1
#define DT_N_INST_4_nordic_nrf_egu DT_N_S_soc_S_egu_40018000
#define DT_N_INST_4_nordic_nrf_swi DT_N_S_soc_S_egu_40018000
#define DT_N_NODELABEL_egu4        DT_N_S_soc_S_egu_40018000
#define DT_N_NODELABEL_swi4        DT_N_S_soc_S_egu_40018000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40018000_REG_NUM 1
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_VAL_ADDRESS 1073840128 /* 0x40018000 */
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40018000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40018000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40018000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40018000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40018000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40018000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40018000_P_reg {1073840128 /* 0x40018000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_0 1073840128
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts {24 /* 0x18 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_status "okay"
#define DT_N_S_soc_S_egu_40018000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40018000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40018000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40018000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40018000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40018000, status, 0)
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40018000, status, 0)
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40018000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40018000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1)
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40018000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1)
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40018000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40018000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40018000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40018000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40018000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40018000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@40019000
 *
 * Node identifier: DT_N_S_soc_S_egu_40019000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40019000_PATH "/soc/egu@40019000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40019000_FULL_NAME "egu@40019000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40019000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_40019000_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40019000_ORD 81
#define DT_N_S_soc_S_egu_40019000_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40019000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40019000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40019000_EXISTS 1
#define DT_N_INST_5_nordic_nrf_egu DT_N_S_soc_S_egu_40019000
#define DT_N_INST_5_nordic_nrf_swi DT_N_S_soc_S_egu_40019000
#define DT_N_NODELABEL_egu5        DT_N_S_soc_S_egu_40019000
#define DT_N_NODELABEL_swi5        DT_N_S_soc_S_egu_40019000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40019000_REG_NUM 1
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_VAL_ADDRESS 1073844224 /* 0x40019000 */
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40019000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40019000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40019000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_40019000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_MODEL_IDX_1 "nrf-swi"
#define DT_N_S_soc_S_egu_40019000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40019000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40019000_P_reg {1073844224 /* 0x40019000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_0 1073844224
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts {25 /* 0x19 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_status "okay"
#define DT_N_S_soc_S_egu_40019000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_40019000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40019000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40019000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_40019000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40019000, status, 0)
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40019000, status, 0)
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_status_LEN 1
#define DT_N_S_soc_S_egu_40019000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_compatible {"nordic,nrf-egu", "nordic,nrf-swi"}
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1 "nordic,nrf-swi"
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40019000, compatible, 0) \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1)
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_40019000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1)
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40019000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_40019000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_egu_40019000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_compatible_LEN 2
#define DT_N_S_soc_S_egu_40019000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40019000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_40019000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ficr@10000000
 *
 * Node identifier: DT_N_S_soc_S_ficr_10000000
 *
 * Binding (compatible = nordic,nrf-ficr):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-ficr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ficr_10000000_PATH "/soc/ficr@10000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ficr_10000000_FULL_NAME "ficr@10000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ficr_10000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ficr_10000000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ficr_10000000_ORD 82
#define DT_N_S_soc_S_ficr_10000000_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ficr_10000000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ficr_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ficr_10000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ficr DT_N_S_soc_S_ficr_10000000
#define DT_N_NODELABEL_ficr         DT_N_S_soc_S_ficr_10000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ficr_10000000_REG_NUM 1
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ficr_10000000_RANGES_NUM 0
#define DT_N_S_soc_S_ficr_10000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ficr_10000000_IRQ_NUM 0
#define DT_N_S_soc_S_ficr_10000000_COMPAT_MATCHES_nordic_nrf_ficr 1
#define DT_N_S_soc_S_ficr_10000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ficr_10000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_COMPAT_MODEL_IDX_0 "nrf-ficr"
#define DT_N_S_soc_S_ficr_10000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ficr_10000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ficr_10000000_P_reg {268435456 /* 0x10000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_0 268435456
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_status "okay"
#define DT_N_S_soc_S_ficr_10000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ficr_10000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ficr_10000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_10000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ficr_10000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_10000000, status, 0)
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ficr_10000000, status, 0)
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ficr_10000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_status_LEN 1
#define DT_N_S_soc_S_ficr_10000000_P_status_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible {"nordic,nrf-ficr"}
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0 "nordic,nrf-ficr"
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ficr
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ficr
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_FICR
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_LEN 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_wakeup_source 0
#define DT_N_S_soc_S_ficr_10000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ficr_10000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpiote@40006000
 *
 * Node identifier: DT_N_S_soc_S_gpiote_40006000
 *
 * Binding (compatible = nordic,nrf-gpiote):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpiote.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpiote_40006000_PATH "/soc/gpiote@40006000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpiote_40006000_FULL_NAME "gpiote@40006000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpiote_40006000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpiote_40006000_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpiote_40006000_ORD 83
#define DT_N_S_soc_S_gpiote_40006000_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpiote_40006000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpiote_40006000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpiote_40006000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpiote DT_N_S_soc_S_gpiote_40006000
#define DT_N_NODELABEL_gpiote         DT_N_S_soc_S_gpiote_40006000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpiote_40006000_REG_NUM 1
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_VAL_ADDRESS 1073766400 /* 0x40006000 */
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_gpiote_40006000_RANGES_NUM 0
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpiote_40006000_IRQ_NUM 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_MATCHES_nordic_nrf_gpiote 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_MODEL_IDX_0 "nrf-gpiote"
#define DT_N_S_soc_S_gpiote_40006000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpiote_40006000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpiote_40006000_P_reg {1073766400 /* 0x40006000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_0 1073766400
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts {6 /* 0x6 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_status "okay"
#define DT_N_S_soc_S_gpiote_40006000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_40006000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpiote_40006000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_40006000, status, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpiote_40006000, status, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpiote_40006000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_status_LEN 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible {"nordic,nrf-gpiote"}
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0 "nordic,nrf-gpiote"
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpiote
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpiote
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIOTE
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_wakeup_source 0
#define DT_N_S_soc_S_gpiote_40006000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpiote_40006000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40004000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40004000
 *
 * Binding (compatible = nordic,nrf-twim):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nordic,nrf-twim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40004000_PATH "/soc/i2c@40004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40004000_FULL_NAME "i2c@40004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40004000_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40004000_ORD 84
#define DT_N_S_soc_S_i2c_40004000_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40004000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40004000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_twim DT_N_S_soc_S_i2c_40004000
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40004000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_ADDRESS 1073758208 /* 0x40004000 */
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40004000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40004000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MATCHES_nordic_nrf_twim 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MODEL_IDX_0 "nrf-twim"
#define DT_N_S_soc_S_i2c_40004000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_concat_buf_size 16
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_concat_buf_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_flash_buf_max_size 16
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_flash_buf_max_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg {1073758208 /* 0x40004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0 1073758208
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts {4 /* 0x4 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40004000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40004000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, status, 0)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, status, 0)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible {"nordic,nrf-twim"}
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0 "nordic,nrf-twim"
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-twim
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_twim
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TWIM
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40025000
 *
 * Node identifier: DT_N_S_soc_S_i2s_40025000
 *
 * Binding (compatible = nordic,nrf-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/nordic,nrf-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40025000_PATH "/soc/i2s@40025000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40025000_FULL_NAME "i2s@40025000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40025000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40025000_CHILD_IDX 46

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40025000_ORD 85
#define DT_N_S_soc_S_i2s_40025000_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40025000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40025000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40025000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_i2s DT_N_S_soc_S_i2s_40025000
#define DT_N_NODELABEL_i2s0        DT_N_S_soc_S_i2s_40025000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40025000_REG_NUM 1
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_VAL_ADDRESS 1073893376 /* 0x40025000 */
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2s_40025000_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40025000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40025000_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_MATCHES_nordic_nrf_i2s 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_i2s_40025000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_MODEL_IDX_0 "nrf-i2s"
#define DT_N_S_soc_S_i2s_40025000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40025000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40025000_P_reg {1073893376 /* 0x40025000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_0 1073893376
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts {37 /* 0x25 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source "PCLK32M_HFXO"
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_STRING_UNQUOTED PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_STRING_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_STRING_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_IDX_0 "PCLK32M_HFXO"
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_VAL_PCLK32M_HFXO_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_LEN 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_status "disabled"
#define DT_N_S_soc_S_i2s_40025000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_40025000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40025000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40025000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_40025000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, status, 0)
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40025000, status, 0)
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40025000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_status_LEN 1
#define DT_N_S_soc_S_i2s_40025000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible {"nordic,nrf-i2s"}
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0 "nordic,nrf-i2s"
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-i2s
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_i2s
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_I2S
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40025000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_40025000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20000000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 86
#define DT_N_S_soc_S_memory_20000000_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/mwu@40020000
 *
 * Node identifier: DT_N_S_soc_S_mwu_40020000
 *
 * Binding (compatible = nordic,nrf-mwu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-mwu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mwu_40020000_PATH "/soc/mwu@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mwu_40020000_FULL_NAME "mwu@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mwu_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mwu_40020000_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mwu_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mwu_40020000_ORD 87
#define DT_N_S_soc_S_mwu_40020000_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mwu_40020000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mwu_40020000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mwu_40020000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_mwu DT_N_S_soc_S_mwu_40020000
#define DT_N_NODELABEL_mwu         DT_N_S_soc_S_mwu_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mwu_40020000_REG_NUM 1
#define DT_N_S_soc_S_mwu_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_mwu_40020000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mwu_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_mwu_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mwu_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_mwu_40020000_COMPAT_MATCHES_nordic_nrf_mwu 1
#define DT_N_S_soc_S_mwu_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_mwu_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_COMPAT_MODEL_IDX_0 "nrf-mwu"
#define DT_N_S_soc_S_mwu_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mwu_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mwu_40020000_P_reg {1073872896 /* 0x40020000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mwu_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_status "okay"
#define DT_N_S_soc_S_mwu_40020000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_mwu_40020000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_mwu_40020000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mwu_40020000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_mwu_40020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_mwu_40020000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mwu_40020000, status, 0)
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mwu_40020000, status, 0)
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mwu_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mwu_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_status_LEN 1
#define DT_N_S_soc_S_mwu_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_compatible {"nordic,nrf-mwu"}
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0 "nordic,nrf-mwu"
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-mwu
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_mwu
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_MWU
#define DT_N_S_soc_S_mwu_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mwu_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mwu_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_mwu_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_mwu_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mwu_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mwu_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/nfct@40005000
 *
 * Node identifier: DT_N_S_soc_S_nfct_40005000
 *
 * Binding (compatible = nordic,nrf-nfct):
 *   $ZEPHYR_BASE/dts/bindings/net/wireless/nordic,nrf-nfct.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_nfct_40005000_PATH "/soc/nfct@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_nfct_40005000_FULL_NAME "nfct@40005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_nfct_40005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_nfct_40005000_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_nfct_40005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_nfct_40005000_ORD 88
#define DT_N_S_soc_S_nfct_40005000_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_nfct_40005000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_nfct_40005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_nfct_40005000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_nfct DT_N_S_soc_S_nfct_40005000
#define DT_N_NODELABEL_nfct         DT_N_S_soc_S_nfct_40005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_nfct_40005000_REG_NUM 1
#define DT_N_S_soc_S_nfct_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_nfct_40005000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_nfct_40005000_RANGES_NUM 0
#define DT_N_S_soc_S_nfct_40005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_nfct_40005000_IRQ_NUM 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_nfct_40005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_MATCHES_nordic_nrf_nfct 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_nfct_40005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_COMPAT_MODEL_IDX_0 "nrf-nfct"
#define DT_N_S_soc_S_nfct_40005000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_nfct_40005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_nfct_40005000_P_reg {1073762304 /* 0x40005000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_nfct_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts {5 /* 0x5 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_status "disabled"
#define DT_N_S_soc_S_nfct_40005000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_nfct_40005000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_nfct_40005000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_nfct_40005000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_nfct_40005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_nfct_40005000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nfct_40005000, status, 0)
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nfct_40005000, status, 0)
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nfct_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nfct_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_status_LEN 1
#define DT_N_S_soc_S_nfct_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_compatible {"nordic,nrf-nfct"}
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0 "nordic,nrf-nfct"
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-nfct
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_nfct
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_NFCT
#define DT_N_S_soc_S_nfct_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_nfct_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_nfct_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_nfct_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_wakeup_source 0
#define DT_N_S_soc_S_nfct_40005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_nfct_40005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_nfct_40005000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pdm@4001d000
 *
 * Node identifier: DT_N_S_soc_S_pdm_4001d000
 *
 * Binding (compatible = nordic,nrf-pdm):
 *   $ZEPHYR_BASE/dts/bindings/audio/nordic,nrf-pdm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pdm_4001d000_PATH "/soc/pdm@4001d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pdm_4001d000_FULL_NAME "pdm@4001d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pdm_4001d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pdm_4001d000_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pdm_4001d000_ORD 89
#define DT_N_S_soc_S_pdm_4001d000_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pdm_4001d000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pdm_4001d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pdm_4001d000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pdm DT_N_S_soc_S_pdm_4001d000
#define DT_N_NODELABEL_pdm0        DT_N_S_soc_S_pdm_4001d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pdm_4001d000_REG_NUM 1
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_VAL_ADDRESS 1073860608 /* 0x4001d000 */
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pdm_4001d000_RANGES_NUM 0
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pdm_4001d000_IRQ_NUM 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_MATCHES_nordic_nrf_pdm 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_MODEL_IDX_0 "nrf-pdm"
#define DT_N_S_soc_S_pdm_4001d000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pdm_4001d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pdm_4001d000_P_reg {1073860608 /* 0x4001d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_0 1073860608
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts {29 /* 0x1d */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source "PCLK32M_HFXO"
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_STRING_UNQUOTED PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_STRING_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_STRING_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_IDX_0 "PCLK32M_HFXO"
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_VAL_PCLK32M_HFXO_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_LEN 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_queue_size 4
#define DT_N_S_soc_S_pdm_4001d000_P_queue_size_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_status "disabled"
#define DT_N_S_soc_S_pdm_4001d000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pdm_4001d000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pdm_4001d000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pdm_4001d000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pdm_4001d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, status, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pdm_4001d000, status, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pdm_4001d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_status_LEN 1
#define DT_N_S_soc_S_pdm_4001d000_P_status_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible {"nordic,nrf-pdm"}
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0 "nordic,nrf-pdm"
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pdm
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pdm
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PDM
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_LEN 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_wakeup_source 0
#define DT_N_S_soc_S_pdm_4001d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pdm_4001d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ppi@4001f000
 *
 * Node identifier: DT_N_S_soc_S_ppi_4001f000
 *
 * Binding (compatible = nordic,nrf-ppi):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-ppi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ppi_4001f000_PATH "/soc/ppi@4001f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ppi_4001f000_FULL_NAME "ppi@4001f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ppi_4001f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ppi_4001f000_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ppi_4001f000_ORD 90
#define DT_N_S_soc_S_ppi_4001f000_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ppi_4001f000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ppi_4001f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ppi_4001f000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ppi DT_N_S_soc_S_ppi_4001f000
#define DT_N_NODELABEL_ppi         DT_N_S_soc_S_ppi_4001f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ppi_4001f000_REG_NUM 1
#define DT_N_S_soc_S_ppi_4001f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_REG_IDX_0_VAL_ADDRESS 1073868800 /* 0x4001f000 */
#define DT_N_S_soc_S_ppi_4001f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ppi_4001f000_RANGES_NUM 0
#define DT_N_S_soc_S_ppi_4001f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ppi_4001f000_IRQ_NUM 0
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_MATCHES_nordic_nrf_ppi 1
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_COMPAT_MODEL_IDX_0 "nrf-ppi"
#define DT_N_S_soc_S_ppi_4001f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ppi_4001f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ppi_4001f000_P_reg {1073868800 /* 0x4001f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_0 1073868800
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ppi_4001f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_status "okay"
#define DT_N_S_soc_S_ppi_4001f000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ppi_4001f000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ppi_4001f000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ppi_4001f000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ppi_4001f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ppi_4001f000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ppi_4001f000, status, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ppi_4001f000, status, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ppi_4001f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ppi_4001f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_status_LEN 1
#define DT_N_S_soc_S_ppi_4001f000_P_status_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_compatible {"nordic,nrf-ppi"}
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0 "nordic,nrf-ppi"
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ppi
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ppi
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PPI
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ppi_4001f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_LEN 1
#define DT_N_S_soc_S_ppi_4001f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_wakeup_source 0
#define DT_N_S_soc_S_ppi_4001f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ppi_4001f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ppi_4001f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40021000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40021000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40021000_PATH "/soc/pwm@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40021000_FULL_NAME "pwm@40021000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40021000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40021000_CHILD_IDX 42

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40021000_ORD 91
#define DT_N_S_soc_S_pwm_40021000_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40021000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40021000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40021000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_pwm DT_N_S_soc_S_pwm_40021000
#define DT_N_NODELABEL_pwm1        DT_N_S_soc_S_pwm_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40021000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_40021000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40021000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_40021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_40021000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40021000_P_reg {1073876992 /* 0x40021000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_40021000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40021000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40021000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40021000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40021000, status, 0)
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40021000, status, 0)
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40021000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts {33 /* 0x21 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40021000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40022000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40022000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40022000_PATH "/soc/pwm@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40022000_FULL_NAME "pwm@40022000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40022000_CHILD_IDX 43

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40022000_ORD 92
#define DT_N_S_soc_S_pwm_40022000_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40022000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40022000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_pwm DT_N_S_soc_S_pwm_40022000
#define DT_N_NODELABEL_pwm2        DT_N_S_soc_S_pwm_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40022000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_40022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_40022000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40022000_P_reg {1073881088 /* 0x40022000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_40022000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40022000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40022000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40022000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40022000, status, 0)
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40022000, status, 0)
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40022000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40022000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40022000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts {34 /* 0x22 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40022000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pwm@4002d000
 *
 * Node identifier: DT_N_S_soc_S_pwm_4002d000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_4002d000_PATH "/soc/pwm@4002d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_4002d000_FULL_NAME "pwm@4002d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_4002d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_4002d000_CHILD_IDX 50

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_4002d000_ORD 93
#define DT_N_S_soc_S_pwm_4002d000_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_4002d000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_4002d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_4002d000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_pwm DT_N_S_soc_S_pwm_4002d000
#define DT_N_NODELABEL_pwm3        DT_N_S_soc_S_pwm_4002d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_4002d000_REG_NUM 1
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_VAL_ADDRESS 1073926144 /* 0x4002d000 */
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_4002d000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_4002d000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_MODEL_IDX_0 "nrf-pwm"
#define DT_N_S_soc_S_pwm_4002d000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_4002d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_4002d000_P_reg {1073926144 /* 0x4002d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_0 1073926144
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_4002d000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_status "disabled"
#define DT_N_S_soc_S_pwm_4002d000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4002d000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_4002d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4002d000, status, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4002d000, status, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4002d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4002d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_4002d000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pwm
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pwm
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PWM
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts {45 /* 0x2d */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_4002d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_4002d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/qdec@40012000
 *
 * Node identifier: DT_N_S_soc_S_qdec_40012000
 *
 * Binding (compatible = nordic,nrf-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nordic,nrf-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qdec_40012000_PATH "/soc/qdec@40012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qdec_40012000_FULL_NAME "qdec@40012000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qdec_40012000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qdec_40012000_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qdec_40012000_ORD 94
#define DT_N_S_soc_S_qdec_40012000_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qdec_40012000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qdec_40012000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qdec_40012000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_qdec DT_N_S_soc_S_qdec_40012000
#define DT_N_NODELABEL_qdec         DT_N_S_soc_S_qdec_40012000
#define DT_N_NODELABEL_qdec0        DT_N_S_soc_S_qdec_40012000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qdec_40012000_REG_NUM 1
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_VAL_ADDRESS 1073815552 /* 0x40012000 */
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_qdec_40012000_RANGES_NUM 0
#define DT_N_S_soc_S_qdec_40012000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qdec_40012000_IRQ_NUM 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_MATCHES_nordic_nrf_qdec 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_qdec_40012000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_MODEL_IDX_0 "nrf-qdec"
#define DT_N_S_soc_S_qdec_40012000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qdec_40012000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qdec_40012000_P_reg {1073815552 /* 0x40012000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_0 1073815552
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts {18 /* 0x12 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_status "disabled"
#define DT_N_S_soc_S_qdec_40012000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_40012000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_qdec_40012000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_40012000, status, 0)
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_40012000, status, 0)
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_status_LEN 1
#define DT_N_S_soc_S_qdec_40012000_P_status_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible {"nordic,nrf-qdec"}
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0 "nordic,nrf-qdec"
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-qdec
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_qdec
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_QDEC
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_LEN 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_wakeup_source 0
#define DT_N_S_soc_S_qdec_40012000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_qdec_40012000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/qspi@40029000
 *
 * Node identifier: DT_N_S_soc_S_qspi_40029000
 *
 * Binding (compatible = nordic,nrf-qspi):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/nordic,nrf-qspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qspi_40029000_PATH "/soc/qspi@40029000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qspi_40029000_FULL_NAME "qspi@40029000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qspi_40029000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_qspi_40029000_CHILD_IDX 49

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qspi_40029000_ORD 95
#define DT_N_S_soc_S_qspi_40029000_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qspi_40029000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qspi_40029000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qspi_40029000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_qspi DT_N_S_soc_S_qspi_40029000
#define DT_N_NODELABEL_qspi         DT_N_S_soc_S_qspi_40029000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qspi_40029000_REG_NUM 2
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_ADDRESS 1073909760 /* 0x40029000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_ADDRESS 301989888 /* 0x12000000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_SIZE 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_VAL_ADDRESS DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_VAL_SIZE DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_mm_VAL_ADDRESS DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_mm_VAL_SIZE DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_qspi_40029000_RANGES_NUM 0
#define DT_N_S_soc_S_qspi_40029000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qspi_40029000_IRQ_NUM 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_MATCHES_nordic_nrf_qspi 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_qspi_40029000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_MODEL_IDX_0 "nrf-qspi"
#define DT_N_S_soc_S_qspi_40029000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qspi_40029000_P_interrupts {41 /* 0x29 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg {1073909760 /* 0x40029000 */, 4096 /* 0x1000 */, 301989888 /* 0x12000000 */, 134217728 /* 0x8000000 */}
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_0 1073909760
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_2 301989888
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_3 134217728
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_status "disabled"
#define DT_N_S_soc_S_qspi_40029000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_qspi_40029000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qspi_40029000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qspi_40029000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_qspi_40029000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, status, 0)
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, status, 0)
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_status_LEN 1
#define DT_N_S_soc_S_qspi_40029000_P_status_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible {"nordic,nrf-qspi"}
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0 "nordic,nrf-qspi"
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-qspi
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_qspi
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_QSPI
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_LEN 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names {"qspi", "qspi_mm"}
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0 "qspi"
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_STRING_UNQUOTED qspi
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_STRING_TOKEN qspi
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_STRING_UPPER_TOKEN QSPI
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1 "qspi_mm"
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_STRING_UNQUOTED qspi_mm
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_STRING_TOKEN qspi_mm
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_STRING_UPPER_TOKEN QSPI_MM
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0) \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_LEN 2
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_wakeup_source 0
#define DT_N_S_soc_S_qspi_40029000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_qspi_40029000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/random@4000d000
 *
 * Node identifier: DT_N_S_soc_S_random_4000d000
 *
 * Binding (compatible = nordic,nrf-rng):
 *   $ZEPHYR_BASE/dts/bindings/rng/nordic,nrf-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_random_4000d000_PATH "/soc/random@4000d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_random_4000d000_FULL_NAME "random@4000d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_random_4000d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_random_4000d000_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_random_4000d000_ORD 96
#define DT_N_S_soc_S_random_4000d000_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_random_4000d000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_random_4000d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_random_4000d000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rng DT_N_S_soc_S_random_4000d000
#define DT_N_NODELABEL_rng         DT_N_S_soc_S_random_4000d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_random_4000d000_REG_NUM 1
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_VAL_ADDRESS 1073795072 /* 0x4000d000 */
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_random_4000d000_RANGES_NUM 0
#define DT_N_S_soc_S_random_4000d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_random_4000d000_IRQ_NUM 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_MATCHES_nordic_nrf_rng 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_random_4000d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_MODEL_IDX_0 "nrf-rng"
#define DT_N_S_soc_S_random_4000d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_random_4000d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_random_4000d000_P_reg {1073795072 /* 0x4000d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_0 1073795072
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts {13 /* 0xd */, 1 /* 0x1 */}
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_status "okay"
#define DT_N_S_soc_S_random_4000d000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_random_4000d000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_random_4000d000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_4000d000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_random_4000d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_4000d000, status, 0)
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_4000d000, status, 0)
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_4000d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_4000d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_status_LEN 1
#define DT_N_S_soc_S_random_4000d000_P_status_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_compatible {"nordic,nrf-rng"}
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0 "nordic,nrf-rng"
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rng
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rng
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RNG
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_4000d000, compatible, 0)
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_4000d000, compatible, 0)
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_4000d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_4000d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_compatible_LEN 1
#define DT_N_S_soc_S_random_4000d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_wakeup_source 0
#define DT_N_S_soc_S_random_4000d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_random_4000d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@4000b000
 *
 * Node identifier: DT_N_S_soc_S_rtc_4000b000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_4000b000_PATH "/soc/rtc@4000b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_4000b000_FULL_NAME "rtc@4000b000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_4000b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_4000b000_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_4000b000_ORD 97
#define DT_N_S_soc_S_rtc_4000b000_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_4000b000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_4000b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_4000b000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rtc DT_N_S_soc_S_rtc_4000b000
#define DT_N_NODELABEL_rtc0        DT_N_S_soc_S_rtc_4000b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_4000b000_REG_NUM 1
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_VAL_ADDRESS 1073786880 /* 0x4000b000 */
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_4000b000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_4000b000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_MODEL_IDX_0 "nrf-rtc"
#define DT_N_S_soc_S_rtc_4000b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_4000b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_4000b000_P_reg {1073786880 /* 0x4000b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_0 1073786880
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_cc_num 3
#define DT_N_S_soc_S_rtc_4000b000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_4000b000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_4000b000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_zli 0
#define DT_N_S_soc_S_rtc_4000b000_P_zli_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_4000b000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts {11 /* 0xb */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_prescaler 1
#define DT_N_S_soc_S_rtc_4000b000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_status "disabled"
#define DT_N_S_soc_S_rtc_4000b000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_4000b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_4000b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_4000b000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_4000b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4000b000, status, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_4000b000, status, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_4000b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_4000b000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rtc
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rtc
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RTC
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_4000b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_4000b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40011000
 *
 * Node identifier: DT_N_S_soc_S_rtc_40011000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40011000_PATH "/soc/rtc@40011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40011000_FULL_NAME "rtc@40011000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40011000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40011000_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40011000_ORD 98
#define DT_N_S_soc_S_rtc_40011000_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40011000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40011000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_rtc DT_N_S_soc_S_rtc_40011000
#define DT_N_NODELABEL_rtc1        DT_N_S_soc_S_rtc_40011000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40011000_REG_NUM 1
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_40011000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40011000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40011000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_rtc_40011000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_MODEL_IDX_0 "nrf-rtc"
#define DT_N_S_soc_S_rtc_40011000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40011000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40011000_P_reg {1073811456 /* 0x40011000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_cc_num 4
#define DT_N_S_soc_S_rtc_40011000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_40011000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_40011000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_zli 0
#define DT_N_S_soc_S_rtc_40011000_P_zli_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_40011000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts {17 /* 0x11 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_prescaler 1
#define DT_N_S_soc_S_rtc_40011000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_status "disabled"
#define DT_N_S_soc_S_rtc_40011000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_40011000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_40011000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40011000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_40011000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40011000, status, 0)
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40011000, status, 0)
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rtc
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rtc
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RTC
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40011000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40011000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40024000
 *
 * Node identifier: DT_N_S_soc_S_rtc_40024000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40024000_PATH "/soc/rtc@40024000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40024000_FULL_NAME "rtc@40024000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40024000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40024000_CHILD_IDX 45

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40024000_ORD 99
#define DT_N_S_soc_S_rtc_40024000_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40024000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40024000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40024000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_rtc DT_N_S_soc_S_rtc_40024000
#define DT_N_NODELABEL_rtc2        DT_N_S_soc_S_rtc_40024000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40024000_REG_NUM 1
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_VAL_ADDRESS 1073889280 /* 0x40024000 */
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_40024000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40024000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40024000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_rtc_40024000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_MODEL_IDX_0 "nrf-rtc"
#define DT_N_S_soc_S_rtc_40024000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40024000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40024000_P_reg {1073889280 /* 0x40024000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_0 1073889280
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_cc_num 4
#define DT_N_S_soc_S_rtc_40024000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_40024000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_40024000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_zli 0
#define DT_N_S_soc_S_rtc_40024000_P_zli_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_40024000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts {36 /* 0x24 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_prescaler 1
#define DT_N_S_soc_S_rtc_40024000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_status "disabled"
#define DT_N_S_soc_S_rtc_40024000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_40024000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_40024000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40024000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_40024000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40024000, status, 0)
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40024000, status, 0)
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40024000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40024000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_40024000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rtc
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rtc
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RTC
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40024000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_40024000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003000
 *
 * Node identifier: DT_N_S_soc_S_spi_40003000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003000_PATH "/soc/spi@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003000_FULL_NAME "spi@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003000_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003000_ORD 100
#define DT_N_S_soc_S_spi_40003000_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_spim DT_N_S_soc_S_spi_40003000
#define DT_N_NODELABEL_spi0         DT_N_S_soc_S_spi_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003000_REG_NUM 1
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_40003000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_rx_delay_supported 0
#define DT_N_S_soc_S_spi_40003000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg {1073754112 /* 0x40003000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts {3 /* 0x3 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_max_frequency 8000000
#define DT_N_S_soc_S_spi_40003000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_overrun_character 255
#define DT_N_S_soc_S_spi_40003000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_40003000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_status "disabled"
#define DT_N_S_soc_S_spi_40003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003000, status, 0)
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003000, status, 0)
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003000, compatible, 0)
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003000, compatible, 0)
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40023000
 *
 * Node identifier: DT_N_S_soc_S_spi_40023000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40023000_PATH "/soc/spi@40023000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40023000_FULL_NAME "spi@40023000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40023000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40023000_CHILD_IDX 44

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40023000_ORD 101
#define DT_N_S_soc_S_spi_40023000_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40023000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40023000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40023000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_spim DT_N_S_soc_S_spi_40023000
#define DT_N_NODELABEL_spi2         DT_N_S_soc_S_spi_40023000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40023000_REG_NUM 1
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_VAL_ADDRESS 1073885184 /* 0x40023000 */
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40023000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40023000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40023000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_40023000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_40023000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40023000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40023000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_40023000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_rx_delay_supported 0
#define DT_N_S_soc_S_spi_40023000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg {1073885184 /* 0x40023000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_0 1073885184
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts {35 /* 0x23 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_max_frequency 8000000
#define DT_N_S_soc_S_spi_40023000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_overrun_character 255
#define DT_N_S_soc_S_spi_40023000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_40023000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_status "disabled"
#define DT_N_S_soc_S_spi_40023000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40023000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40023000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40023000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40023000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, status, 0)
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40023000, status, 0)
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40023000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40023000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, compatible, 0)
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40023000, compatible, 0)
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40023000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40023000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40023000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40023000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@4002f000
 *
 * Node identifier: DT_N_S_soc_S_spi_4002f000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_4002f000_PATH "/soc/spi@4002f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_4002f000_FULL_NAME "spi@4002f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_4002f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_4002f000_CHILD_IDX 51

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_4002f000_ORD 102
#define DT_N_S_soc_S_spi_4002f000_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_4002f000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_4002f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_4002f000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_spim DT_N_S_soc_S_spi_4002f000
#define DT_N_NODELABEL_spi3         DT_N_S_soc_S_spi_4002f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_4002f000_REG_NUM 1
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_VAL_ADDRESS 1073934336 /* 0x4002f000 */
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_4002f000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_4002f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_4002f000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_irq 47
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_4002f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_4002f000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_4002f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_4002f000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_4002f000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_supported 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay 2
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_ENUM_IDX 2
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_rx_delay_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg {1073934336 /* 0x4002f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_0 1073934336
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts {47 /* 0x2f */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_0 47
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_max_frequency 32000000
#define DT_N_S_soc_S_spi_4002f000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_overrun_character 255
#define DT_N_S_soc_S_spi_4002f000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_4002f000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_status "disabled"
#define DT_N_S_soc_S_spi_4002f000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4002f000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_4002f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4002f000, status, 0)
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4002f000, status, 0)
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4002f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4002f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_status_LEN 1
#define DT_N_S_soc_S_spi_4002f000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_4002f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_4002f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/temp@4000c000
 *
 * Node identifier: DT_N_S_soc_S_temp_4000c000
 *
 * Binding (compatible = nordic,nrf-temp):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nordic,nrf-temp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_temp_4000c000_PATH "/soc/temp@4000c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_temp_4000c000_FULL_NAME "temp@4000c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_temp_4000c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_temp_4000c000_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_temp_4000c000_ORD 103
#define DT_N_S_soc_S_temp_4000c000_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_temp_4000c000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_temp_4000c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_temp_4000c000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_temp DT_N_S_soc_S_temp_4000c000
#define DT_N_NODELABEL_temp         DT_N_S_soc_S_temp_4000c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_temp_4000c000_REG_NUM 1
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_VAL_ADDRESS 1073790976 /* 0x4000c000 */
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_temp_4000c000_RANGES_NUM 0
#define DT_N_S_soc_S_temp_4000c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_temp_4000c000_IRQ_NUM 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_MATCHES_nordic_nrf_temp 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_temp_4000c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_MODEL_IDX_0 "nrf-temp"
#define DT_N_S_soc_S_temp_4000c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_temp_4000c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_temp_4000c000_P_reg {1073790976 /* 0x4000c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_0 1073790976
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts {12 /* 0xc */, 1 /* 0x1 */}
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_status "okay"
#define DT_N_S_soc_S_temp_4000c000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_temp_4000c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_temp_4000c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_temp_4000c000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_temp_4000c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_4000c000, status, 0)
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_temp_4000c000, status, 0)
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_temp_4000c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_status_LEN 1
#define DT_N_S_soc_S_temp_4000c000_P_status_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible {"nordic,nrf-temp"}
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0 "nordic,nrf-temp"
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-temp
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_temp
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TEMP
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_LEN 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_wakeup_source 0
#define DT_N_S_soc_S_temp_4000c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_temp_4000c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40008000
 *
 * Node identifier: DT_N_S_soc_S_timer_40008000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40008000_PATH "/soc/timer@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40008000_FULL_NAME "timer@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40008000_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40008000_ORD 104
#define DT_N_S_soc_S_timer_40008000_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40008000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40008000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_timer DT_N_S_soc_S_timer_40008000
#define DT_N_NODELABEL_timer0        DT_N_S_soc_S_timer_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40008000_REG_NUM 1
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_40008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_40008000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40008000_P_reg {1073774592 /* 0x40008000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_cc_num 4
#define DT_N_S_soc_S_timer_40008000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_40008000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts {8 /* 0x8 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_prescaler 0
#define DT_N_S_soc_S_timer_40008000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_zli 0
#define DT_N_S_soc_S_timer_40008000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_status "disabled"
#define DT_N_S_soc_S_timer_40008000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40008000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40008000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40008000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40008000, status, 0)
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40008000, status, 0)
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40008000, compatible, 0)
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40008000, compatible, 0)
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@4000a000
 *
 * Node identifier: DT_N_S_soc_S_timer_4000a000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4000a000_PATH "/soc/timer@4000a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4000a000_FULL_NAME "timer@4000a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4000a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_4000a000_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4000a000_ORD 105
#define DT_N_S_soc_S_timer_4000a000_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4000a000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4000a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4000a000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_timer DT_N_S_soc_S_timer_4000a000
#define DT_N_NODELABEL_timer2        DT_N_S_soc_S_timer_4000a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4000a000_REG_NUM 1
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_VAL_ADDRESS 1073782784 /* 0x4000a000 */
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4000a000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4000a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4000a000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_4000a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_4000a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4000a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4000a000_P_reg {1073782784 /* 0x4000a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_0 1073782784
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_cc_num 4
#define DT_N_S_soc_S_timer_4000a000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_4000a000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts {10 /* 0xa */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_prescaler 0
#define DT_N_S_soc_S_timer_4000a000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_zli 0
#define DT_N_S_soc_S_timer_4000a000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_status "disabled"
#define DT_N_S_soc_S_timer_4000a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_4000a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_4000a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4000a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_4000a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4000a000, status, 0)
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4000a000, status, 0)
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4000a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4000a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_status_LEN 1
#define DT_N_S_soc_S_timer_4000a000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4000a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_4000a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@4001a000
 *
 * Node identifier: DT_N_S_soc_S_timer_4001a000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4001a000_PATH "/soc/timer@4001a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4001a000_FULL_NAME "timer@4001a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4001a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_4001a000_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4001a000_ORD 106
#define DT_N_S_soc_S_timer_4001a000_ORD_STR_SORTABLE 00106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4001a000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4001a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4001a000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_timer DT_N_S_soc_S_timer_4001a000
#define DT_N_NODELABEL_timer3        DT_N_S_soc_S_timer_4001a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4001a000_REG_NUM 1
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_VAL_ADDRESS 1073848320 /* 0x4001a000 */
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4001a000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4001a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4001a000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_4001a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_4001a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4001a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4001a000_P_reg {1073848320 /* 0x4001a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_0 1073848320
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_cc_num 6
#define DT_N_S_soc_S_timer_4001a000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_4001a000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts {26 /* 0x1a */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_prescaler 0
#define DT_N_S_soc_S_timer_4001a000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_zli 0
#define DT_N_S_soc_S_timer_4001a000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_status "disabled"
#define DT_N_S_soc_S_timer_4001a000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_4001a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_4001a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001a000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_4001a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001a000, status, 0)
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001a000, status, 0)
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_status_LEN 1
#define DT_N_S_soc_S_timer_4001a000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4001a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_4001a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@4001b000
 *
 * Node identifier: DT_N_S_soc_S_timer_4001b000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4001b000_PATH "/soc/timer@4001b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4001b000_FULL_NAME "timer@4001b000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4001b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_4001b000_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4001b000_ORD 107
#define DT_N_S_soc_S_timer_4001b000_ORD_STR_SORTABLE 00107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4001b000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4001b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4001b000_EXISTS 1
#define DT_N_INST_4_nordic_nrf_timer DT_N_S_soc_S_timer_4001b000
#define DT_N_NODELABEL_timer4        DT_N_S_soc_S_timer_4001b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4001b000_REG_NUM 1
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_VAL_ADDRESS 1073852416 /* 0x4001b000 */
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4001b000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4001b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4001b000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_4001b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_4001b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4001b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4001b000_P_reg {1073852416 /* 0x4001b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_0 1073852416
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_cc_num 6
#define DT_N_S_soc_S_timer_4001b000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_4001b000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts {27 /* 0x1b */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_prescaler 0
#define DT_N_S_soc_S_timer_4001b000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_zli 0
#define DT_N_S_soc_S_timer_4001b000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_status "disabled"
#define DT_N_S_soc_S_timer_4001b000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_4001b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_4001b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001b000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_4001b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001b000, status, 0)
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001b000, status, 0)
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_status_LEN 1
#define DT_N_S_soc_S_timer_4001b000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4001b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_4001b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 108
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uicr@10001000
 *
 * Node identifier: DT_N_S_soc_S_uicr_10001000
 *
 * Binding (compatible = nordic,nrf-uicr):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-uicr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uicr_10001000_PATH "/soc/uicr@10001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uicr_10001000_FULL_NAME "uicr@10001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uicr_10001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uicr_10001000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uicr_10001000_ORD 109
#define DT_N_S_soc_S_uicr_10001000_ORD_STR_SORTABLE 00109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uicr_10001000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uicr_10001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uicr_10001000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uicr DT_N_S_soc_S_uicr_10001000
#define DT_N_NODELABEL_uicr         DT_N_S_soc_S_uicr_10001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uicr_10001000_REG_NUM 1
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_VAL_ADDRESS 268439552 /* 0x10001000 */
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uicr_10001000_RANGES_NUM 0
#define DT_N_S_soc_S_uicr_10001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uicr_10001000_IRQ_NUM 0
#define DT_N_S_soc_S_uicr_10001000_COMPAT_MATCHES_nordic_nrf_uicr 1
#define DT_N_S_soc_S_uicr_10001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_uicr_10001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_COMPAT_MODEL_IDX_0 "nrf-uicr"
#define DT_N_S_soc_S_uicr_10001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uicr_10001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uicr_10001000_P_reg {268439552 /* 0x10001000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_0 268439552
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_nfct_pins_as_gpios 0
#define DT_N_S_soc_S_uicr_10001000_P_nfct_pins_as_gpios_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_gpio_as_nreset 0
#define DT_N_S_soc_S_uicr_10001000_P_gpio_as_nreset_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_status "okay"
#define DT_N_S_soc_S_uicr_10001000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uicr_10001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uicr_10001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_10001000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uicr_10001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_10001000, status, 0)
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uicr_10001000, status, 0)
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uicr_10001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_status_LEN 1
#define DT_N_S_soc_S_uicr_10001000_P_status_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible {"nordic,nrf-uicr"}
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0 "nordic,nrf-uicr"
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-uicr
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_uicr
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_UICR
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_LEN 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_wakeup_source 0
#define DT_N_S_soc_S_uicr_10001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uicr_10001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/usbd@40027000
 *
 * Node identifier: DT_N_S_soc_S_usbd_40027000
 *
 * Binding (compatible = nordic,nrf-usbd):
 *   $ZEPHYR_BASE/dts/bindings/usb/nordic,nrf-usbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_40027000_PATH "/soc/usbd@40027000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_40027000_FULL_NAME "usbd@40027000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usbd_40027000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usbd_40027000_CHILD_IDX 47

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_40027000_ORD 110
#define DT_N_S_soc_S_usbd_40027000_ORD_STR_SORTABLE 00110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_40027000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_40027000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_40027000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_usbd DT_N_S_soc_S_usbd_40027000
#define DT_N_NODELABEL_usbd         DT_N_S_soc_S_usbd_40027000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_40027000_REG_NUM 1
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_VAL_ADDRESS 1073901568 /* 0x40027000 */
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_usbd_40027000_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_40027000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_40027000_IRQ_NUM 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_MATCHES_nordic_nrf_usbd 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_usbd_40027000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_MODEL_IDX_0 "nrf-usbd"
#define DT_N_S_soc_S_usbd_40027000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_40027000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_40027000_P_reg {1073901568 /* 0x40027000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_0 1073901568
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts {39 /* 0x27 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoin_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoin_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoout_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoout_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_bidir_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_in_endpoints 7
#define DT_N_S_soc_S_usbd_40027000_P_num_in_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_out_endpoints 7
#define DT_N_S_soc_S_usbd_40027000_P_num_out_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_status "disabled"
#define DT_N_S_soc_S_usbd_40027000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_usbd_40027000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_usbd_40027000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usbd_40027000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_usbd_40027000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000, status, 0)
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000, status, 0)
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_status_LEN 1
#define DT_N_S_soc_S_usbd_40027000_P_status_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible {"nordic,nrf-usbd"}
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0 "nordic,nrf-usbd"
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-usbd
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_usbd
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_USBD
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_40027000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usbd_40027000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40010000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40010000
 *
 * Binding (compatible = nordic,nrf-wdt):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/nordic,nrf-wdt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40010000_PATH "/soc/watchdog@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40010000_FULL_NAME "watchdog@40010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40010000_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40010000_ORD 111
#define DT_N_S_soc_S_watchdog_40010000_ORD_STR_SORTABLE 00111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40010000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40010000_EXISTS 1
#define DT_N_ALIAS_watchdog0       DT_N_S_soc_S_watchdog_40010000
#define DT_N_INST_0_nordic_nrf_wdt DT_N_S_soc_S_watchdog_40010000
#define DT_N_NODELABEL_wdt         DT_N_S_soc_S_watchdog_40010000
#define DT_N_NODELABEL_wdt0        DT_N_S_soc_S_watchdog_40010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40010000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_watchdog_40010000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40010000_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_MATCHES_nordic_nrf_wdt 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_MODEL_IDX_0 "nrf-wdt"
#define DT_N_S_soc_S_watchdog_40010000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40010000_P_reg {1073807360 /* 0x40010000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts {16 /* 0x10 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40010000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40010000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_40010000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40010000, status, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40010000, status, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible {"nordic,nrf-wdt"}
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0 "nordic,nrf-wdt"
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-wdt
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_wdt
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_WDT
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40010000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/crypto@5002a000
 *
 * Node identifier: DT_N_S_soc_S_crypto_5002a000
 *
 * Binding (compatible = nordic,nrf-cc310):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-cc310.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_crypto_5002a000_PATH "/soc/crypto@5002a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_crypto_5002a000_FULL_NAME "crypto@5002a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_crypto_5002a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_crypto_5002a000_CHILD_IDX 54

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000)
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000)
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000)
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000)
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_crypto_5002a000_ORD 112
#define DT_N_S_soc_S_crypto_5002a000_ORD_STR_SORTABLE 00112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_crypto_5002a000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_crypto_5002a000_SUPPORTS_ORDS \
	113, /* /soc/crypto@5002a000/crypto@5002b000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_crypto_5002a000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_cc310 DT_N_S_soc_S_crypto_5002a000
#define DT_N_NODELABEL_cryptocell    DT_N_S_soc_S_crypto_5002a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_crypto_5002a000_REG_NUM 1
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_ADDRESS 1342349312 /* 0x5002a000 */
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_5002a000_RANGES_NUM 0
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_crypto_5002a000_IRQ_NUM 0
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MATCHES_nordic_nrf_cc310 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MODEL_IDX_0 "nrf-cc310"
#define DT_N_S_soc_S_crypto_5002a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_crypto_5002a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_crypto_5002a000_P_reg {1342349312 /* 0x5002a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_0 1342349312
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_status "okay"
#define DT_N_S_soc_S_crypto_5002a000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_crypto_5002a000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_crypto_5002a000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_crypto_5002a000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_crypto_5002a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, status, 0)
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_crypto_5002a000, status, 0)
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_crypto_5002a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_status_LEN 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible {"nordic,nrf-cc310"}
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0 "nordic,nrf-cc310"
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-cc310
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_cc310
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_CC310
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_LEN 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_wakeup_source 0
#define DT_N_S_soc_S_crypto_5002a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_crypto_5002a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/crypto@5002a000/crypto@5002b000
 *
 * Node identifier: DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000
 *
 * Binding (compatible = arm,cryptocell-310):
 *   $ZEPHYR_BASE/dts/bindings/crypto/arm,cryptocell-310.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_PATH "/soc/crypto@5002a000/crypto@5002b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FULL_NAME "crypto@5002b000"

/* Node parent (/soc/crypto@5002a000) identifier: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_PARENT DT_N_S_soc_S_crypto_5002a000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_ORD 113
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_ORD_STR_SORTABLE 00113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REQUIRES_ORDS \
	14, /* /soc/interrupt-controller@e000e100 */ \
	112, /* /soc/crypto@5002a000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_EXISTS 1
#define DT_N_INST_0_arm_cryptocell_310 DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000
#define DT_N_NODELABEL_cryptocell310   DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_NUM 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_IDX_0_VAL_ADDRESS 1342353408 /* 0x5002b000 */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_RANGES_NUM 0
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_NUM 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_irq 42
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_COMPAT_MATCHES_arm_cryptocell_310 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_COMPAT_MODEL_IDX_0 "cryptocell-310"
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg {1342353408 /* 0x5002b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_0 1342353408
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts {42 /* 0x2a */, 1 /* 0x1 */}
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_0 42
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible {"arm,cryptocell-310"}
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_IDX_0 "arm,cryptocell-310"
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_IDX_0_STRING_UNQUOTED arm,cryptocell-310
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_IDX_0_STRING_TOKEN arm_cryptocell_310
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CRYPTOCELL_310
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, compatible, 0)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, compatible, 0)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_LEN 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_wakeup_source 0
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000
 *
 * Binding (compatible = nordic,nrf52-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/nordic,nrf52-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_PATH "/soc/flash-controller@4001e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_FULL_NAME "flash-controller@4001e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_ORD 114
#define DT_N_S_soc_S_flash_controller_4001e000_ORD_STR_SORTABLE 00114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_SUPPORTS_ORDS \
	115, /* /soc/flash-controller@4001e000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf52_flash_controller DT_N_S_soc_S_flash_controller_4001e000
#define DT_N_NODELABEL_flash_controller           DT_N_S_soc_S_flash_controller_4001e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_VAL_ADDRESS 1073864704 /* 0x4001e000 */
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_4001e000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_MATCHES_nordic_nrf52_flash_controller 1
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_MODEL_IDX_0 "nrf52-flash-controller"
#define DT_N_S_soc_S_flash_controller_4001e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_P_partial_erase 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_partial_erase_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg {1073864704 /* 0x4001e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_0 1073864704
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible {"nordic,nrf52-flash-controller"}
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0 "nordic,nrf52-flash-controller"
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf52-flash-controller
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf52_flash_controller
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF52_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_4001e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_4001e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PATH "/soc/flash-controller@4001e000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FULL_NAME "flash@0"

/* Node parent (/soc/flash-controller@4001e000) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PARENT DT_N_S_soc_S_flash_controller_4001e000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_ORD 115
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_ORD_STR_SORTABLE 00115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REQUIRES_ORDS \
	114, /* /soc/flash-controller@4001e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_SUPPORTS_ORDS \
	116, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_4001e000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg {0 /* 0x0 */, 1048576 /* 0x100000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_1 1048576
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PATH "/soc/flash-controller@4001e000/flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@4001e000/flash@0) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_ORD 116
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_ORD_STR_SORTABLE 00116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_REQUIRES_ORDS \
	115, /* /soc/flash-controller@4001e000/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_SUPPORTS_ORDS \
	117, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@0 */ \
	118, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@c000 */ \
	119, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@73000 */ \
	120, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@da000 */ \
	121, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@f8000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_ORD 117
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_ORD_STR_SORTABLE 00117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	116, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_IDX_0 "mcuboot"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_read_only 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 49152 /* 0xc000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1 49152
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@c000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_FULL_NAME "partition@c000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_ORD 118
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_ORD_STR_SORTABLE 00118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_REQUIRES_ORDS \
	116, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_REG_IDX_0_VAL_ADDRESS 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_REG_IDX_0_VAL_SIZE 421888 /* 0x67000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label_IDX_0 "image-0"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_reg {49152 /* 0xc000 */, 421888 /* 0x67000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_reg_IDX_0 49152
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_reg_IDX_1 421888
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@73000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@73000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_FULL_NAME "partition@73000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_ORD 119
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_ORD_STR_SORTABLE 00119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_REQUIRES_ORDS \
	116, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_REG_IDX_0_VAL_ADDRESS 471040 /* 0x73000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_REG_IDX_0_VAL_SIZE 421888 /* 0x67000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label "image-1"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label_IDX_0 "image-1"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_reg {471040 /* 0x73000 */, 421888 /* 0x67000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_reg_IDX_0 471040
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_reg_IDX_1 421888
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@da000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@da000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_FULL_NAME "partition@da000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_ORD 120
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_ORD_STR_SORTABLE 00120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_REQUIRES_ORDS \
	116, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_REG_IDX_0_VAL_ADDRESS 892928 /* 0xda000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_REG_IDX_0_VAL_SIZE 122880 /* 0x1e000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label "image-scratch"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label_STRING_UNQUOTED image-scratch
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label_IDX_0 "image-scratch"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_reg {892928 /* 0xda000 */, 122880 /* 0x1e000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_reg_IDX_0 892928
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_reg_IDX_1 122880
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@f8000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@f8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_FULL_NAME "partition@f8000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_ORD 121
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_ORD_STR_SORTABLE 00121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_REQUIRES_ORDS \
	116, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_REG_IDX_0_VAL_ADDRESS 1015808 /* 0xf8000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000, label, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_reg {1015808 /* 0xf8000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_reg_IDX_0 1015808
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ctr_barometer_tag@60
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60
 *
 * Binding (compatible = nxp,mpl3115a2):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/sensor/nxp,mpl3115a2.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_PATH "/soc/i2c@40003000/ctr_barometer_tag@60"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_FULL_NAME "ctr_barometer_tag@60"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_ORD 122
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_ORD_STR_SORTABLE 00122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_EXISTS 1
#define DT_N_INST_0_nxp_mpl3115a2        DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60
#define DT_N_NODELABEL_ctr_barometer_tag DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_REG_IDX_0_VAL_ADDRESS 96 /* 0x60 */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_COMPAT_MATCHES_nxp_mpl3115a2 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_COMPAT_MODEL_IDX_0 "mpl3115a2"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible {"nxp,mpl3115a2"}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible_IDX_0 "nxp,mpl3115a2"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible_IDX_0_STRING_UNQUOTED nxp,mpl3115a2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible_IDX_0_STRING_TOKEN nxp_mpl3115a2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_MPL3115A2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_reg {96 /* 0x60 */}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_reg_IDX_0 96
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ctr_s1@11
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11
 *
 * Binding (compatible = hardwario,ctr-s1):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-s1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_PATH "/soc/i2c@40003000/ctr_s1@11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_FULL_NAME "ctr_s1@11"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_ORD 123
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_ORD_STR_SORTABLE 00123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_REQUIRES_ORDS \
	4, /* /soc/gpio@50000300 */ \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_EXISTS 1
#define DT_N_INST_0_hardwario_ctr_s1 DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11
#define DT_N_NODELABEL_ctr_s1        DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_REG_IDX_0_VAL_ADDRESS 17 /* 0x11 */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_COMPAT_MATCHES_hardwario_ctr_s1 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_COMPAT_MODEL_IDX_0 "ctr-s1"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_IDX_0_VAL_pin 6
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_IDX_0_VAL_flags 17
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_auto_beep 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_auto_beep_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_reg {17 /* 0x11 */}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_reg_IDX_0 17
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible {"hardwario,ctr-s1"}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible_IDX_0 "hardwario,ctr-s1"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-s1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_s1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_S1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ctr_x10_tla2024@49
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49
 *
 * Binding (compatible = ti,tla2024):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/adc/ti,tla2024.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_PATH "/soc/i2c@40003000/ctr_x10_tla2024@49"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_FULL_NAME "ctr_x10_tla2024@49"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_ORD 124
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_ORD_STR_SORTABLE 00124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_EXISTS 1
#define DT_N_INST_0_ti_tla2024         DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49
#define DT_N_NODELABEL_ctr_x10_tla2024 DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_REG_IDX_0_VAL_ADDRESS 73 /* 0x49 */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_COMPAT_MATCHES_ti_tla2024 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_COMPAT_MODEL_IDX_0 "tla2024"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_data_rate 4
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_data_rate_ENUM_IDX 4
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_data_rate_ENUM_VAL_4_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_data_rate_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_reg {73 /* 0x49 */}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_reg_IDX_0 73
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible {"ti,tla2024"}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible_IDX_0 "ti,tla2024"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible_IDX_0_STRING_UNQUOTED ti,tla2024
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible_IDX_0_STRING_TOKEN ti_tla2024
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_TLA2024
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ctr_x3_ads122c04_a1@46
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46
 *
 * Binding (compatible = ti,ads122c04):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/adc/ti,ads122c04.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_PATH "/soc/i2c@40003000/ctr_x3_ads122c04_a1@46"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_FULL_NAME "ctr_x3_ads122c04_a1@46"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_ORD 125
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_ORD_STR_SORTABLE 00125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_EXISTS 1
#define DT_N_INST_0_ti_ads122c04           DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46
#define DT_N_NODELABEL_ctr_x3_ads122c04_a1 DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_REG_IDX_0_VAL_ADDRESS 70 /* 0x46 */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_COMPAT_MATCHES_ti_ads122c04 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_COMPAT_MODEL_IDX_0 "ads122c04"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_gain 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_gain_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_gain_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_gain_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_mux 3
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_mux_ENUM_IDX 3
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_mux_ENUM_VAL_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_vref 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_vref_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_vref_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_vref_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_idac 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_idac_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_idac_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_idac_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_i1mux 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_i1mux_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_i1mux_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_i1mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_i2mux 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_i2mux_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_i2mux_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_i2mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_reg {70 /* 0x46 */}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_reg_IDX_0 70
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible {"ti,ads122c04"}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible_IDX_0 "ti,ads122c04"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible_IDX_0_STRING_UNQUOTED ti,ads122c04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible_IDX_0_STRING_TOKEN ti_ads122c04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_ADS122C04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ctr_x3_ads122c04_a2@47
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47
 *
 * Binding (compatible = ti,ads122c04):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/adc/ti,ads122c04.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_PATH "/soc/i2c@40003000/ctr_x3_ads122c04_a2@47"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_FULL_NAME "ctr_x3_ads122c04_a2@47"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_ORD 126
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_ORD_STR_SORTABLE 00126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_EXISTS 1
#define DT_N_INST_1_ti_ads122c04           DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47
#define DT_N_NODELABEL_ctr_x3_ads122c04_a2 DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_REG_IDX_0_VAL_ADDRESS 71 /* 0x47 */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_COMPAT_MATCHES_ti_ads122c04 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_COMPAT_MODEL_IDX_0 "ads122c04"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_gain 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_gain_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_gain_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_gain_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_mux 3
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_mux_ENUM_IDX 3
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_mux_ENUM_VAL_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_vref 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_vref_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_vref_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_vref_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_idac 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_idac_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_idac_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_idac_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_i1mux 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_i1mux_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_i1mux_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_i1mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_i2mux 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_i2mux_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_i2mux_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_i2mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_reg {71 /* 0x47 */}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_reg_IDX_0 71
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible {"ti,ads122c04"}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible_IDX_0 "ti,ads122c04"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible_IDX_0_STRING_UNQUOTED ti,ads122c04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible_IDX_0_STRING_TOKEN ti_ads122c04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_ADS122C04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ctr_x3_ads122c04_b1@4a
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a
 *
 * Binding (compatible = ti,ads122c04):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/adc/ti,ads122c04.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_PATH "/soc/i2c@40003000/ctr_x3_ads122c04_b1@4a"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_FULL_NAME "ctr_x3_ads122c04_b1@4a"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_ORD 127
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_ORD_STR_SORTABLE 00127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_EXISTS 1
#define DT_N_INST_2_ti_ads122c04           DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a
#define DT_N_NODELABEL_ctr_x3_ads122c04_b1 DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_REG_IDX_0_VAL_ADDRESS 74 /* 0x4a */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_COMPAT_MATCHES_ti_ads122c04 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_COMPAT_MODEL_IDX_0 "ads122c04"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_gain 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_gain_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_gain_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_gain_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_mux 3
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_mux_ENUM_IDX 3
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_mux_ENUM_VAL_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_vref 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_vref_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_vref_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_vref_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_idac 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_idac_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_idac_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_idac_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_i1mux 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_i1mux_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_i1mux_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_i1mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_i2mux 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_i2mux_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_i2mux_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_i2mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_reg {74 /* 0x4a */}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_reg_IDX_0 74
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible {"ti,ads122c04"}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible_IDX_0 "ti,ads122c04"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible_IDX_0_STRING_UNQUOTED ti,ads122c04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible_IDX_0_STRING_TOKEN ti_ads122c04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_ADS122C04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ctr_x3_ads122c04b2@4f
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f
 *
 * Binding (compatible = ti,ads122c04):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/adc/ti,ads122c04.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_PATH "/soc/i2c@40003000/ctr_x3_ads122c04b2@4f"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_FULL_NAME "ctr_x3_ads122c04b2@4f"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_ORD 128
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_ORD_STR_SORTABLE 00128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_EXISTS 1
#define DT_N_INST_3_ti_ads122c04           DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f
#define DT_N_NODELABEL_ctr_x3_ads122c04_b2 DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_REG_IDX_0_VAL_ADDRESS 79 /* 0x4f */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_COMPAT_MATCHES_ti_ads122c04 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_COMPAT_MODEL_IDX_0 "ads122c04"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_gain 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_gain_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_gain_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_gain_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_mux 3
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_mux_ENUM_IDX 3
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_mux_ENUM_VAL_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_vref 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_vref_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_vref_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_vref_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_idac 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_idac_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_idac_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_idac_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_i1mux 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_i1mux_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_i1mux_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_i1mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_i2mux 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_i2mux_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_i2mux_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_i2mux_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_reg {79 /* 0x4f */}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_reg_IDX_0 79
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible {"ti,ads122c04"}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible_IDX_0 "ti,ads122c04"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible_IDX_0_STRING_UNQUOTED ti,ads122c04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible_IDX_0_STRING_TOKEN ti_ads122c04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_ADS122C04
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ctr_x4_tla2021@49
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49
 *
 * Binding (compatible = ti,tla2021):
 *   $ZEPHYR_BASE/dts/bindings/adc/ti,tla2021.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_PATH "/soc/i2c@40003000/ctr_x4_tla2021@49"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_FULL_NAME "ctr_x4_tla2021@49"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_ORD 129
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_ORD_STR_SORTABLE 00129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_EXISTS 1
#define DT_N_INST_1_ti_tla2021        DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49
#define DT_N_NODELABEL_ctr_x4_tla2021 DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_REG_IDX_0_VAL_ADDRESS 73 /* 0x49 */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_COMPAT_MATCHES_ti_tla2021 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_COMPAT_MODEL_IDX_0 "tla2021"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_reg {73 /* 0x49 */}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_reg_IDX_0 73
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible {"ti,tla2021"}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible_IDX_0 "ti,tla2021"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible_IDX_0_STRING_UNQUOTED ti,tla2021
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible_IDX_0_STRING_TOKEN ti_tla2021
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_TLA2021
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ctr_z@10
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ctr_z_10
 *
 * Binding (compatible = hardwario,ctr-z):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-z.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_PATH "/soc/i2c@40003000/ctr_z@10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_FULL_NAME "ctr_z@10"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_ORD 130
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_ORD_STR_SORTABLE 00130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_REQUIRES_ORDS \
	4, /* /soc/gpio@50000300 */ \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_EXISTS 1
#define DT_N_INST_0_hardwario_ctr_z DT_N_S_soc_S_i2c_40003000_S_ctr_z_10
#define DT_N_NODELABEL_ctr_z        DT_N_S_soc_S_i2c_40003000_S_ctr_z_10

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_REG_IDX_0_VAL_ADDRESS 16 /* 0x10 */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_COMPAT_MATCHES_hardwario_ctr_z 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_COMPAT_MODEL_IDX_0 "ctr-z"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_IDX_0_VAL_pin 6
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_IDX_0_VAL_flags 17
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_auto_beep 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_auto_beep_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_reg {16 /* 0x10 */}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_reg_IDX_0 16
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status "okay"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible {"hardwario,ctr-z"}
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible_IDX_0 "hardwario,ctr-z"
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-z
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_z
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_Z
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ctr_z_10_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/lis2dh12@19
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19
 *
 * Binding (compatible = st,lis2dh):
 *   $ZEPHYR_BASE/dts/bindings/sensor/st,lis2dh-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_PATH "/soc/i2c@40003000/lis2dh12@19"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_FULL_NAME "lis2dh12@19"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_ORD 131
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_ORD_STR_SORTABLE 00131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_REQUIRES_ORDS \
	6, /* /soc/gpio@50000000 */ \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_EXISTS 1
#define DT_N_ALIAS_accel0       DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19
#define DT_N_INST_0_st_lis2dh   DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19
#define DT_N_NODELABEL_lis2dh12 DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_REG_IDX_0_VAL_ADDRESS 25 /* 0x19 */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_COMPAT_MATCHES_st_lis2dh 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_COMPAT_VENDOR_IDX_0 "STMicroelectronics"
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_COMPAT_MODEL_IDX_0 "lis2dh"
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_reg {25 /* 0x19 */}
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_reg_IDX_0 25
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible {"st,lis2dh"}
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible_IDX_0 "st,lis2dh"
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible_IDX_0_STRING_UNQUOTED st,lis2dh
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible_IDX_0_STRING_TOKEN st_lis2dh
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible_IDX_0_STRING_UPPER_TOKEN ST_LIS2DH
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_0_VAL_pin 19
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_1_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_1_VAL_pin 17
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, irq_gpios, 0) \
	fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, irq_gpios, 1)
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, irq_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, irq_gpios, 1)
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, irq_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, irq_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, irq_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, irq_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_LEN 2
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_disconnect_sdo_sa0_pull_up 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_disconnect_sdo_sa0_pull_up_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_anym_on_int1 0
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_anym_on_int1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_anym_no_latch 0
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_anym_no_latch_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_anym_mode 0
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_anym_mode_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_anym_mode_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19_P_anym_mode_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/m8@42
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_m8_42
 *
 * Binding (compatible = u-blox,m8):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/gnss/ublox,m8.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_PATH "/soc/i2c@40003000/m8@42"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_FULL_NAME "m8@42"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_ORD 132
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_ORD_STR_SORTABLE 00132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_REQUIRES_ORDS \
	4, /* /soc/gpio@50000300 */ \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_EXISTS 1
#define DT_N_INST_0_u_blox_m8 DT_N_S_soc_S_i2c_40003000_S_m8_42
#define DT_N_NODELABEL_m8     DT_N_S_soc_S_i2c_40003000_S_m8_42

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_REG_IDX_0_VAL_ADDRESS 66 /* 0x42 */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_COMPAT_MATCHES_u_blox_m8 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_COMPAT_VENDOR_IDX_0 "u-blox"
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_COMPAT_MODEL_IDX_0 "m8"
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_IDX_0_VAL_pin 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, main_en_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, main_en_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, main_en_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, main_en_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_main_en_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_IDX_0_VAL_pin 3
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, bckp_en_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, bckp_en_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, bckp_en_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, bckp_en_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_bckp_en_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_reg {66 /* 0x42 */}
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_reg_IDX_0 66
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible {"u-blox,m8"}
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible_IDX_0 "u-blox,m8"
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible_IDX_0_STRING_UNQUOTED u-blox,m8
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible_IDX_0_STRING_TOKEN u_blox_m8
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible_IDX_0_STRING_UPPER_TOKEN U_BLOX_M8
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_m8_42_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/sht30@44
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_sht30_44
 *
 * Binding (compatible = sensirion,sht3xd):
 *   $ZEPHYR_BASE/dts/bindings/sensor/sensirion,sht3xd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_PATH "/soc/i2c@40003000/sht30@44"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_FULL_NAME "sht30@44"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_ORD 133
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_ORD_STR_SORTABLE 00133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_EXISTS 1
#define DT_N_INST_0_sensirion_sht3xd DT_N_S_soc_S_i2c_40003000_S_sht30_44
#define DT_N_NODELABEL_sht30         DT_N_S_soc_S_i2c_40003000_S_sht30_44

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_REG_IDX_0_VAL_ADDRESS 68 /* 0x44 */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_COMPAT_MATCHES_sensirion_sht3xd 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_COMPAT_VENDOR_IDX_0 "Sensirion AG"
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_COMPAT_MODEL_IDX_0 "sht3xd"
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible {"sensirion,sht3xd"}
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible_IDX_0 "sensirion,sht3xd"
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible_IDX_0_STRING_UNQUOTED sensirion,sht3xd
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible_IDX_0_STRING_TOKEN sensirion_sht3xd
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible_IDX_0_STRING_UPPER_TOKEN SENSIRION_SHT3XD
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_reg {68 /* 0x44 */}
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_reg_IDX_0 68
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_sht30_44_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/sht30_ext@45
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45
 *
 * Binding (compatible = sensirion,sht3xd):
 *   $ZEPHYR_BASE/dts/bindings/sensor/sensirion,sht3xd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_PATH "/soc/i2c@40003000/sht30_ext@45"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_FULL_NAME "sht30_ext@45"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_ORD 134
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_ORD_STR_SORTABLE 00134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_EXISTS 1
#define DT_N_INST_1_sensirion_sht3xd DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45
#define DT_N_NODELABEL_sht30_ext     DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_REG_IDX_0_VAL_ADDRESS 69 /* 0x45 */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_COMPAT_MATCHES_sensirion_sht3xd 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_COMPAT_VENDOR_IDX_0 "Sensirion AG"
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_COMPAT_MODEL_IDX_0 "sht3xd"
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible {"sensirion,sht3xd"}
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible_IDX_0 "sensirion,sht3xd"
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible_IDX_0_STRING_UNQUOTED sensirion,sht3xd
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible_IDX_0_STRING_TOKEN sensirion_sht3xd
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible_IDX_0_STRING_UPPER_TOKEN SENSIRION_SHT3XD
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_reg {69 /* 0x45 */}
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_reg_IDX_0 69
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/tmp112@48
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_tmp112_48
 *
 * Binding (compatible = ti,tmp112):
 *   $ZEPHYR_BASE/dts/bindings/sensor/ti,tmp112.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_PATH "/soc/i2c@40003000/tmp112@48"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_FULL_NAME "tmp112@48"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_ORD 135
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_ORD_STR_SORTABLE 00135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_REQUIRES_ORDS \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_EXISTS 1
#define DT_N_ALIAS_ambient_temp0 DT_N_S_soc_S_i2c_40003000_S_tmp112_48
#define DT_N_INST_0_ti_tmp112    DT_N_S_soc_S_i2c_40003000_S_tmp112_48
#define DT_N_NODELABEL_tmp112    DT_N_S_soc_S_i2c_40003000_S_tmp112_48

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_REG_IDX_0_VAL_ADDRESS 72 /* 0x48 */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_COMPAT_MATCHES_ti_tmp112 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_COMPAT_MODEL_IDX_0 "tmp112"
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_conversion_rate 4000
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_conversion_rate_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_conversion_rate_ENUM_VAL_4000_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_conversion_rate_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_extended_mode 0
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_extended_mode_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible {"ti,tmp112"}
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible_IDX_0 "ti,tmp112"
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible_IDX_0_STRING_UNQUOTED ti,tmp112
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible_IDX_0_STRING_TOKEN ti_tmp112
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_TMP112
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_reg {72 /* 0x48 */}
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_reg_IDX_0 72
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_tmp112_48_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/uart@50
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_uart_50
 *
 * Binding (compatible = nxp,sc16is7xx):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/serial/nxp,sc16is7xx.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_PATH "/soc/i2c@40003000/uart@50"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_FULL_NAME "uart@50"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_ORD 136
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_ORD_STR_SORTABLE 00136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_REQUIRES_ORDS \
	6, /* /soc/gpio@50000000 */ \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_EXISTS 1
#define DT_N_INST_0_nxp_sc16is7xx         DT_N_S_soc_S_i2c_40003000_S_uart_50
#define DT_N_NODELABEL_ctr_x2_sc16is740_a DT_N_S_soc_S_i2c_40003000_S_uart_50

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_REG_IDX_0_VAL_ADDRESS 80 /* 0x50 */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_COMPAT_MATCHES_nxp_sc16is7xx 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_COMPAT_MODEL_IDX_0 "sc16is7xx"
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_clock_frequency 14745600
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_prescaler 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_IDX_0_VAL_pin 2
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_reset_delay 1000
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_reset_delay_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_rts_control 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_rts_control_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_rts_invert 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_rts_invert_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_reg {80 /* 0x50 */}
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_reg_IDX_0 80
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible {"nxp,sc16is7xx"}
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible_IDX_0 "nxp,sc16is7xx"
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible_IDX_0_STRING_UNQUOTED nxp,sc16is7xx
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible_IDX_0_STRING_TOKEN nxp_sc16is7xx
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_SC16IS7XX
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_hw_flow_control 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_50_P_hw_flow_control_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/uart@51
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_uart_51
 *
 * Binding (compatible = nxp,sc16is7xx):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/serial/nxp,sc16is7xx.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_PATH "/soc/i2c@40003000/uart@51"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_FULL_NAME "uart@51"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_ORD 137
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_ORD_STR_SORTABLE 00137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_REQUIRES_ORDS \
	6, /* /soc/gpio@50000000 */ \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_EXISTS 1
#define DT_N_INST_1_nxp_sc16is7xx         DT_N_S_soc_S_i2c_40003000_S_uart_51
#define DT_N_NODELABEL_ctr_x2_sc16is740_b DT_N_S_soc_S_i2c_40003000_S_uart_51

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_REG_IDX_0_VAL_ADDRESS 81 /* 0x51 */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_COMPAT_MATCHES_nxp_sc16is7xx 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_COMPAT_VENDOR_IDX_0 "NXP Semiconductors"
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_COMPAT_MODEL_IDX_0 "sc16is7xx"
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_clock_frequency 14745600
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_prescaler 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_IDX_0_VAL_pin 4
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, irq_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, irq_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_irq_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_reset_delay 1000
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_reset_delay_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_rts_control 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_rts_control_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_rts_invert 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_rts_invert_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_reg {81 /* 0x51 */}
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_reg_IDX_0 81
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, status, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible {"nxp,sc16is7xx"}
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible_IDX_0 "nxp,sc16is7xx"
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible_IDX_0_STRING_UNQUOTED nxp,sc16is7xx
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible_IDX_0_STRING_TOKEN nxp_sc16is7xx
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible_IDX_0_STRING_UPPER_TOKEN NXP_SC16IS7XX
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_hw_flow_control 0
#define DT_N_S_soc_S_i2c_40003000_S_uart_51_P_hw_flow_control_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ds2484@18
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ds2484_18
 *
 * Binding (compatible = maxim,ds2484):
 *   $ZEPHYR_BASE/dts/bindings/w1/maxim,ds2484.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_PATH "/soc/i2c@40003000/ds2484@18"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_FULL_NAME "ds2484@18"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_PARENT DT_N_S_soc_S_i2c_40003000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_ORD 138
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_ORD_STR_SORTABLE 00138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_REQUIRES_ORDS \
	4, /* /soc/gpio@50000300 */ \
	15, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_SUPPORTS_ORDS \
	139, /* /soc/i2c@40003000/ds2484@18/ds18b20_0 */ \
	140, /* /soc/i2c@40003000/ds2484@18/ds18b20_1 */ \
	141, /* /soc/i2c@40003000/ds2484@18/ds18b20_2 */ \
	142, /* /soc/i2c@40003000/ds2484@18/ds18b20_3 */ \
	143, /* /soc/i2c@40003000/ds2484@18/ds18b20_4 */ \
	144, /* /soc/i2c@40003000/ds2484@18/ds18b20_5 */ \
	145, /* /soc/i2c@40003000/ds2484@18/ds18b20_6 */ \
	146, /* /soc/i2c@40003000/ds2484@18/ds18b20_7 */ \
	147, /* /soc/i2c@40003000/ds2484@18/ds18b20_8 */ \
	148, /* /soc/i2c@40003000/ds2484@18/ds18b20_9 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_EXISTS 1
#define DT_N_INST_0_maxim_ds2484 DT_N_S_soc_S_i2c_40003000_S_ds2484_18
#define DT_N_NODELABEL_ds2484    DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_REG_IDX_0_VAL_ADDRESS 24 /* 0x18 */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_COMPAT_MATCHES_maxim_ds2484 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_COMPAT_MODEL_IDX_0 "ds2484"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_IDX_0_VAL_pin 10
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, slpz_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, slpz_gpios, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, slpz_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, slpz_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_slpz_gpios_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_reg {24 /* 0x18 */}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_reg_IDX_0 24
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible {"maxim,ds2484"}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible_IDX_0 "maxim,ds2484"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible_IDX_0_STRING_UNQUOTED maxim,ds2484
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible_IDX_0_STRING_TOKEN maxim_ds2484
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_DS2484
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_active_pullup 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_P_active_pullup_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ds2484@18/ds18b20_0
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0
 *
 * Binding (compatible = maxim,ds18b20):
 *   $ZEPHYR_BASE/dts/bindings/sensor/maxim,ds18b20.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_PATH "/soc/i2c@40003000/ds2484@18/ds18b20_0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_FULL_NAME "ds18b20_0"

/* Node parent (/soc/i2c@40003000/ds2484@18) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_PARENT DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_ORD 139
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_ORD_STR_SORTABLE 00139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_REQUIRES_ORDS \
	138, /* /soc/i2c@40003000/ds2484@18 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_EXISTS 1
#define DT_N_INST_0_maxim_ds18b20 DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0
#define DT_N_NODELABEL_ds18b20_0  DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0

/* Bus info (controller: '/soc/i2c@40003000/ds2484@18', type: '['w1']') */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_BUS_w1 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_BUS DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_REG_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_COMPAT_MATCHES_maxim_ds18b20 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_COMPAT_MODEL_IDX_0 "ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_resolution 12
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_resolution_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible {"maxim,ds18b20"}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible_IDX_0 "maxim,ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible_IDX_0_STRING_UNQUOTED maxim,ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible_IDX_0_STRING_TOKEN maxim_ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_DS18B20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_family_code 40
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_family_code_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_overdrive_speed 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0_P_overdrive_speed_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ds2484@18/ds18b20_1
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1
 *
 * Binding (compatible = maxim,ds18b20):
 *   $ZEPHYR_BASE/dts/bindings/sensor/maxim,ds18b20.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_PATH "/soc/i2c@40003000/ds2484@18/ds18b20_1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_FULL_NAME "ds18b20_1"

/* Node parent (/soc/i2c@40003000/ds2484@18) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_PARENT DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_ORD 140
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_ORD_STR_SORTABLE 00140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_REQUIRES_ORDS \
	138, /* /soc/i2c@40003000/ds2484@18 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_EXISTS 1
#define DT_N_INST_1_maxim_ds18b20 DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1
#define DT_N_NODELABEL_ds18b20_1  DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1

/* Bus info (controller: '/soc/i2c@40003000/ds2484@18', type: '['w1']') */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_BUS_w1 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_BUS DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_REG_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_COMPAT_MATCHES_maxim_ds18b20 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_COMPAT_MODEL_IDX_0 "ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_resolution 12
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_resolution_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible {"maxim,ds18b20"}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible_IDX_0 "maxim,ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible_IDX_0_STRING_UNQUOTED maxim,ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible_IDX_0_STRING_TOKEN maxim_ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_DS18B20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_family_code 40
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_family_code_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_overdrive_speed 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1_P_overdrive_speed_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ds2484@18/ds18b20_2
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2
 *
 * Binding (compatible = maxim,ds18b20):
 *   $ZEPHYR_BASE/dts/bindings/sensor/maxim,ds18b20.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_PATH "/soc/i2c@40003000/ds2484@18/ds18b20_2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_FULL_NAME "ds18b20_2"

/* Node parent (/soc/i2c@40003000/ds2484@18) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_PARENT DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_ORD 141
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_ORD_STR_SORTABLE 00141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_REQUIRES_ORDS \
	138, /* /soc/i2c@40003000/ds2484@18 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_EXISTS 1
#define DT_N_INST_2_maxim_ds18b20 DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2
#define DT_N_NODELABEL_ds18b20_2  DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2

/* Bus info (controller: '/soc/i2c@40003000/ds2484@18', type: '['w1']') */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_BUS_w1 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_BUS DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_REG_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_COMPAT_MATCHES_maxim_ds18b20 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_COMPAT_MODEL_IDX_0 "ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_resolution 12
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_resolution_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible {"maxim,ds18b20"}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible_IDX_0 "maxim,ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible_IDX_0_STRING_UNQUOTED maxim,ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible_IDX_0_STRING_TOKEN maxim_ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_DS18B20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_family_code 40
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_family_code_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_overdrive_speed 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2_P_overdrive_speed_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ds2484@18/ds18b20_3
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3
 *
 * Binding (compatible = maxim,ds18b20):
 *   $ZEPHYR_BASE/dts/bindings/sensor/maxim,ds18b20.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_PATH "/soc/i2c@40003000/ds2484@18/ds18b20_3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_FULL_NAME "ds18b20_3"

/* Node parent (/soc/i2c@40003000/ds2484@18) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_PARENT DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_ORD 142
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_ORD_STR_SORTABLE 00142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_REQUIRES_ORDS \
	138, /* /soc/i2c@40003000/ds2484@18 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_EXISTS 1
#define DT_N_INST_3_maxim_ds18b20 DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3
#define DT_N_NODELABEL_ds18b20_3  DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3

/* Bus info (controller: '/soc/i2c@40003000/ds2484@18', type: '['w1']') */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_BUS_w1 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_BUS DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_REG_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_COMPAT_MATCHES_maxim_ds18b20 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_COMPAT_MODEL_IDX_0 "ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_resolution 12
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_resolution_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible {"maxim,ds18b20"}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible_IDX_0 "maxim,ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible_IDX_0_STRING_UNQUOTED maxim,ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible_IDX_0_STRING_TOKEN maxim_ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_DS18B20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_family_code 40
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_family_code_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_overdrive_speed 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3_P_overdrive_speed_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ds2484@18/ds18b20_4
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4
 *
 * Binding (compatible = maxim,ds18b20):
 *   $ZEPHYR_BASE/dts/bindings/sensor/maxim,ds18b20.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_PATH "/soc/i2c@40003000/ds2484@18/ds18b20_4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_FULL_NAME "ds18b20_4"

/* Node parent (/soc/i2c@40003000/ds2484@18) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_PARENT DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_ORD 143
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_ORD_STR_SORTABLE 00143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_REQUIRES_ORDS \
	138, /* /soc/i2c@40003000/ds2484@18 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_EXISTS 1
#define DT_N_INST_4_maxim_ds18b20 DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4
#define DT_N_NODELABEL_ds18b20_4  DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4

/* Bus info (controller: '/soc/i2c@40003000/ds2484@18', type: '['w1']') */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_BUS_w1 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_BUS DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_REG_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_COMPAT_MATCHES_maxim_ds18b20 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_COMPAT_MODEL_IDX_0 "ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_resolution 12
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_resolution_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible {"maxim,ds18b20"}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible_IDX_0 "maxim,ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible_IDX_0_STRING_UNQUOTED maxim,ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible_IDX_0_STRING_TOKEN maxim_ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_DS18B20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_family_code 40
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_family_code_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_overdrive_speed 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4_P_overdrive_speed_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ds2484@18/ds18b20_5
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5
 *
 * Binding (compatible = maxim,ds18b20):
 *   $ZEPHYR_BASE/dts/bindings/sensor/maxim,ds18b20.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_PATH "/soc/i2c@40003000/ds2484@18/ds18b20_5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_FULL_NAME "ds18b20_5"

/* Node parent (/soc/i2c@40003000/ds2484@18) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_PARENT DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_ORD 144
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_ORD_STR_SORTABLE 00144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_REQUIRES_ORDS \
	138, /* /soc/i2c@40003000/ds2484@18 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_EXISTS 1
#define DT_N_INST_5_maxim_ds18b20 DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5
#define DT_N_NODELABEL_ds18b20_5  DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5

/* Bus info (controller: '/soc/i2c@40003000/ds2484@18', type: '['w1']') */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_BUS_w1 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_BUS DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_REG_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_COMPAT_MATCHES_maxim_ds18b20 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_COMPAT_MODEL_IDX_0 "ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_resolution 12
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_resolution_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible {"maxim,ds18b20"}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible_IDX_0 "maxim,ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible_IDX_0_STRING_UNQUOTED maxim,ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible_IDX_0_STRING_TOKEN maxim_ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_DS18B20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_family_code 40
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_family_code_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_overdrive_speed 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5_P_overdrive_speed_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ds2484@18/ds18b20_6
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6
 *
 * Binding (compatible = maxim,ds18b20):
 *   $ZEPHYR_BASE/dts/bindings/sensor/maxim,ds18b20.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_PATH "/soc/i2c@40003000/ds2484@18/ds18b20_6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_FULL_NAME "ds18b20_6"

/* Node parent (/soc/i2c@40003000/ds2484@18) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_PARENT DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_ORD 145
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_ORD_STR_SORTABLE 00145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_REQUIRES_ORDS \
	138, /* /soc/i2c@40003000/ds2484@18 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_EXISTS 1
#define DT_N_INST_6_maxim_ds18b20 DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6
#define DT_N_NODELABEL_ds18b20_6  DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6

/* Bus info (controller: '/soc/i2c@40003000/ds2484@18', type: '['w1']') */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_BUS_w1 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_BUS DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_REG_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_COMPAT_MATCHES_maxim_ds18b20 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_COMPAT_MODEL_IDX_0 "ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_resolution 12
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_resolution_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible {"maxim,ds18b20"}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible_IDX_0 "maxim,ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible_IDX_0_STRING_UNQUOTED maxim,ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible_IDX_0_STRING_TOKEN maxim_ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_DS18B20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_family_code 40
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_family_code_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_overdrive_speed 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6_P_overdrive_speed_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ds2484@18/ds18b20_7
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7
 *
 * Binding (compatible = maxim,ds18b20):
 *   $ZEPHYR_BASE/dts/bindings/sensor/maxim,ds18b20.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_PATH "/soc/i2c@40003000/ds2484@18/ds18b20_7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_FULL_NAME "ds18b20_7"

/* Node parent (/soc/i2c@40003000/ds2484@18) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_PARENT DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_ORD 146
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_ORD_STR_SORTABLE 00146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_REQUIRES_ORDS \
	138, /* /soc/i2c@40003000/ds2484@18 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_EXISTS 1
#define DT_N_INST_7_maxim_ds18b20 DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7
#define DT_N_NODELABEL_ds18b20_7  DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7

/* Bus info (controller: '/soc/i2c@40003000/ds2484@18', type: '['w1']') */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_BUS_w1 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_BUS DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_REG_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_COMPAT_MATCHES_maxim_ds18b20 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_COMPAT_MODEL_IDX_0 "ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_resolution 12
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_resolution_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible {"maxim,ds18b20"}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible_IDX_0 "maxim,ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible_IDX_0_STRING_UNQUOTED maxim,ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible_IDX_0_STRING_TOKEN maxim_ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_DS18B20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_family_code 40
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_family_code_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_overdrive_speed 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7_P_overdrive_speed_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ds2484@18/ds18b20_8
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8
 *
 * Binding (compatible = maxim,ds18b20):
 *   $ZEPHYR_BASE/dts/bindings/sensor/maxim,ds18b20.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_PATH "/soc/i2c@40003000/ds2484@18/ds18b20_8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_FULL_NAME "ds18b20_8"

/* Node parent (/soc/i2c@40003000/ds2484@18) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_PARENT DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_ORD 147
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_ORD_STR_SORTABLE 00147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_REQUIRES_ORDS \
	138, /* /soc/i2c@40003000/ds2484@18 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_EXISTS 1
#define DT_N_INST_8_maxim_ds18b20 DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8
#define DT_N_NODELABEL_ds18b20_8  DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8

/* Bus info (controller: '/soc/i2c@40003000/ds2484@18', type: '['w1']') */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_BUS_w1 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_BUS DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_REG_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_COMPAT_MATCHES_maxim_ds18b20 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_COMPAT_MODEL_IDX_0 "ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_resolution 12
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_resolution_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible {"maxim,ds18b20"}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible_IDX_0 "maxim,ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible_IDX_0_STRING_UNQUOTED maxim,ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible_IDX_0_STRING_TOKEN maxim_ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_DS18B20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_family_code 40
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_family_code_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_overdrive_speed 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8_P_overdrive_speed_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ds2484@18/ds18b20_9
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9
 *
 * Binding (compatible = maxim,ds18b20):
 *   $ZEPHYR_BASE/dts/bindings/sensor/maxim,ds18b20.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_PATH "/soc/i2c@40003000/ds2484@18/ds18b20_9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_FULL_NAME "ds18b20_9"

/* Node parent (/soc/i2c@40003000/ds2484@18) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_PARENT DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_ORD 148
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_ORD_STR_SORTABLE 00148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_REQUIRES_ORDS \
	138, /* /soc/i2c@40003000/ds2484@18 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_EXISTS 1
#define DT_N_INST_9_maxim_ds18b20 DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9
#define DT_N_NODELABEL_ds18b20_9  DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9

/* Bus info (controller: '/soc/i2c@40003000/ds2484@18', type: '['w1']') */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_BUS_w1 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_BUS DT_N_S_soc_S_i2c_40003000_S_ds2484_18

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_REG_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_COMPAT_MATCHES_maxim_ds18b20 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_COMPAT_VENDOR_IDX_0 "Maxim Integrated Products"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_COMPAT_MODEL_IDX_0 "ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_resolution 12
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_resolution_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible {"maxim,ds18b20"}
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible_IDX_0 "maxim,ds18b20"
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible_IDX_0_STRING_UNQUOTED maxim,ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible_IDX_0_STRING_TOKEN maxim_ds18b20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible_IDX_0_STRING_UPPER_TOKEN MAXIM_DS18B20
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_family_code 40
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_family_code_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_overdrive_speed 0
#define DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9_P_overdrive_speed_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/tla2021@4b/channel@0
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_PATH "/soc/i2c@40003000/tla2021@4b/channel@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_FULL_NAME "channel@0"

/* Node parent (/soc/i2c@40003000/tla2021@4b) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_PARENT DT_N_S_soc_S_i2c_40003000_S_tla2021_4b

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_ORD 149
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_ORD_STR_SORTABLE 00149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_REQUIRES_ORDS \
	28, /* /soc/i2c@40003000/tla2021@4b */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_EXISTS 1

/* Bus info (controller: '/soc/i2c@40003000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain "ADC_GAIN_1"
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_STRING_UNQUOTED ADC_GAIN_1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_STRING_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_STRING_UPPER_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_IDX_0 "ADC_GAIN_1"
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_ENUM_IDX 8
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_ENUM_VAL_ADC_GAIN_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_ENUM_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_ENUM_UPPER_TOKEN ADC_GAIN_1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, zephyr_gain, 0)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, zephyr_gain, 0)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_gain_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_STRING_UNQUOTED ADC_REF_INTERNAL
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_STRING_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_STRING_UPPER_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_IDX_0 "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_ENUM_IDX 4
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_ENUM_VAL_ADC_REF_INTERNAL_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_ENUM_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_ENUM_UPPER_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, zephyr_reference, 0)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, zephyr_reference, 0)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_reference_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_acquisition_time 0
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_acquisition_time_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_differential 0
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_differential_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_input_positive 0
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_input_positive_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_input_negative 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_input_negative_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_resolution 12
#define DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0_P_zephyr_resolution_EXISTS 1

/*
 * Devicetree node: /soc/power@40000000
 *
 * Node identifier: DT_N_S_soc_S_power_40000000
 *
 * Binding (compatible = nordic,nrf-power):
 *   $ZEPHYR_BASE/dts/bindings/power/nordic,nrf-power.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_40000000_PATH "/soc/power@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_40000000_FULL_NAME "power@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_power_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_40000000_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_40000000_ORD 150
#define DT_N_S_soc_S_power_40000000_ORD_STR_SORTABLE 00150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_40000000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_40000000_SUPPORTS_ORDS \
	151, /* /soc/power@40000000/gpregret1@4000051c */ \
	152, /* /soc/power@40000000/gpregret2@40000520 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_40000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_power DT_N_S_soc_S_power_40000000
#define DT_N_NODELABEL_power         DT_N_S_soc_S_power_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_40000000_REG_NUM 1
#define DT_N_S_soc_S_power_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_power_40000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_power_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_power_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_power_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_power_40000000_COMPAT_MATCHES_nordic_nrf_power 1
#define DT_N_S_soc_S_power_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_COMPAT_MODEL_IDX_0 "nrf-power"
#define DT_N_S_soc_S_power_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_40000000_P_reg {1073741824 /* 0x40000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_power_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_interrupts {0 /* 0x0 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_power_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_status "okay"
#define DT_N_S_soc_S_power_40000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_40000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_40000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_power_40000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000, status, 0)
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000, status, 0)
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_status_LEN 1
#define DT_N_S_soc_S_power_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_compatible {"nordic,nrf-power"}
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0 "nordic,nrf-power"
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-power
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_power
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_POWER
#define DT_N_S_soc_S_power_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000, compatible, 0)
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000, compatible, 0)
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_power_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_power_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/power@40000000/gpregret1@4000051c
 *
 * Node identifier: DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c
 *
 * Binding (compatible = nordic,nrf-gpregret):
 *   $ZEPHYR_BASE/dts/bindings/retained_mem/nordic,nrf-gpreget.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_PATH "/soc/power@40000000/gpregret1@4000051c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FULL_NAME "gpregret1@4000051c"

/* Node parent (/soc/power@40000000) identifier: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_PARENT DT_N_S_soc_S_power_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_ORD 151
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_ORD_STR_SORTABLE 00151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REQUIRES_ORDS \
	150, /* /soc/power@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpregret DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c
#define DT_N_NODELABEL_gpregret1        DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_NUM 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_IDX_0_VAL_ADDRESS 1073743132 /* 0x4000051c */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_REG_IDX_0_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_RANGES_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_IRQ_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_MATCHES_nordic_nrf_gpregret 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_COMPAT_MODEL_IDX_0 "nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg {1073743132 /* 0x4000051c */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_0 1073743132
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_1 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_status_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible {"nordic,nrf-gpregret"}
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0 "nordic,nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPREGRET
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_wakeup_source 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/power@40000000/gpregret2@40000520
 *
 * Node identifier: DT_N_S_soc_S_power_40000000_S_gpregret2_40000520
 *
 * Binding (compatible = nordic,nrf-gpregret):
 *   $ZEPHYR_BASE/dts/bindings/retained_mem/nordic,nrf-gpreget.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_PATH "/soc/power@40000000/gpregret2@40000520"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FULL_NAME "gpregret2@40000520"

/* Node parent (/soc/power@40000000) identifier: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_PARENT DT_N_S_soc_S_power_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_ORD 152
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_ORD_STR_SORTABLE 00152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REQUIRES_ORDS \
	150, /* /soc/power@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_EXISTS 1
#define DT_N_INST_1_nordic_nrf_gpregret DT_N_S_soc_S_power_40000000_S_gpregret2_40000520
#define DT_N_NODELABEL_gpregret2        DT_N_S_soc_S_power_40000000_S_gpregret2_40000520

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_NUM 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_IDX_0_VAL_ADDRESS 1073743136 /* 0x40000520 */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_REG_IDX_0_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_RANGES_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_IRQ_NUM 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_MATCHES_nordic_nrf_gpregret 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_COMPAT_MODEL_IDX_0 "nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg {1073743136 /* 0x40000520 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_0 1073743136
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_1 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_status_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible {"nordic,nrf-gpregret"}
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0 "nordic,nrf-gpregret"
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpregret
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPREGRET
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_LEN 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_wakeup_source 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_40000000_S_gpregret2_40000520_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/radio@40001000
 *
 * Node identifier: DT_N_S_soc_S_radio_40001000
 *
 * Binding (compatible = nordic,nrf-radio):
 *   $ZEPHYR_BASE/dts/bindings/net/wireless/nordic,nrf-radio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_40001000_PATH "/soc/radio@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_40001000_FULL_NAME "radio@40001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_radio_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_40001000_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_40001000_ORD 153
#define DT_N_S_soc_S_radio_40001000_ORD_STR_SORTABLE 00153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_40001000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_40001000_SUPPORTS_ORDS \
	154, /* /soc/radio@40001000/ieee802154 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_40001000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_radio DT_N_S_soc_S_radio_40001000
#define DT_N_NODELABEL_radio         DT_N_S_soc_S_radio_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_40001000_REG_NUM 1
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_radio_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_radio_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_irq 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_MATCHES_nordic_nrf_radio 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_radio_40001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_MODEL_IDX_0 "nrf-radio"
#define DT_N_S_soc_S_radio_40001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_40001000_P_reg {1073745920 /* 0x40001000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts {1 /* 0x1 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_0 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_dfe_supported 0
#define DT_N_S_soc_S_radio_40001000_P_dfe_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_ieee802154_supported 1
#define DT_N_S_soc_S_radio_40001000_P_ieee802154_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_ble_2mbps_supported 1
#define DT_N_S_soc_S_radio_40001000_P_ble_2mbps_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_ble_coded_phy_supported 1
#define DT_N_S_soc_S_radio_40001000_P_ble_coded_phy_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_tx_high_power_supported 1
#define DT_N_S_soc_S_radio_40001000_P_tx_high_power_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_status "okay"
#define DT_N_S_soc_S_radio_40001000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_radio_40001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_radio_40001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_40001000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_radio_40001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000, status, 0)
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000, status, 0)
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_status_LEN 1
#define DT_N_S_soc_S_radio_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_compatible {"nordic,nrf-radio"}
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0 "nordic,nrf-radio"
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-radio
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_radio
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RADIO
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_radio_40001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_40001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/radio@40001000/ieee802154
 *
 * Node identifier: DT_N_S_soc_S_radio_40001000_S_ieee802154
 *
 * Binding (compatible = nordic,nrf-ieee802154):
 *   $ZEPHYR_BASE/dts/bindings/ieee802154/nordic,nrf-ieee802154.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_PATH "/soc/radio@40001000/ieee802154"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FULL_NAME "ieee802154"

/* Node parent (/soc/radio@40001000) identifier: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_PARENT DT_N_S_soc_S_radio_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_ORD 154
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_ORD_STR_SORTABLE 00154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_REQUIRES_ORDS \
	153, /* /soc/radio@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ieee802154 DT_N_S_soc_S_radio_40001000_S_ieee802154
#define DT_N_NODELABEL_ieee802154         DT_N_S_soc_S_radio_40001000_S_ieee802154

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_REG_NUM 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_RANGES_NUM 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_IRQ_NUM 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_MATCHES_nordic_nrf_ieee802154 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_COMPAT_MODEL_IDX_0 "nrf-ieee802154"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status "disabled"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_LEN 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible {"nordic,nrf-ieee802154"}
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0 "nordic,nrf-ieee802154"
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ieee802154
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ieee802154
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_IEEE802154
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_wakeup_source 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_40001000_S_ieee802154_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40004000
 *
 * Node identifier: DT_N_S_soc_S_spi_40004000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40004000_PATH "/soc/spi@40004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40004000_FULL_NAME "spi@40004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40004000_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0)
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0)
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0)
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0)
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40004000_ORD 155
#define DT_N_S_soc_S_spi_40004000_ORD_STR_SORTABLE 00155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40004000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/gpio@50000000 */ \
	14, /* /soc/interrupt-controller@e000e100 */ \
	49, /* /pin-controller/spi1_default */ \
	52, /* /pin-controller/spi1_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40004000_SUPPORTS_ORDS \
	156, /* /soc/spi@40004000/at45db641e@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40004000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_spim DT_N_S_soc_S_spi_40004000
#define DT_N_NODELABEL_spi1         DT_N_S_soc_S_spi_40004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40004000_REG_NUM 1
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_VAL_ADDRESS 1073758208 /* 0x40004000 */
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40004000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40004000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_40004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_40004000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40004000_PINCTRL_NUM 2
#define DT_N_S_soc_S_spi_40004000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40004000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40004000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40004000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_spi1_default
#define DT_N_S_soc_S_spi_40004000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_spi_40004000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_spi_40004000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_spi_40004000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_spi1_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40004000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_40004000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_rx_delay_supported 0
#define DT_N_S_soc_S_spi_40004000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg {1073758208 /* 0x40004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_0 1073758208
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts {4 /* 0x4 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_spi1_default
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_spi1_default
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_max_frequency 8000000
#define DT_N_S_soc_S_spi_40004000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_overrun_character 255
#define DT_N_S_soc_S_spi_40004000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_40004000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_IDX_0_VAL_pin 23
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, cs_gpios, 0)
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000, cs_gpios, 0)
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, cs_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000, cs_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_LEN 1
#define DT_N_S_soc_S_spi_40004000_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_status "okay"
#define DT_N_S_soc_S_spi_40004000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40004000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40004000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40004000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, status, 0)
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000, status, 0)
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40004000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, compatible, 0)
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000, compatible, 0)
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40004000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_spi1_sleep
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_spi1_sleep
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, pinctrl_1, 0)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000, pinctrl_1, 0)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_spi_40004000, pinctrl_names, 1)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40004000, pinctrl_names, 1)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40004000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_spi_40004000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/spi@40004000/at45db641e@0
 *
 * Node identifier: DT_N_S_soc_S_spi_40004000_S_at45db641e_0
 *
 * Binding (compatible = atmel,at45):
 *   $ZEPHYR_BASE/dts/bindings/mtd/atmel,at45.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_PATH "/soc/spi@40004000/at45db641e@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_FULL_NAME "at45db641e@0"

/* Node parent (/soc/spi@40004000) identifier: */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_PARENT DT_N_S_soc_S_spi_40004000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_ORD 156
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_ORD_STR_SORTABLE 00156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_REQUIRES_ORDS \
	155, /* /soc/spi@40004000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_EXISTS 1
#define DT_N_ALIAS_spi_flash0     DT_N_S_soc_S_spi_40004000_S_at45db641e_0
#define DT_N_INST_0_atmel_at45    DT_N_S_soc_S_spi_40004000_S_at45db641e_0
#define DT_N_NODELABEL_spi_flash0 DT_N_S_soc_S_spi_40004000_S_at45db641e_0

/* Bus info (controller: '/soc/spi@40004000', type: '['spi']') */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_BUS_spi 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_BUS DT_N_S_soc_S_spi_40004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_REG_NUM 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_COMPAT_MATCHES_atmel_at45 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_COMPAT_VENDOR_IDX_0 "Atmel Corporation"
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_COMPAT_MODEL_IDX_0 "at45"
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id {31 /* 0x1f */, 40 /* 0x28 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_IDX_0 31
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_IDX_1 40
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_IDX_2 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 0) \
	fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 1) \
	fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 2)
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 2)
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, jedec_id, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_LEN 3
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_jedec_id_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_size 67108864
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_size_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_sector_size 262144
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_sector_size_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_sector_0a_pages 8
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_sector_0a_pages_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_block_size 2048
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_block_size_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_page_size 256
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_page_size_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_no_chip_erase 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_no_chip_erase_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_no_sector_erase 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_no_sector_erase_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_use_udpd 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_use_udpd_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_enter_dpd_delay 3000
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_enter_dpd_delay_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_exit_dpd_delay 100000
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_exit_dpd_delay_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_spi_max_frequency 15000000
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_duplex 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_frame_format 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible {"atmel,at45"}
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible_IDX_0 "atmel,at45"
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible_IDX_0_STRING_UNQUOTED atmel,at45
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible_IDX_0_STRING_TOKEN atmel_at45
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ATMEL_AT45
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, compatible, 0)
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, compatible, 0)
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40004000_S_at45db641e_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uart@40002000
 *
 * Node identifier: DT_N_S_soc_S_uart_40002000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE/dts/bindings/serial/nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40002000_PATH "/soc/uart@40002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40002000_FULL_NAME "uart@40002000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40002000_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if)
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if)
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if)
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if)
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40002000_ORD 157
#define DT_N_S_soc_S_uart_40002000_ORD_STR_SORTABLE 00157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40002000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */ \
	54, /* /pin-controller/uart0_default */ \
	57, /* /pin-controller/uart0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40002000_SUPPORTS_ORDS \
	158, /* /soc/uart@40002000/ctr_lte_if */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40002000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uarte DT_N_S_soc_S_uart_40002000
#define DT_N_NODELABEL_uart0         DT_N_S_soc_S_uart_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40002000_REG_NUM 1
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40002000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_uart_40002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_MODEL_IDX_0 "nrf-uarte"
#define DT_N_S_soc_S_uart_40002000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NUM 2
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_uart_40002000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_uart0_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40002000_P_reg {1073750016 /* 0x40002000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts {2 /* 0x2 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_disable_rx 0
#define DT_N_S_soc_S_uart_40002000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_current_speed 115200
#define DT_N_S_soc_S_uart_40002000_P_current_speed_ENUM_IDX 12
#define DT_N_S_soc_S_uart_40002000_P_current_speed_ENUM_VAL_115200_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40002000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_status "okay"
#define DT_N_S_soc_S_uart_40002000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_40002000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_40002000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40002000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_40002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, status, 0)
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, status, 0)
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-uarte
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_uarte
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_UARTE
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, compatible, 0)
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, compatible, 0)
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40002000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_uart0_sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_uart0_sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40002000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_uart_40002000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/uart@40002000/ctr_lte_if
 *
 * Node identifier: DT_N_S_soc_S_uart_40002000_S_ctr_lte_if
 *
 * Binding (compatible = hardwario,ctr-lte-if):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-lte-if.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_PATH "/soc/uart@40002000/ctr_lte_if"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_FULL_NAME "ctr_lte_if"

/* Node parent (/soc/uart@40002000) identifier: */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_PARENT DT_N_S_soc_S_uart_40002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_ORD 158
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_ORD_STR_SORTABLE 00158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_REQUIRES_ORDS \
	4, /* /soc/gpio@50000300 */ \
	6, /* /soc/gpio@50000000 */ \
	157, /* /soc/uart@40002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_EXISTS 1
#define DT_N_INST_0_hardwario_ctr_lte_if DT_N_S_soc_S_uart_40002000_S_ctr_lte_if
#define DT_N_NODELABEL_ctr_lte_if        DT_N_S_soc_S_uart_40002000_S_ctr_lte_if

/* Bus info (controller: '/soc/uart@40002000', type: '['uart']') */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_BUS_uart 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_BUS DT_N_S_soc_S_uart_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_REG_NUM 0
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_IRQ_NUM 0
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_COMPAT_MATCHES_hardwario_ctr_lte_if 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_COMPAT_MODEL_IDX_0 "ctr-lte-if"
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_IDX_0_VAL_pin 7
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_IDX_0_VAL_flags 7
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, reset_gpios, 0)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, reset_gpios, 0)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_LEN 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_reset_gpios_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_IDX_0_VAL_pin 15
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_IDX_0_VAL_flags 7
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, wakeup_gpios, 0)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, wakeup_gpios, 0)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, wakeup_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, wakeup_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_LEN 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_gpios_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status "okay"
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, status, 0)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, status, 0)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_LEN 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible {"hardwario,ctr-lte-if"}
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible_IDX_0 "hardwario,ctr-lte-if"
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-lte-if
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_lte_if
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_LTE_IF
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, compatible, 0)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, compatible, 0)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40002000_S_ctr_lte_if_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uart@40028000
 *
 * Node identifier: DT_N_S_soc_S_uart_40028000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE/dts/bindings/serial/nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40028000_PATH "/soc/uart@40028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40028000_FULL_NAME "uart@40028000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40028000_CHILD_IDX 48

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if)
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if)
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40028000_ORD 159
#define DT_N_S_soc_S_uart_40028000_ORD_STR_SORTABLE 00159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40028000_REQUIRES_ORDS \
	3, /* /soc */ \
	14, /* /soc/interrupt-controller@e000e100 */ \
	59, /* /pin-controller/uart1_default */ \
	62, /* /pin-controller/uart1_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40028000_SUPPORTS_ORDS \
	160, /* /soc/uart@40028000/ctr_lrw_if */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40028000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_uarte DT_N_S_soc_S_uart_40028000
#define DT_N_NODELABEL_uart1         DT_N_S_soc_S_uart_40028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40028000_REG_NUM 1
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_VAL_ADDRESS 1073905664 /* 0x40028000 */
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40028000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40028000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_irq 40
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_uart_40028000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_MODEL_IDX_0 "nrf-uarte"
#define DT_N_S_soc_S_uart_40028000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40028000_PINCTRL_NUM 2
#define DT_N_S_soc_S_uart_40028000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40028000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40028000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40028000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart1_default
#define DT_N_S_soc_S_uart_40028000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_uart_40028000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40028000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_uart_40028000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_uart1_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40028000_P_reg {1073905664 /* 0x40028000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_0 1073905664
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts {40 /* 0x28 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_0 40
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart1_default
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart1_default
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_disable_rx 0
#define DT_N_S_soc_S_uart_40028000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_current_speed 19200
#define DT_N_S_soc_S_uart_40028000_P_current_speed_ENUM_IDX 5
#define DT_N_S_soc_S_uart_40028000_P_current_speed_ENUM_VAL_19200_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40028000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_status "disabled"
#define DT_N_S_soc_S_uart_40028000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40028000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40028000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40028000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_40028000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, status, 0)
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000, status, 0)
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40028000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-uarte
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_uarte
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_UARTE
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, compatible, 0)
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000, compatible, 0)
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40028000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40028000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_uart1_sleep
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_uart1_sleep
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_uart_40028000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40028000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_40028000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_uart_40028000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/uart@40028000/ctr_lrw_if
 *
 * Node identifier: DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if
 *
 * Binding (compatible = hardwario,ctr-lrw-if):
 *   /home/frese/Documents/chester-app/chester/dts/bindings/chester/hardwario,ctr-lrw-if.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_PATH "/soc/uart@40028000/ctr_lrw_if"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_FULL_NAME "ctr_lrw_if"

/* Node parent (/soc/uart@40028000) identifier: */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_PARENT DT_N_S_soc_S_uart_40028000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_ORD 160
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_ORD_STR_SORTABLE 00160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_REQUIRES_ORDS \
	6, /* /soc/gpio@50000000 */ \
	159, /* /soc/uart@40028000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_EXISTS 1
#define DT_N_INST_0_hardwario_ctr_lrw_if DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if
#define DT_N_NODELABEL_ctr_lrw_if        DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if

/* Bus info (controller: '/soc/uart@40028000', type: '['uart']') */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_BUS_uart 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_BUS DT_N_S_soc_S_uart_40028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_REG_NUM 0
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_IRQ_NUM 0
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_COMPAT_MATCHES_hardwario_ctr_lrw_if 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_COMPAT_VENDOR_IDX_0 "HARDWARIO a.s."
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_COMPAT_MODEL_IDX_0 "ctr-lrw-if"
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_IDX_0_VAL_pin 11
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_IDX_0_VAL_flags 7
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, reset_gpios, 0)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, reset_gpios, 0)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, reset_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_LEN 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_reset_gpios_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status "disabled"
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, status, 0)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, status, 0)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_LEN 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible {"hardwario,ctr-lrw-if"}
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible_IDX_0 "hardwario,ctr-lrw-if"
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible_IDX_0_STRING_UNQUOTED hardwario,ctr-lrw-if
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible_IDX_0_STRING_TOKEN hardwario_ctr_lrw_if
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible_IDX_0_STRING_UPPER_TOKEN HARDWARIO_CTR_LRW_IF
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, compatible, 0)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, compatible, 0)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_crypto_5002a000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_4001e000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_ieee802154              DT_N_S_soc_S_radio_40001000_S_ieee802154
#define DT_CHOSEN_zephyr_ieee802154_EXISTS       1
#define DT_CHOSEN_ctr_batt_adc                   DT_N_S_soc_S_i2c_40003000_S_tla2021_4b
#define DT_CHOSEN_ctr_batt_adc_EXISTS            1
#define DT_CHOSEN_ctr_lrw_if                     DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if
#define DT_CHOSEN_ctr_lrw_if_EXISTS              1
#define DT_CHOSEN_ctr_lte_if                     DT_N_S_soc_S_uart_40002000_S_ctr_lte_if
#define DT_CHOSEN_ctr_lte_if_EXISTS              1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154) fn(DT_N_S_soc_S_uart_40002000) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if) fn(DT_N_S_soc_S_i2c_40003000) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60) fn(DT_N_S_soc_S_spi_40003000) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_spi_40004000) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0) fn(DT_N_S_soc_S_nfct_40005000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_timer_40008000) fn(DT_N_S_soc_S_timer_40009000) fn(DT_N_S_soc_S_timer_4000a000) fn(DT_N_S_soc_S_rtc_4000b000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_rtc_40011000) fn(DT_N_S_soc_S_qdec_40012000) fn(DT_N_S_soc_S_comparator_40013000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_timer_4001a000) fn(DT_N_S_soc_S_timer_4001b000) fn(DT_N_S_soc_S_pwm_4001c000) fn(DT_N_S_soc_S_pdm_4001d000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_pwm_40021000) fn(DT_N_S_soc_S_pwm_40022000) fn(DT_N_S_soc_S_spi_40023000) fn(DT_N_S_soc_S_rtc_40024000) fn(DT_N_S_soc_S_i2s_40025000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_uart_40028000) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if) fn(DT_N_S_soc_S_qspi_40029000) fn(DT_N_S_soc_S_pwm_4002d000) fn(DT_N_S_soc_S_spi_4002f000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_soc_S_crypto_5002a000) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2c0_sleep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1) fn(DT_N_S_pin_controller_S_spi1_default) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) fn(DT_N_S_pin_controller_S_spi1_default_S_group2) fn(DT_N_S_pin_controller_S_spi1_sleep) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1) fn(DT_N_S_pin_controller_S_uart1_default) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_pin_controller_S_uart1_default_S_group2) fn(DT_N_S_pin_controller_S_uart1_sleep) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1) fn(DT_N_S_pin_controller_S_pwm0_default) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1) fn(DT_N_S_pin_controller_S_pwm0_sleep) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_sw_pwm) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_btn_int) fn(DT_N_S_gpio_keys_S_btn_ext) fn(DT_N_S_gpio_keys_S_tamper_key) fn(DT_N_S_gpio_leds) fn(DT_N_S_gpio_leds_S_led_r) fn(DT_N_S_gpio_leds_S_led_g) fn(DT_N_S_gpio_leds_S_led_y) fn(DT_N_S_gpio_leds_S_led_ext) fn(DT_N_S_gpio_leds_S_led_load) fn(DT_N_S_pwm_leds) fn(DT_N_S_pwm_leds_S_pwm_led_r) fn(DT_N_S_pwm_leds_S_pwm_led_g) fn(DT_N_S_pwm_leds_S_pwm_led_y) fn(DT_N_S_pwm_leds_S_pwm_led_ext) fn(DT_N_S_vbatt) fn(DT_N_S_ctr_rfmux_interface) fn(DT_N_S_ctr_rfmux_antenna) fn(DT_N_S_ctr_gpio) fn(DT_N_S_ctr_batt) fn(DT_N_S_ctr_rfmux) fn(DT_N_S_ctr_x0_a) fn(DT_N_S_ctr_x0_b) fn(DT_N_S_ctr_x3_a) fn(DT_N_S_ctr_x3_b) fn(DT_N_S_ctr_x4_a) fn(DT_N_S_ctr_x4_b) fn(DT_N_S_ctr_x10)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_power_40000000) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_uart_40002000) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if) fn(DT_N_S_soc_S_i2c_40003000) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10) fn(DT_N_S_soc_S_spi_40004000) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_ccm_4000f000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_pwm_4001c000) fn(DT_N_S_soc_S_acl_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000) fn(DT_N_S_soc_S_ppi_4001f000) fn(DT_N_S_soc_S_mwu_40020000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_soc_S_crypto_5002a000) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2c0_sleep) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1) fn(DT_N_S_pin_controller_S_spi1_default) fn(DT_N_S_pin_controller_S_spi1_default_S_group1) fn(DT_N_S_pin_controller_S_spi1_default_S_group2) fn(DT_N_S_pin_controller_S_spi1_sleep) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1) fn(DT_N_S_pin_controller_S_uart1_default) fn(DT_N_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_pin_controller_S_uart1_default_S_group2) fn(DT_N_S_pin_controller_S_uart1_sleep) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1) fn(DT_N_S_pin_controller_S_pwm0_default) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1) fn(DT_N_S_pin_controller_S_pwm0_sleep) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_btn_int) fn(DT_N_S_gpio_leds) fn(DT_N_S_gpio_leds_S_led_r) fn(DT_N_S_gpio_leds_S_led_g) fn(DT_N_S_gpio_leds_S_led_y) fn(DT_N_S_pwm_leds) fn(DT_N_S_pwm_leds_S_pwm_led_r) fn(DT_N_S_pwm_leds_S_pwm_led_g) fn(DT_N_S_pwm_leds_S_pwm_led_y) fn(DT_N_S_vbatt) fn(DT_N_S_ctr_rfmux_interface) fn(DT_N_S_ctr_rfmux_antenna) fn(DT_N_S_ctr_gpio) fn(DT_N_S_ctr_batt) fn(DT_N_S_ctr_rfmux) fn(DT_N_S_ctr_x0_a)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000_S_ieee802154, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_m8_42, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_44, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_s1_11, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_b_21, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_uart_50, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_uart_51, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a1_46, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_a2_47, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04_b1_4a, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x3_ads122c04b2_4f, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x4_tla2021_49, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x10_tla2024_49, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_sht30_ext_45, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_barometer_tag_60, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, __VA_ARGS__) fn(DT_N_S_soc_S_nfct_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_qdec_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_comparator_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_pdm_4001d000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40023000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40025000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40028000_S_ctr_lrw_if, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4002d000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4002f000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_sw_pwm, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_btn_int, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_btn_ext, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_tamper_key, __VA_ARGS__) fn(DT_N_S_gpio_leds, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_r, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_g, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_y, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_ext, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_load, __VA_ARGS__) fn(DT_N_S_pwm_leds, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_r, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_g, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_y, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_ext, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_ctr_rfmux_interface, __VA_ARGS__) fn(DT_N_S_ctr_rfmux_antenna, __VA_ARGS__) fn(DT_N_S_ctr_gpio, __VA_ARGS__) fn(DT_N_S_ctr_batt, __VA_ARGS__) fn(DT_N_S_ctr_rfmux, __VA_ARGS__) fn(DT_N_S_ctr_x0_a, __VA_ARGS__) fn(DT_N_S_ctr_x0_b, __VA_ARGS__) fn(DT_N_S_ctr_x3_a, __VA_ARGS__) fn(DT_N_S_ctr_x3_b, __VA_ARGS__) fn(DT_N_S_ctr_x4_a, __VA_ARGS__) fn(DT_N_S_ctr_x4_b, __VA_ARGS__) fn(DT_N_S_ctr_x10, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b_S_channel_0, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000, __VA_ARGS__) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi1_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart1_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_btn_int, __VA_ARGS__) fn(DT_N_S_gpio_leds, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_r, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_g, __VA_ARGS__) fn(DT_N_S_gpio_leds_S_led_y, __VA_ARGS__) fn(DT_N_S_pwm_leds, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_r, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_g, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_y, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_ctr_rfmux_interface, __VA_ARGS__) fn(DT_N_S_ctr_rfmux_antenna, __VA_ARGS__) fn(DT_N_S_ctr_gpio, __VA_ARGS__) fn(DT_N_S_ctr_batt, __VA_ARGS__) fn(DT_N_S_ctr_rfmux, __VA_ARGS__) fn(DT_N_S_ctr_x0_a, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_c000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_73000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_da000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f8000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_hardwario_chester_nrf52840 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52840_qiaa 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52840 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ficr 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_uicr 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_clock 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_power 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpregret 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_radio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_uarte 1
#define DT_COMPAT_HAS_OKAY_hardwario_ctr_lte_if 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_twim 1
#define DT_COMPAT_HAS_OKAY_maxim_ds2484 1
#define DT_COMPAT_HAS_OKAY_maxim_ds18b20 1
#define DT_COMPAT_HAS_OKAY_st_lis2dh 1
#define DT_COMPAT_HAS_OKAY_ti_tmp112 1
#define DT_COMPAT_HAS_OKAY_ti_tla2021 1
#define DT_COMPAT_HAS_OKAY_nxp_pcal6416a 1
#define DT_COMPAT_HAS_OKAY_hardwario_ctr_z 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_spim 1
#define DT_COMPAT_HAS_OKAY_atmel_at45 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpiote 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_saadc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_temp 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_rng 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ecb 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ccm 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_wdt 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_egu 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_swi 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_pwm 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_acl 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ppi 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_mwu 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_cc310 1
#define DT_COMPAT_HAS_OKAY_arm_cryptocell_310 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_pinctrl 1
#define DT_COMPAT_HAS_OKAY_zephyr_bt_hci_entropy 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_itm 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_pwm_leds 1
#define DT_COMPAT_HAS_OKAY_voltage_divider 1
#define DT_COMPAT_HAS_OKAY_skyworks_sky13335 1
#define DT_COMPAT_HAS_OKAY_hardwario_ctr_gpio 1
#define DT_COMPAT_HAS_OKAY_hardwario_ctr_batt 1
#define DT_COMPAT_HAS_OKAY_hardwario_ctr_rfmux 1
#define DT_COMPAT_HAS_OKAY_hardwario_ctr_x0 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_hardwario_chester_nrf52840_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52840_qiaa_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52840_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ficr_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_uicr_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_clock_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_power_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpregret_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_radio_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_uarte_NUM_OKAY 1
#define DT_N_INST_hardwario_ctr_lte_if_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_twim_NUM_OKAY 1
#define DT_N_INST_maxim_ds2484_NUM_OKAY 1
#define DT_N_INST_maxim_ds18b20_NUM_OKAY 10
#define DT_N_INST_st_lis2dh_NUM_OKAY 1
#define DT_N_INST_ti_tmp112_NUM_OKAY 1
#define DT_N_INST_ti_tla2021_NUM_OKAY 1
#define DT_N_INST_nxp_pcal6416a_NUM_OKAY 1
#define DT_N_INST_hardwario_ctr_z_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_spim_NUM_OKAY 1
#define DT_N_INST_atmel_at45_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpiote_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_saadc_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_temp_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_rng_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ecb_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ccm_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_wdt_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_egu_NUM_OKAY 6
#define DT_N_INST_nordic_nrf_swi_NUM_OKAY 6
#define DT_N_INST_nordic_nrf_pwm_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_acl_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ppi_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_mwu_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpio_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_cc310_NUM_OKAY 1
#define DT_N_INST_arm_cryptocell_310_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_pinctrl_NUM_OKAY 1
#define DT_N_INST_zephyr_bt_hci_entropy_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_itm_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_pwm_leds_NUM_OKAY 1
#define DT_N_INST_voltage_divider_NUM_OKAY 1
#define DT_N_INST_skyworks_sky13335_NUM_OKAY 2
#define DT_N_INST_hardwario_ctr_gpio_NUM_OKAY 1
#define DT_N_INST_hardwario_ctr_batt_NUM_OKAY 1
#define DT_N_INST_hardwario_ctr_rfmux_NUM_OKAY 1
#define DT_N_INST_hardwario_ctr_x0_NUM_OKAY 1
#define DT_FOREACH_OKAY_hardwario_chester_nrf52840(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_hardwario_chester_nrf52840(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_hardwario_chester_nrf52840(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_hardwario_chester_nrf52840(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52840_qiaa(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52840_qiaa(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52840_qiaa(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52840_qiaa(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52840(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52840(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52840(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52840(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ficr(fn) fn(DT_N_S_soc_S_ficr_10000000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ficr(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ficr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ficr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_uicr(fn) fn(DT_N_S_soc_S_uicr_10001000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_uicr(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_uicr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_uicr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_clock(fn) fn(DT_N_S_soc_S_clock_40000000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_clock(fn, ...) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_power(fn) fn(DT_N_S_soc_S_power_40000000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_power(fn, ...) fn(DT_N_S_soc_S_power_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_power(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_power(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpregret(fn) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpregret(fn, ...) fn(DT_N_S_soc_S_power_40000000_S_gpregret1_4000051c, __VA_ARGS__) fn(DT_N_S_soc_S_power_40000000_S_gpregret2_40000520, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpregret(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpregret(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_radio(fn) fn(DT_N_S_soc_S_radio_40001000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_radio(fn, ...) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_radio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_radio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_uarte(fn) fn(DT_N_S_soc_S_uart_40002000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_uarte(fn, ...) fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_uarte(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_uarte(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_hardwario_ctr_lte_if(fn) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if)
#define DT_FOREACH_OKAY_VARGS_hardwario_ctr_lte_if(fn, ...) fn(DT_N_S_soc_S_uart_40002000_S_ctr_lte_if, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_hardwario_ctr_lte_if(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_hardwario_ctr_lte_if(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_twim(fn) fn(DT_N_S_soc_S_i2c_40003000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_twim(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_twim(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_twim(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_maxim_ds2484(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18)
#define DT_FOREACH_OKAY_VARGS_maxim_ds2484(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_maxim_ds2484(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_maxim_ds2484(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_maxim_ds18b20(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9)
#define DT_FOREACH_OKAY_VARGS_maxim_ds18b20(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_0, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_1, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_2, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_3, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_4, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_5, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_6, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_7, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_8, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000_S_ds2484_18_S_ds18b20_9, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_maxim_ds18b20(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8) fn(9)
#define DT_FOREACH_OKAY_INST_VARGS_maxim_ds18b20(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__) fn(9, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_lis2dh(fn) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19)
#define DT_FOREACH_OKAY_VARGS_st_lis2dh(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_lis2dh12_19, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_lis2dh(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_lis2dh(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_tmp112(fn) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48)
#define DT_FOREACH_OKAY_VARGS_ti_tmp112(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tmp112_48, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_tmp112(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_tmp112(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_tla2021(fn) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b)
#define DT_FOREACH_OKAY_VARGS_ti_tla2021(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_tla2021_4b, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_tla2021(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_tla2021(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nxp_pcal6416a(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20)
#define DT_FOREACH_OKAY_VARGS_nxp_pcal6416a(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_x0_pcal6416a_a_20, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nxp_pcal6416a(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nxp_pcal6416a(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_hardwario_ctr_z(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10)
#define DT_FOREACH_OKAY_VARGS_hardwario_ctr_z(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ctr_z_10, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_hardwario_ctr_z(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_hardwario_ctr_z(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_spim(fn) fn(DT_N_S_soc_S_spi_40004000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_spim(fn, ...) fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_spim(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_spim(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_atmel_at45(fn) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0)
#define DT_FOREACH_OKAY_VARGS_atmel_at45(fn, ...) fn(DT_N_S_soc_S_spi_40004000_S_at45db641e_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_atmel_at45(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_atmel_at45(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpiote(fn) fn(DT_N_S_soc_S_gpiote_40006000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpiote(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpiote(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpiote(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_saadc(fn) fn(DT_N_S_soc_S_adc_40007000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_saadc(fn, ...) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_saadc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_saadc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_temp(fn) fn(DT_N_S_soc_S_temp_4000c000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_temp(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_temp(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_temp(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_rng(fn) fn(DT_N_S_soc_S_random_4000d000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_rng(fn, ...) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_rng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_rng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ecb(fn) fn(DT_N_S_soc_S_ecb_4000e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ecb(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ecb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ecb(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ccm(fn) fn(DT_N_S_soc_S_ccm_4000f000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ccm(fn, ...) fn(DT_N_S_soc_S_ccm_4000f000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ccm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ccm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_wdt(fn) fn(DT_N_S_soc_S_watchdog_40010000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_wdt(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_wdt(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_wdt(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_egu(fn) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_egu(fn, ...) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_egu(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_egu(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_swi(fn) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_swi(fn, ...) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_swi(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_swi(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_pwm(fn) fn(DT_N_S_soc_S_pwm_4001c000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_pwm(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_pwm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_pwm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_acl(fn) fn(DT_N_S_soc_S_acl_4001e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_acl(fn, ...) fn(DT_N_S_soc_S_acl_4001e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_acl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_acl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_4001e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ppi(fn) fn(DT_N_S_soc_S_ppi_4001f000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ppi(fn, ...) fn(DT_N_S_soc_S_ppi_4001f000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ppi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ppi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_mwu(fn) fn(DT_N_S_soc_S_mwu_40020000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_mwu(fn, ...) fn(DT_N_S_soc_S_mwu_40020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_mwu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_mwu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpio(fn) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_cc310(fn) fn(DT_N_S_soc_S_crypto_5002a000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_cc310(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_cc310(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_cc310(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cryptocell_310(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000)
#define DT_FOREACH_OKAY_VARGS_arm_cryptocell_310(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cryptocell_310(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cryptocell_310(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_pinctrl(fn) fn(DT_N_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_pinctrl(fn, ...) fn(DT_N_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_bt_hci_entropy(fn) fn(DT_N_S_entropy_bt_hci)
#define DT_FOREACH_OKAY_VARGS_zephyr_bt_hci_entropy(fn, ...) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_bt_hci_entropy(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_bt_hci_entropy(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_itm(fn) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_itm(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_itm_e0000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_itm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_itm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_gpio_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_gpio_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_pwm_leds(fn) fn(DT_N_S_pwm_leds)
#define DT_FOREACH_OKAY_VARGS_pwm_leds(fn, ...) fn(DT_N_S_pwm_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_pwm_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_pwm_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_voltage_divider(fn) fn(DT_N_S_vbatt)
#define DT_FOREACH_OKAY_VARGS_voltage_divider(fn, ...) fn(DT_N_S_vbatt, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_voltage_divider(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_voltage_divider(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_skyworks_sky13335(fn) fn(DT_N_S_ctr_rfmux_interface) fn(DT_N_S_ctr_rfmux_antenna)
#define DT_FOREACH_OKAY_VARGS_skyworks_sky13335(fn, ...) fn(DT_N_S_ctr_rfmux_interface, __VA_ARGS__) fn(DT_N_S_ctr_rfmux_antenna, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_skyworks_sky13335(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_skyworks_sky13335(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_hardwario_ctr_gpio(fn) fn(DT_N_S_ctr_gpio)
#define DT_FOREACH_OKAY_VARGS_hardwario_ctr_gpio(fn, ...) fn(DT_N_S_ctr_gpio, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_hardwario_ctr_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_hardwario_ctr_gpio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_hardwario_ctr_batt(fn) fn(DT_N_S_ctr_batt)
#define DT_FOREACH_OKAY_VARGS_hardwario_ctr_batt(fn, ...) fn(DT_N_S_ctr_batt, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_hardwario_ctr_batt(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_hardwario_ctr_batt(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_hardwario_ctr_rfmux(fn) fn(DT_N_S_ctr_rfmux)
#define DT_FOREACH_OKAY_VARGS_hardwario_ctr_rfmux(fn, ...) fn(DT_N_S_ctr_rfmux, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_hardwario_ctr_rfmux(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_hardwario_ctr_rfmux(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_hardwario_ctr_x0(fn) fn(DT_N_S_ctr_x0_a)
#define DT_FOREACH_OKAY_VARGS_hardwario_ctr_x0(fn, ...) fn(DT_N_S_ctr_x0_a, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_hardwario_ctr_x0(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_hardwario_ctr_x0(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_hardwario_ctr_lte_if_BUS_uart 1
#define DT_COMPAT_maxim_ds2484_BUS_i2c 1
#define DT_COMPAT_maxim_ds18b20_BUS_w1 1
#define DT_COMPAT_st_lis2dh_BUS_i2c 1
#define DT_COMPAT_ti_tmp112_BUS_i2c 1
#define DT_COMPAT_ti_tla2021_BUS_i2c 1
#define DT_COMPAT_nxp_pcal6416a_BUS_i2c 1
#define DT_COMPAT_hardwario_ctr_z_BUS_i2c 1
#define DT_COMPAT_atmel_at45_BUS_spi 1
